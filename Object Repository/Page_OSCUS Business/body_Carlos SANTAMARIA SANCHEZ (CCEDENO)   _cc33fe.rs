<?xml version="1.0" encoding="UTF-8"?>
<WebElementEntity>
   <description></description>
   <name>body_Carlos SANTAMARIA SANCHEZ (CCEDENO)   _cc33fe</name>
   <tag></tag>
   <elementGuidId>31cf4e07-ebf7-481e-abce-72dcd69c7ef1</elementGuidId>
   <selectorCollection>
      <entry>
         <key>CSS</key>
         <value>body</value>
      </entry>
      <entry>
         <key>XPATH</key>
         <value>//body</value>
      </entry>
   </selectorCollection>
   <selectorMethod>XPATH</selectorMethod>
   <useRalativeImagePath>true</useRalativeImagePath>
   <webElementProperties>
      <isSelected>false</isSelected>
      <matchCondition>equals</matchCondition>
      <name>tag</name>
      <type>Main</type>
      <value>body</value>
      <webElementGuid>3701750f-615a-49c8-8b3a-90210312f491</webElementGuid>
   </webElementProperties>
   <webElementProperties>
      <isSelected>true</isSelected>
      <matchCondition>equals</matchCondition>
      <name>text</name>
      <type>Main</type>
      <value>
    

        
            
        
    
    
        
            
                
                    Carlos SANTAMARIA SANCHEZ (CCEDENO)
                    Jueves 31 de Marzo de 2022
                
                
                    Menu 
                    
                
                Cerrar sesion
            

        
    
    
        
        
            

    
        
            
                
    //Función que calcula la edad
    function calculaEdad(dateString) {
        var birthday = +new Date(dateString);
        return ~~((Date.now() - birthday) / (31557600000));
    }

    //Funciones de navegación de menu izquierda.
    function fnNavegar(opcion) {
        var tieneRolFraternas;
        var id = getUrlParameter('id');
        if (id != null &amp;&amp; id != &quot;&quot; &amp;&amp; id != undefined) {
            
                var urlDatosCliente = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=tipo&quot;;
                $.ajax({
                    url: urlDatosCliente.replace(&quot;{0}&quot;, $('#txtNumeroCliente').val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultConsultaClientes) {
                        
                        if (opcion == 1) {
                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;)
                                    window.location.href = '/OSCUS.Aplicacion/Cliente/DatosGenerales?id=' + id;
                                else if (resultConsultaClientes.value[0].tipo == &quot;A&quot; || resultConsultaClientes.value[0].tipo == &quot;R&quot;)
                                    window.location.href = '/OSCUS.Aplicacion/Cliente/DatosGeneralesJuridico?id=' + id;
                            }
                        }
                        else if (opcion == 2) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosVista?id=' + id;
                        }
                        else if (opcion == 3) {
                            if (codigoUsuarioActual.indexOf('&amp;#209;'))
                                codigoUsuarioActual = codigoUsuarioActual.replace('&amp;#209;', 'Ñ')
                            
                            var urlCodigoRolUsuarioActual = &quot;/OSCUS.Aplicacion/odata/UsuariosRoles?$format=json&amp;$filter=codigoUsuario eq '{0}' and estaActivo eq 0&amp;$select=codigoRol&quot;;
                                    $.ajax({
                                        url: urlCodigoRolUsuarioActual.replace(&quot;{0}&quot;, codigoUsuarioActual),
                                        dataType: &quot;json&quot;,
                                        cache: &quot;false&quot;,
                                        success: function (resultConsultaCodigoRol) {
                                            
                                            if (resultConsultaCodigoRol.value[0] != null &amp;&amp; resultConsultaCodigoRol.value[0] != &quot;&quot; &amp;&amp; resultConsultaCodigoRol.value[0] != undefined) {
                                                
                                                var urlParametrosInversiones = &quot;/OSCUS.Aplicacion/odata/ParametrosInversiones?$format=json&quot;;
                                                $.ajax({
                                                    url: urlParametrosInversiones,
                                                    dataType: &quot;json&quot;,
                                                    cache: &quot;false&quot;,
                                                    success: function (resultParametrosInversiones) {
                                                        
                                                        if (resultParametrosInversiones.value[0] != null &amp;&amp; resultParametrosInversiones.value[0] != &quot;&quot; &amp;&amp; resultParametrosInversiones.value[0] != undefined) {
                                                            if (resultParametrosInversiones.value[0].rolFraternas.trim() == resultConsultaCodigoRol.value[0].codigoRol.trim())
                                                                tieneRolFraternas = 'T'; //T->True
                                                            else
                                                                tieneRolFraternas = 'F';//T->False
                                                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                                              if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                  if (tieneRolFraternas == &quot;T&quot;) {
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert('Restricción', 'Su rol de usuario le permite procesar sólo CDP de Fraternas.', 'warning');
                                                                    return;
                                                                }
                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                    
                                                                    var urlDatosClienteNatural = &quot;/OSCUS.Aplicacion/odata/ClientesNaturales?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=fechaNacimiento&quot;;
                                                                    $.ajax({
                                                                        url: urlDatosClienteNatural.replace(&quot;{0}&quot;, $('#txtNumeroCliente').val()),
                                                                        dataType: &quot;json&quot;,
                                                                        cache: &quot;false&quot;,
                                                                        success: function (resultConsultaClientesNaturales) {
                                                                            
                                                                            if (resultConsultaClientesNaturales.value[0] != null &amp;&amp; resultConsultaClientesNaturales.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientesNaturales.value[0] != undefined) {
                                                                                var edad = calculaEdad(resultConsultaClientesNaturales.value[0].fechaNacimiento);
                                                                                if (edad &lt; mayoriaEdad) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert('Error', 'No puede ser titular un menor de edad.', 'error');
                                                                                    return;
                                                                                }
                                                                                else {
                                                                                    if (resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                                        $.fn.window.defaults.closable = false;
                                                                                        $.messager.alert('Precaución', 'El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.', 'warning');
                                                                                        return;
                                                                                    }
                                                                                    else
                                                                                        window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=' + id;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                              else {
                                                                
                                                                var urlFraternaJurico = &quot;/OSCUS.Aplicacion/odata/ClientesJuridicos?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=esFraterna&quot;;
                                                                $.ajax({
                                                                    url: urlFraternaJurico.replace(&quot;{0}&quot;, $('#txtNumeroCliente').val()),
                                                                    dataType: &quot;json&quot;,
                                                                    cache: &quot;false&quot;,
                                                                    success: function (resultFraterna) {
                                                                        
                                                                        if (resultFraterna.value[0] != null &amp;&amp; resultFraterna.value[0] != &quot;&quot; &amp;&amp; resultFraterna.value[0] != undefined) {
                                                                            if (resultFraterna.value[0].esFraterna == 0) {
                                                                                if (tieneRolFraternas == &quot;T&quot;)
                                                                                     window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=' + id;
                                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert('Restricción', 'Su rol de usuario NO le permite procesar CDP de Fraternas, éstos solo pueden ser procesados en Tesorería.', 'warning');
                                                                                    return;
                                                                                }
                                                                            }
                                                                            else {
                                                                                if (tieneRolFraternas == &quot;T&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert('Restricción', 'Su rol de usuario le permite procesar sólo CDP de Fraternas.', 'warning');
                                                                                    return;

                                                                                }
                                                                                else if (tieneRolFraternas == &quot;F&quot;)
                                                                                    window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=' + id;
                                                                            }
                                                                        }

                                                                    }
                                                                });
                                                            }
                                                          }
                                                        }
                                                        localStorage[&quot;rolParaFraterna&quot;] = tieneRolFraternas;
                                                    }
                                                });
                                            }
                                        }
                                    });
                        }
                        else if (opcion == 4) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/Prestamos?id=' + id;
                        }
                        else if (opcion == 5) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=' + id;
                        }
                        else if (opcion == 6) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=' + id;
                        }
                        else if (opcion == 7) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/Consolidado?id=' + id;
                        }
                        else if (opcion == 8) {
                            window.location.href = '/OSCUS.Aplicacion/Cliente/AsociarCuentasBCE?id=' + id;
                        }
                        else {
                            alert(&quot;Opción no disponible.&quot;);
                        }
                    }
                });
}
}





    
        
            
            Consolidado
        
        
            
            Datos Generales
        
        
            
            Depósitos a la vista
        
        
            
            Depósitos a plazo
        
        
            
            Préstamos
        
        
            
            Servicios financieros
        
        
            
            Servicios no financieros
        
    



            
        
        
            
                
                    
                        DATOS
                        
                            Asesor:
                            
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        Tipo documento:
                                        
                                            
                                            Cédula
                                            Pasaporte
                                        PasaporteCédulaPasaporte
                                    
                                
                                
                                    
                                        Tipo documento:
                                        
                                    
                                
                            
                            
                                
                                    Es menor de edad:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                
                            
                            
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                

                                
                                    
                                    
                                    
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Soltero(a)
                                    
                                
                                
                                    
                                        Estado civil:
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    En Unión Libre:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    Con Disolución Conyugal:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                  
                                
                                
                            
                        
                        
                            
                                
                                    
                                        
                                            
                                                
                                                
                                            
                                        
                                        
                                            
                                                
                                                    Estado civil:
                                                    
                                                        
                                                        Soltero(a)
                                                        Casado(a)
                                                        Viudo(a)
                                                        Divorciado(a)
                                                        Unión libre
                                                    Soltero(a)Soltero(a)Casado(a)Viudo(a)Divorciado(a)Unión libre
                                                
                                                
                                                

                                            
                                        
                                        
                                            
                                                
                                                
                                                    Sexo: 
                                                    
                                                    Hombre
                                                    
                                                    Mujer
                                                
                                            
                                        
                                        
                                            
                                                
                                                  
                                                
                                            
                                        
                                    
                                

                            
                        
                        
                            
                                
                                
                                
                            
                        
                        
                            
                                
                                    
                                        País de Nacimiento:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    

                                    
                                        
                                    
                                    
                                        País donde generó D.I.:
                                        
                                            
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís genera DI...
                                    

                                    
                                        
                                            País de nacimiento:
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Nacionalidad 1:
                                        AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 1...
                                    
                                    
                                        Nacionalidad 2:
                                        Nacionalidad 2..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 2..
                                    
                                    
                                        Nacionalidad 3:
                                        Nacionalidad 3..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 3..
                                    
                                    
                                        Grupo Étnico:
                                        Mestizo/aMontuvio/aDe una nacionalidad o pueblo indígenaMulato/aNegro/aCholo/aAfroecuatoriano/ a AfrodescendienteOtraGrupo Etnico...
                                    
                                
                            
                        
                    
                
                
    const mensajeFactorAltoRiesgo = &quot;El socio presenta Factor de Riesgo Alto, se solicitará información adicional para el Formulario de Debida Diligencia&quot;;
    const mensajeTituloFactorAltoRiesgo = &quot;Factor de Riesgo Alto&quot;;

    $(document).ready(() => {

        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).click(() => {
            if ($(&quot;#divDebidaDiligenciaAmpliada&quot;).is(':visible')) {
                $(this).removeClass(&quot;boldFont&quot;);
            }
            else {
                $(this).addClass(&quot;boldFont&quot;);
            }
        });

        $(&quot;#cbClasificacionActividad&quot;).change((_, params) => ClienteAltoRiesgo(params.selected, $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));
        $(&quot;#cbPaisOrigen&quot;).change((_, params) => ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), params.selected, $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));

        $(&quot;#chkEsCargoEleccion&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );

        $(&quot;#chkEsRelacionPersonaPolitica&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );
    });

    const DebidaDiligenciaAmpliadaAbierto = () => {
        if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1DatosComplementarios&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1DatosComplementarios&quot;).removeClass(&quot;boldFont&quot;);
        }
        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).addClass(&quot;boldFont&quot;);
    }

    const ActividadEconomicaRiesgo = (codigoClasificacionCredito, callback) => {
        const url = &quot;~/odata/ClasificacionesCreditos?$format=json&amp;$filter=codigo eq '{0}' and mayorIncidencia eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoClasificacionCredito),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const PaisNivelRiesgo = (codigoPais, callback) => {
        const url = &quot;~/odata/Paises?$format=json&amp;$filter=codigo eq '{0}' and nivelRiesgo eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPais),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const VerificaListasControl = (codigo, apellidos, nombres, tipoDocumento, callback) => {
        const urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
        $.ajax({
            url: urlListaControl,
            type: &quot;POST&quot;,
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            data: JSON.stringify({
                codigo: codigo,
                apellido: apellidos,
                nombre: nombres,
                estadoCivil: tipoDocumento,
                nivelEducacion: codigoUsuarioActual
            }),
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const EsPep = (codigoPep, callback) => {
        const url = &quot;~/odata/Peps?$format=json&amp;$filter=codigo eq '{0}' &amp;$select=id&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPep),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const ClienteAltoRiesgo = (codigoClasificacionCredito, codigoPais, codigo, tipoDocumento) => {

        let apellidos = $(&quot;#txtApellidos&quot;).val();
        let nombres = $(&quot;#txtNombres&quot;).val();

        if ($(&quot;#cbTipoDocumento&quot;).val() === 'C') {
            apellidos = $(&quot;#txtApellidos&quot;).val();
            nombres = $(&quot;#txtNombres&quot;).val();
        }
        else if ($(&quot;#cbTipoDocumento&quot;).val() === 'P') {
            apellidos = $(&quot;#txtApellidosPasaporte&quot;).val();
            nombres = $(&quot;#txtNombresPasaporte&quot;).val();
        }
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).hide();
        $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val('');
        $(&quot;#txtDescripcionIngresos&quot;).val('');
        $(&quot;#txtDescripcionIngresosConyuge&quot;).val('');
        $(&quot;#txtDescripcionOtrosIngresos&quot;).val('');
        $(&quot;#txtProcedenciaFondos&quot;).val('');
        $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val('');
        $(&quot;#txtDepositosNumeroTransacciones&quot;).val('');
        $(&quot;#txtDepositosMonto&quot;).val('');
        $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val('');
        $(&quot;#txtTransferenciasRecibidasMonto&quot;).val('');
        $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val('');
        $(&quot;#txtTransferenciasEnviadasMonto&quot;).val('');
        $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val('');
        $(&quot;#txtRemesasRecibidasMonto&quot;).val('');
        $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val('');
        $(&quot;#txtRemesasEnviadasMonto&quot;).val('');

        ActividadEconomicaRiesgo(codigoClasificacionCredito, resultClasificacionesCreditos => {
            if (resultClasificacionesCreditos.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        PaisNivelRiesgo(codigoPais, resultPaises => {
            if (resultPaises.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        VerificaListasControl(codigo, apellidos, nombres, tipoDocumento, resultListasControl => {
            if (resultListasControl.Anexo &amp;&amp;
                resultListasControl.Anexo.EstaEnConsepEsSindicadoParaNivelRiesgo ||
                resultListasControl.Anexo.EstaEnListaONU ||
                resultListasControl.Anexo.EstaEnOFAC ||
                resultListasControl.Anexo.EstaEnEmpresasFantasma) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
            else {
                EsPep(codigo, resultEsPep => {
                    if (resultEsPep.value[0]) {
                        MostrarAlertaDebidaDiligencia();
                        return;
                    }
                });
            }
        });

     
        if ($('#chkEsCargoEleccion').is(':checked') || $('#chkEsRelacionPersonaPolitica').is(':checked')) {
            MostrarAlertaDebidaDiligencia();
        }

    };

    const DebidaDiligenciaAmpliada = (numeroCliente, callback) => {
        const url = &quot;~/odata/DescripcionIngresoFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultDebidaDiligenciaAmpliada => callback(resultDebidaDiligenciaAmpliada)
        });
    };

    const VerificaDebidaDiligenciaAmpliada = numeroCliente => {

        DebidaDiligenciaAmpliada(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDescripcionIngresos&quot;).val(result.value[0].descripcionIngresoSC);
                $(&quot;#txtDescripcionIngresosConyuge&quot;).val(result.value[0].descripcionIngresoConyuge);
                $(&quot;#txtDescripcionOtrosIngresos&quot;).val(result.value[0].descripcionValorOtros);
                $(&quot;#txtProcedenciaFondos&quot;).val(result.value[0].procedenciaDeLosFondos);
                MostrarAlertaDebidaDiligencia();
            }
        });
    };

    const TransaccionalidadMesFormDebidaDiligencia = (numeroCliente, callback) => {
        const url = &quot;~/odata/TransaccionalidadMesFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultTransaccionalidadMesFormDebidaDiligencia => callback(resultTransaccionalidadMesFormDebidaDiligencia)
        });
    };

    const VerificaTransaccionalidadMesFormDebidaDiligencia = numeroCliente => {

        TransaccionalidadMesFormDebidaDiligencia(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDepositosNumeroTransacciones&quot;).val(result.value[0].cantidadDepositos);
                $(&quot;#txtDepositosMonto&quot;).val(result.value[0].montoTotalDepositos);
                $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasRecibidas);
                $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(result.value[0].montoTotalTransferenciasRecibidas);
                $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasEnviadas);
                $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(result.value[0].montoTotalTransferenciasEnviadas);
                $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasRecibidas);
                $(&quot;#txtRemesasRecibidasMonto&quot;).val(result.value[0].montoTotalRemesasRecibidas);
                $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasEnviadas);
                $(&quot;#txtRemesasEnviadasMonto&quot;).val(result.value[0].montoTotalRemesasEnviadas);
            }
        });
    };

    const IngresosSC = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 1) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosConyuge = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 2) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosOtros = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if ((record.numeroVerificador === 1) &amp;&amp; (record.codigoItem === 3 || record.codigoItem === 4 || record.codigoItem === 5 || record.codigoItem === 6)) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const MostrarAlertaDebidaDiligencia = () => {
        if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;)) {
            return;
        }
        $.messager.alert(mensajeTituloFactorAltoRiesgo, mensajeFactorAltoRiesgo, 'info');
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).show();
    };




    
        
            INFORMACIÓN REQUERIDA PARA DEBIDA DILIGENCIA AMPLIADA
        
    
    
        
            
            
                
            
            
                
                    
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    TRANSACCIONALIDAD MENSUAL
                    
                
            
            
                
                    
                
            
            
                
                
                
                    N° de Transacciones MENSUALES
                
                
                    Monto
                
            
            
                
                    Depósitos
                
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Enviadas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Enviadas
                
                
                    
                
                
                    
                
            
        
    



                
                    
                        DIRECCIÓN
                    
                
                
                    
                        
                            
                                
                                    País de Residencia:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                            
                                
                                    Dirección Domicilio Exterior
                                    
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    Es migrante:
                                    
                                        
                                        
                                    
                                

                                
                                    Nacionalidad Americana:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                            
                        
                        
                            
                                
                                    
                                        Provincia reside:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        Provincia reside:
                                        
                                    
                                

                                
                                    
                                        Cantón reside:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Cantón reside:
                                        
                                    
                                


                                
                                    
                                        Parroquia reside:
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        Parroquia reside:
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                          
                                        
                                    
                                
                            
                            
                                
                                    
                                        Tipo vivienda:
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        Tipo vivienda:
                                        
                                    
                                
                            
                            
                        
                        
                            
                                ¿Es residente fiscal en Ecuador?: 
                                
                                SI
                                
                                NO
                            
                        
                        
                            
                                
                                    Tributa en el exterior?:
                                    
                                        
                                        
                                    

                                    

                                
                                
                                    País Obligación Tributaria:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria...
                                
                            
                        

                        
                            
                                
                                    Tributa en el exterior 2?:
                                    
                                        
                                        
                                    
                                    
                                
                                
                                    País Obligación Tributaria 2:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria 2...
                                
                            
                        
                    
                
                
                    
                        GEOREFERENCIACION DOMICILIO
                    
                
                
                    
                        
                            
                                
                                
                            
                        
                    
                
                
                    
                        OCUPACIÓN
                    
                
                
                    
                        
                            
                                
                                    
                                        Educación:
                                        
                                            
                                            Sin Estudios
                                            Formación intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                                
                                    
                                        Educación:
                                        
                                    
                                
                            
                            
                                
                                    
                                        Establecimiento:
                                        
                                            
                                        Establecimiento...
                                    
                                
                                
                                    
                                        Profesión SBS:
                                        Arquitectos y afinesCiencias Administrativas y EconómicasCiencias de la educaciónCiencias socialesDerechoIngeniería y Ciencias exactasMédicos, Biólogos, Veterinarios y otros profesionales de la saludPeriodistasPolicías, militares (fuerza pública)Profesión...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Ocupación:
                                        ABACERO                                           ABOGADO                                           ACEITADOR                                         ACOMODADOR DE CINE                                ACROBATA                                          ACTOR                                             ACTRIZ                                            ACTUARIO                                          ACUICULTOR                                        ADMINISTRADOR                                     ADMINISTRADOR AGRICOLA                            ADMINISTRADOR DE COMERCIO                         ADMINISTRADOR DE CORREOS                          ADMINISTRADOR DE EMPRESAS                         ADMINISTRADOR DE FABRICAS                         ADMINISTRADOR DE HOTEL                            ADMINISTRADOR PUBLICO                             ADOBERO                                           AFILADOR                                          AGENTE COMP. NAVIERA                              AGENTE DE ADUANA                                  AGENTE DE BIENES RAICES                           AGENTE DE PUBLICIDAD                              AGENTE DE SEGUROS                                 AGENTE DE TURISMO                                 AGENTE JUDICIAL                                   AGENTE R. COMERCIAL                               AGENTE VIAJERO                                    AGRICULTOR                                        AGRIMESOR                                         AGRONOMO                                          AGUATERO                                          AJUST. DE SINIESTROS                              ALBAÑIL                                           ALFABETIZADOR                                     ALFARERO                                          ALFOMBRERO                                        ALPARGATERO                                       ALPINISTA                                         AMA DE CASA                                       AMA DE LLAVES                                     AMANUENSE                                         ANALISTA                                          ANALISTA DE SISTEMAS                              ANTROPOLOGO                                       APARADOR DE CALZADO                               APICULTOR                                         APLANCHADORA                                      APODERADO                                         APRENDIZ                                          APURADOR                                          ARBITRO                                           ARCHIVERO                                         ARQUEOLOGO                                        ARQUITECTO                                        ARRIERO                                           ARTESANO                                          ARTISTA                                           ASCENSORISTA                                      ASERRADOR                                         ASESOR                                            ASISTENTE                                         ASISTENTE GERENCIA                                ASISTENTE PEDIATRIA                               ASTRONOMO                                         ATLETA                                            AUDITOR                                           AUTOMETRISTA                                      AUTOR                                             AUTOR COMPOSITOR                                  AUXILIAR                                          AUXILIAR DE CONTABILIDAD                          AUXILIAR ENFERMERIA                               AUXILIAR SECRETARIA                               AVALUADOR                                         AVIADOR CIVIL                                     AVIADOR COMERCIAL                                 AVIADOR MILITAR                                   AVIADOR NAVAL                                     AVICULTOR                                         AYUDANTE                                          AZAFATA                                           BACHILLER                                         BACHILLER AGROPECUARIO                            BACHILLER ARTES PLASTICAS                         BACHILLER CIENCIAS EDUCACION                      BACHILLER SECRETARIADO                            BACHILLER TECNICO                                 BACHILLER TECNICO INDUCTRIAL                      BAILARIN                                          BALANCERO                                         BALDOSERO                                         BANANERO                                          BANQUERO                                          BARRENDERO                                        BIBLIOTECARIO/A                                   BIBLIOTECOLOGO                                    BIOLOGO                                           BIOQUIMICO                                        BIOQUIMICO FARMACEUTICO                           BISELADOR                                         BLANQUEADOR                                       BODEGUERO                                         BOLETERO                                          BOMBERO                                           BORDADOR                                          BOTANICO                                          BOTICARIO                                         BOXEADOR                                          BRACERO                                           BREQUERO                                          BUZO                                              CADENERO                                          CAFETERO                                          CAJERO                                            CALCULISTA                                        CALDERERO                                         CALIGRAFO                                         CAMARERO                                          CAMAROGRAFO                                       CANASTERO                                         CANILLITA                                         CANTANTE                                          CANTERO                                           CANTINERO / BAR MAN                               CAPATAZ                                           CARBONERO                                         CARGADOR                                          CARNICERO                                         CARPINTERO                                        CARRETONERO                                       CARROCERO                                         CARTERO                                           CARTOGRAFO                                        CARTONERO                                         CATADOR                                           CAUCHERO                                          CAZADOR                                           CEDACERO                                          CEGARRERO                                         CERAMISTA                                         CERRAJERO                                         CERVECERO                                         CHEFF                                             CHOCOLATERO                                       CHOFER PROFESIONAL                                CINEASTA                                          CIRUJANO                                          CITOLOGO                                          CLASIFICADOR                                      CLASIFICADOR DE BANANO                            COBRADOR DE PASAJE                                COCINERA                                          COLCHONERO                                        COLECTOR                                          COLOCADOR DE VIDRIOS                              COMERCIANTE                                       COMETOLOGO                                        COMISARIO                                         COMISIONISTA                                      CONDUCTOR                                         CONFITERO                                         CONSERJE                                          CONSERJERO SOCIAL                                 CONSTRUCTOR                                       CONTADOR                                          CONTADOR BACHILLER                                CONTADOR BANCARIO                                 CONTRATISTA                                       CONTROLADOR                                       CONTROLADOR TRAFICO AERERO                        COOPERATIVISTA                                    CORREO/BIENES RAICES                              CORRESPONSAL                                      CORTADOR                                          COSEDOR                                           COSTURERA                                         CRIMINOLOGO                                       CRITICO                                           CRONISTA                                          CURTIDOR                                          DACTILOGRAFO                                      DAMA DE COMPANIA                                  DEALER DE CASINO                                  DECORADOR                                         DEM. BELLEZA                                      DEPENDIENTE                                       DEPORTISTA                                        DESCARNADOR                                       DESMOTADOR                                        DESPACHADOR                                       DESTILADOR                                        DETECTIVE                                         DIBUJANTE                                         DIETISTA                                          DIGITADOR                                         DIPLOMATICO                                       DIRECTOR                                          DIRECTOR TECNICO                                  DISEÑADOR                                         DISTRIBUIDOR                                      DOMADOR                                           DORADOR                                           DR. ADMINISTRACION                                DR. BIOQUIMICO Y FARMACEUTICO                     DR. CC. NATURALES                                 DR. CC. POLITICAS                                 DR. CONTABILIDAD                                  DR. ECONOMIA                                      DR. EN AGRONOMIA                                  DR. EN BIOLOGIA                                   DR. EN DERECHO                                    DR. EN DERECHO INTERNACIONAL                      DR. EN EDUCACION                                  DR. EN JURISPRUDENCIA                             DR. EN LINGUISTICA                                DR. EN MATEMATICAS                                DR. EN PSICOLOGIA                                 DR. EN QUIMICA                                    DR. FILOSOFIA Y LETRAS                            DR. MEDICINA                                      DR. MEDICINA VETERINARIA                          DR. NUTRICION HUMANA                              DR. PSICOLOGIA CLINICA                            DR. PSICOLOGIA INDUSTRIAL                         DR. PSICOLOGIA JURIDICA                           DR. QUIMICA FARMACIA                              DR. QUIMICO INDUSTRIAL                            DULCERO                                           EBANISTA                                          ECONOMISTA                                        ECONOMO                                           EDUCADOR PARVULARIO                               EGRESADO/A                                        EJECUTIVO                                         ELECTRICISTA                                      ELECTROTIPISTA                                    EMBALZAMADOR                                      EMBAZADOR                                         EMBELLECEDOR                                      EMBOTELLADOR                                      EMPACADOR                                         EMPALMADOR                                        EMPAQUETADOR                                      EMPLEADA DOMESTICA                                EMPLEADO                                          EMPLEADO BANCARIO                                 EMPLEADO PARTICULAR                               EMPLEADO PRIVADO                                  EMPLEADO PUBLICO                                  EMPLEADOR                                         EMPRESARIO                                        ENCERADOR                                         ENCHAPADOR                                        ENCUADERNADOR                                     ENDEREZADOR                                       ENFERMERO/A                                       ENLADRILLADOR                                     ENLATADOR                                         ENLOSADOR                                         ENTEJADOR                                         ENTRENADOR                                        EQUITADOR                                         ESCOBERO                                          ESCRIBANO                                         ESCRITOR                                          ESCULTOR                                          ESTADISTICO                                       ESTEREOTIPISTA                                    ESTIBADOR                                         ESTILISTA                                         ESTIQUETADOR                                      ESTUDIANTE                                        ESTUQUERO                                         EXPERTO                                           EXPLORADOR                                        FARACEUTICO                                       FERROVIARIO                                       FIERRERO                                          FILOLOGO                                          FISCAL                                            FISCALIZADOR                                      FISICO                                            FISIOTERAPISTA                                    FLORICULTOR                                       FLORISTERI                                        FOGONERO                                          FONDERO                                           FONTANERO                                         FORESTAL                                          FOTOGRABADOR                                      FOTOGRAFO                                         FOTOGRAMETRISTA                                   FOTOMECANICO                                      FUMIGADOR                                         FUNDIDOR EN GENERAL                               FUTBOLISTA                                        GALVANIZADOR                                      GANADERO                                          GASFITERO                                         GEOLOGO                                           GERENTE                                           GINECOLOGO                                        GRABADOR EN GENERAL                               GRAFICO PRENSISTA                                 GUARDA FORESTAL                                   GUARDA ROPAS                                      GUARDIA                                           GUARDIAN                                          GUIA TURISTICO                                    HACHERO                                           HELADERO                                          HERBOLOGO                                         HERRERO                                           HILANDERO                                         HIPNOTIZADOR                                      HISTORIADOR                                       HOJALATERO                                        HORNERO                                           HORTELANO                                         HORTICULTOR                                       HOSTELERO                                         HOTELERO                                          IMPORTADOR                                        IMPRESOR                                          INDUSTRIAL                                        ING. AERONAUTICO                                  ING. AGRICOLA                                     ING. AGRONOMO                                     ING. BURSATIL                                     ING. CIVIL                                        ING. COMERCIAL                                    ING. DE AUDIO                                     ING. DE EMPRESAS                                  ING. DE MINAS                                     ING. DE PETROLEOS                                 ING. DE SISTEMAS                                  ING. DE VUELO                                     ING. ELECTRICO                                    ING. ELECTRICO                                    ING. EN ALIMENTOS                                 ING. EN INFORMATICA                               ING. FORESTAL                                     ING. GEOGRAFO                                     ING. GEOLOGO                                      ING. HIDROGEOLOGIA MINERO                         ING. HIDROLOGO                                    ING. IND. AGROPECUARIA                            ING. INSDUSTRIAL                                  ING. MECANICO                                     ING. METEOROLOGO                                  ING. QUIMICO                                      ING. ZOOTECNISTA                                  INGENIERO                                         INGENIERO NAVAL                                   INGENIERO TEXTIL                                  INSPECTOR                                         INSTRUCTOR                                        INSTRUM. QUIRURGICO                               INTERMEDIARIO                                     INTERPRETE                                        INTROD. GANADO                                    INTRUM. INDUSTRIAL                                INVERSIONISTA                                     INVESTIGADOR PRIVADO                              JABONERO                                          JARDINERO                                         JEFE EN GENERAL                                   JIFERO                                            JOCKEY                                            JUBILADO                                          JUEZ                                              LABORATORISTA                                     LADRILLERO                                        LAMINADOR                                         LANCHERO                                          LAQUEADOR                                         LATONERO                                          LAVANDERO/A                                       LEÑADOR                                           LIBRERO                                           LIC. /ENFERMERIA                                  LIC. ADMINIS. EMPRESAS                            LIC. ADMINIS. PUBLICA                             LIC. CC. COM. SOCIAL                              LIC. CC. EDUCACION                                LIC. CC. INFORMATICA                              LIC. CC. PUB. Y SOC.                              LIC. COMERCIO EXTRANJERO                          LIC. CONTABILIDAD Y AUDITORIA                     LIC. COSTOS INDUSTRIALES                          LIC. EN BANCA                                     LIC. EN ESTADISTICA                               LIC. EN LINGUISTICA                               LIC. EN NUTRICION Y DIETETICA                     LIC. EN SOCIOLOGIA                                LIC. PSICOLOGIA                                   LIC. RECREACION INFANTIL                          LIC. RELACIONES PUBLICAS                          LIC. SERVICIO SOCIAL                              LICENCIADO/A                                      LIMPIABOTAS                                       LIMPIADOR                                         LINGUISTA                                         LINOTIPISTA                                       LITERATO                                          LITOGRAFO                                         LOCUTOR                                           LOTERO                                            MACANERA                                          MADERERO/A                                        MAESTRA CONFECCION INDUSTRIAL                     MAESTRA CORTE CONFECCION                          MAESTRO/A BELLEZA                                 MAESTRO/A ELECT/INDUSTR.                          MAESTRO/A EN ARTES                                MAESTRO/A IMPRESOR                                MAESTRO/A PLANIFICADOR                            MAESTRO/A SASTRERIA                               MAGISTRADO                                        MANICURISTA                                       MANTEQUERO                                        MANTEQUILLADOR                                    MANUFACTURERO                                     MAQUINISTA                                        MARINERO                                          MARINO DE GUERRA                                  MARINO MERCANTE                                   MARMOLERO                                         MASAJISTA                                         MASTER C. FILOSOFICAS                             MASTER CC. EDUCACION                              MASTER CC. HISTORICAS                             MASTER ELECTRONICA                                MASTER EN ECONOMIA                                MASTER EN FISICA                                  MATARIFE                                          MATEMATICO                                        MATRICERO                                         MAYORDOMO                                         MECANICO                                          MECANICO AUTOMOTRIZ                               MECANICO DE PRECISION                             MECANICO DE VUELO                                 MECANICO DENTAL                                   MECANICO INDUSTRIAL                               MECANICO MANTENIMIENTO AVIONES                    MECANICO ORTOPEDICO                               MECANNICO HELICOPTEROS                            MECANOGRAFO                                       MEDICO                                            MEDICO VETERINARIO                                MENSAJERO                                         MESERO                                            METALURGICO                                       METEREOLOGO                                       MILITAR                                           MILITAR EN SERVICIO PASIVO                        MIMIOGRAFISTA                                     MINERO                                            MISIONERO                                         MODELADOR                                         MODELO                                            MODISTA                                           MOLDEADOR                                         MOLINERO                                          MONJA                                             MOTONIVELADOR                                     MOTORISTA                                         MOZO RESTAURANTE                                  MUEBLISTA                                         MUSEOLOGO/S                                       MUSICO                                            NATURALISTA                                       NAVEG. AVIACION                                   NEGOCIANTE                                        NIÑERA                                            NINGUNA                                           NINGUNA                                           NIQUELADOR                                        NIVELADOR                                         NOTARIO                                           OBRERO                                            OBSTETRIZ                                         OCULISTA                                          ODONTOLOGO                                        OFICIAL DE BOMBEROS                               OFICINISTA                                        OPERADOR                                          OPERADOR DE SISTEMAS                              OPERADOR EQUIPO PESADO                            OPERADOR MAQUINA AGRICOLAS                        OPERARIO                                          OPTALMOLOGO                                       OPTICO                                            OPTOMETRISTA                                      ORDENADOR                                         ORFEBRE                                           ORIENTADOR VOCACIONAL PROFESOR                    ORTOPEDICO                                        OTRAS ACTIVIDADES                                 OVICULTOR                                         PAGADOR                                           PAILERO                                           PALEOLOGO                                         PALEONTOLOGO                                      PANADERO                                          PANTALONERO                                       PARTERA                                           PASTELERO                                         PASTOR                                            PATRON COSTANERO                                  PEDICURISTA                                       PEINADOR                                          PELETERO                                          PELUQUERO                                         PEON                                              PEQUEÑO INDUSTRIAL                                PERFORADOR                                        PERIODISTA                                        PERITO                                            PERITO ELECTRICISTA                               PERITO FORESTAL                                   PERITO GEOMENSOR                                  PESCADOR                                          PETROLERO                                         PH. D CC. TECNICAS                                PH. D EN QUIMICA                                  PICADORES                                         PICAPEDRERO                                       PILOTO                                            PILOTO HELICOPTEROS                               PINTOR                                            PINTOR ESCULTOR                                   PIROTECNICO                                       PISCICULTOR                                       PLANCHADOR                                        PLANTADOR                                         PLATERO                                           PLENIPOTENCIARIO                                  PLOMERO                                           POLICIA                                           POLICIA ADUANERO                                  POLICIA JUDICIAL                                  POLICIA MUNICIPAL                                 POLICIA SERVICIO PASIVO                           PORTERO                                           POSILLERO                                         POSTILLON                                         PRACTICO AGRICOLA                                 PRECEPTOR                                         PRENSISTA                                         PRESBITERO                                        PRESTAMISTA                                       PROCURADOR                                        PRODUCTOR                                         PRODUCTOR T.V.                                    PROFESIONAL EN GENERAL                            PROFESOR                                          PROFESOR EN GENERAL                               PROGRAMADOR DE COMPUTADOR                         PROMOTOR  COMERCIO EXTRANJERO                     PROVEEDOR                                         PROYECTISTA                                       PSICOLOGO                                         PSICOLOGO CLINICO                                 PSIQUIATRA                                        PUBLICISTA                                        PULIDOR                                           QUESERO                                           QUIMICO FARMACEUTICO                              QUIROGRAFO                                        QUIROPEDISTA                                      QUMICO                                            RADIODIFUSOR                                      RADIOLOGO                                         RADIOPERADOR                                      RADIOTECNICO                                      RADIOTELEFONISTA                                  RADIOTELEGRAFISTA                                 RECAUDADOR                                        RECAUDADOR R. TELEF.                              RECEPCIONISTA                                     RECORREDOR                                        REDACTOR                                          REGENTE                                           REGISTRADOR                                       RELACIONISTA                                      RELIGIOSO                                         RELOJERO                                          REMACHADOR                                        REMALLADOR                                        REMATADOR                                         RENTISTA                                          REPARADOR                                         REPARTIDOR                                        REPORTERO                                         REPORTERO GRAFICO                                 REPOSTERO                                         REPRESENTANTE                                     REPRESENTANTE DE VENTAS                           REPRESENTANTE OBRAS DE ARTE                       RETIRADO                                          RETOCADOR                                         ROTOGRABADOR                                      ROTULADOR                                         SACERDOTE                                         SACRISTAN                                         SALONERO                                          SASTRE                                            SECRETARIO/A                                      SECRETARIO/A BILINGUE                             SECRETARIO/A EJECUTIVO/A                          SELLADOR                                          SERIGNOFISTA                                      SERIGRAFO                                         SERISCICULTOR                                     SERVICULTOR                                       SIFONERO                                          SINDICO                                           SIRVIENTE                                         SOBRESTANTE                                       SOCIOLOGO                                         SOGUERO                                           SOLDADOR                                          SOMBRERERO                                        SPULTURERO                                        SR. EN OPTOMETRIA                                 SUBASTADOR                                        SUPERVISOR                                        TABACALERO                                        TABERNERO                                         TALABARTERO                                       TALLADOR                                          TAMIGRAFO                                         TAPIZADOR                                         TAQUIGRAFO                                        TAQUIMECANOGRAFO/A                                TAXIDERMISTA                                      TCNL. COMUNICACIONES                              TCNL. CONSTRUCCION CIVIL                          TCNL. COOP. TRANSITO                              TCNL. COSTOS INDUTRIAL.                           TCNL. DISEÑADOR INTERIOR                          TCNL. ELECTROMECANICO                             TCNL. MANTENIMIENTO INDUSTRIAL                    TCNL. TERAP. LENGUAJE                             TEC. INSTRUMENTA. QUIRURGICA                      TEC. MECANICO INDUSTRIAL                          TEC. SUP. ADMINIS. FINCAS                         TEC. SUP. MECANICO AUTOMOTRIZ                     TEC. SUP. NUTRICION ANIMAL                        TEC. SUP. OPTOMETRIA                              TECNICO                                           TECNICO AGRONOMO                                  TECNICO AGROPECUARIO                              TECNICO ANALISTA DE SISTEMAS                      TECNICO AUTOMOTRIZ                                TECNICO CONSTRUCCION                              TECNICO CRIPTOGRAFICO                             TECNICO ELECTRICISTA                              TECNICO ELECTRONICA                               TECNICO EN LECHERIA                               TECNICO EN REFRIGERACION                          TECNICO EN SEGUROS                                TECNICO EN TURISMO                                TECNICO MATRICERO                                 TECNICO OPERADOR DE VUELO                         TECNICO REDES TELEFONICAS                         TECNICO TEXTIL                                    TECNOGOLO EN PETROLEOS                            TECNOLOGO                                         TECNOLOGO ELECTRICO                               TECNOLOGO ELECTRONICO                             TECNOLOGO EN COMPUTACION                          TECNOLOGO EN MINAS                                TECNOLOGO EN RECREA. INFANTIL                     TECNOLOGO INDUSTRIAL                              TECNOLOGO MECANICO                                TECNOLOGO MEDICO                                  TEJEDOR                                           TELEFONISTA                                       TELEGRAFISTA                                      TELEPATA                                          TEÑIDOR                                           TERAPEUTA                                         TERAPISTA EN LEGUAJE                              TERAPISTA OCUPACIONAL                             TERCENISTA                                        TESORERO                                          TINTORERO                                         TIPOGRAFO                                         TOPOLOGO                                          TOQUILLERO                                        TORERO                                            TORNERO                                           TRABAJADOR                                        TRABAJADOR SOCIAL                                 TRACTORISTA                                       TRADUCTOR                                         TRAMOYISTA                                        TRANSMISOR                                        TRIPULANTE                                        VACUNADOR                                         VAQUERO                                           VELADOR                                           VENDEDOR                                          VETERINARIO                                       VIDRIERO                                          VIGILANTE                                         VINICULTOR                                        VISITADOR MEDICO                                  VISITADOR SOCIAL                                  VITICULTOR                                        VIVANDERA                                         VOCEADOR                                          VULCANIZADOR                                      XILOGRAFO                                         YESERO                                            ZAPATERO                                          ZOOLOGO                                           ZOOTECNICO                                        Ocupación...
                                    
                                
                                
                                    
                                        Ocupación:
                                        
                                    
                                
                            
                            
                                
                                    Origen ingresos:
                                    
                                        
                                        Ama de casa
                                        Empleado privado
                                        Empleado público
                                        Independiente
                                        Jubilado pensionista
                                        Remesas exterior 
                                        Rentista 
                                        Ninguno
                                    Ingresos...
                                
                            
                        
                        
                            
                                
                                    
                                        Grupo económico:
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo...
                                    
                                
                                
                                    
                                        Grupo económico:
                                        
                                    
                                

                            
                        
                        
                            
                                
                                    
                                        Clasificación actividad:
                                        
                                            
                                        Actividad...
                                    
                                
                                
                                    
                                        Clasificación actividad:
                                        
                                    
                                
                            
                        
                    
                    
    $(document).ready(() => {
        $('#telefonoPublicoNegocioPropio').empty();
        $.each(codigosArea, (key, value) => $('#telefonoPublicoNegocioPropio').append('&lt;option value=' + key + '>' + value + '&lt;/option>'));
        $('#telefonoPublicoNegocioPropio').val('');
    });
    const TieneNegocioPropio = (ocupacion, origenIngresos) => ocupacion !== &quot;245&quot; &amp;&amp; origenIngresos === &quot;I&quot;;

    const EsNegocioLocal = (codigoPais) => codigoPais === &quot;EC&quot;;

    const MuestraDatosNegocioPropio = (ocupacion, origenIngresos, numeroCliente) => {
        if (TieneNegocioPropio(ocupacion, origenIngresos)) {
            $(&quot;#divNegocioPropio&quot;).show();
            CargaDatosNegocioPropio(numeroCliente).success((result) => {
                if (result.value.length > 0) {
                    const codigoProvincia = result.value[0].codigoProvincia ? result.value[0].codigoProvincia.trim() : 0;
                    const secuencialCanton = result.value[0].secuencialCanton || 0;
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val(result.value[0].secuencial);
                    $(&quot;#txtRucNegocioPropio&quot;).val(result.value[0].ruc);
                    $(&quot;#txtNombreNegocioPropio&quot;).val(result.value[0].nombreNegocio);
                    CargaPaisNegocioPropio(result.value[0].codigoPais);
                    $(&quot;#txtEstadoNegocioPropio&quot;).val(result.value[0].estado);
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val(result.value[0].telefonoExterior);
                    CargaProvinciaNegocioPropio(codigoProvincia);
                    CargaCantonesNegocioPropio(codigoProvincia, secuencialCanton);
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val(result.value[0].telefono);
                    $(&quot;#txtCelularNegocioPropio&quot;).val(result.value[0].celular);
                    $(&quot;#txtDireccionNegocioPropio&quot;).val(result.value[0].direccion);
                    $(&quot;#txtCargoNegocioPropio&quot;).val(result.value[0].cargo);
                }
                else {
                    CargaPaisNegocioPropio(0);
                    CargaProvinciaNegocioPropio(0);
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val('');
                    $(&quot;#txtRucNegocioPropio&quot;).val('');
                    $(&quot;#txtNombreNegocioPropio&quot;).val('');
                    $(&quot;#txtEstadoNegocioPropio&quot;).val('');
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val('');
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val('');
                    $(&quot;#txtCelularNegocioPropio&quot;).val('');
                    $(&quot;#txtDireccionNegocioPropio&quot;).val('');
                    $(&quot;#txtCargoNegocioPropio&quot;).val('');
                }
            });
        }
        else {
            $(&quot;#divNegocioPropio&quot;).hide();
        }
    };

    const ValidaProvinciaNegocioPropio = (cb) => {
        if (cb.value) {
            
            //Se ingresan datos en comboBox de Cantones
            const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq '{0}' &amp;$orderby=nombre&quot;;
            $.ajax({
                url: urlCantones.replace(&quot;{0}&quot;, cb.value),
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: (resultCantones) => {
                    $('#cbCantonNegocioPropio').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                    $.each(resultCantones.value,  (_, value) => {
                        $(&quot;#cbCantonNegocioPropio&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                    });
                    $(&quot;#cbCantonNegocioPropio&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    
                }
            });
        }
    };

    const VerificaPaisNegocioPropio = (cb) => {
        if (EsNegocioLocal(cb)) {
            $(&quot;.NegocioLocal&quot;).show();
            $(&quot;.NegocioExtranjero&quot;).hide();
        }
        else {
            $(&quot;.NegocioLocal&quot;).hide();
            $(&quot;.NegocioExtranjero&quot;).show();
        }
    };

    const CargaDatosNegocioPropio = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DatoNegocioPropio?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,ruc,nombreNegocio,codigoPais,estado,telefonoExterior,codigoProvincia,secuencialCanton,telefono,celular,direccion,cargo&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };

    const CargaProvinciaNegocioPropio = (codigo) => {
        
        const urlProvincias = &quot;~/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlProvincias,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultProvincias) => {
                $('#cbProvinciaNegocioPropio').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultProvincias.value, (_, value) => {
                    $(&quot;#cbProvinciaNegocioPropio&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbProvinciaNegocioPropio&quot;).val(codigo || 0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });

    };

const CargaCantonesNegocioPropio = (codProvincia, codigoCanton) => {
    if (codProvincia) {
        
        const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq '{0}' &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvincia),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultCantones) => {
                $('#cbCantonNegocioPropio').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultCantones.value, (_, value) =>{
                    $(&quot;#cbCantonNegocioPropio&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbCantonNegocioPropio&quot;).val(codigoCanton||0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}
const CargaPaisNegocioPropio = (codigoPais) => {
        const urlPaisNegocioPropio = &quot;~/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
        
        $.ajax({
            url: urlPaisNegocioPropio,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultPaisTributa) => {
                
                $('#cbPaisNegocioPropio').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultPaisTributa.value, (_, value) =>{
                    $(&quot;#cbPaisNegocioPropio&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                });
                $(&quot;#cbPaisNegocioPropio&quot;).val(codigoPais||0).chosen().trigger(&quot;chosen:updated&quot;).trigger(&quot;change&quot;);
            }
        });
}



    
        DATOS NEGOCIO PROPIO
        
            
                
                    
                    
                
            
            
                
                    
                
            
        
        
            
                
                    Pais:
                    
                        
                    Pais...
                
            
            
                
                    
                
            
            
                
                    +593 - ECUADOR
                    
                
            
        
        
            
                
                    Provincia:
                    
                        
                    Provincia...
                
            
            
                
                    Cantón:
                    
                        
                    Cantón...
                
            
            
        
        
            
                
                    02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                    
                
            
            
                
                    
                
            
        
        
            
                
                    
                
            
            
                
                    
                
            
        
    

                    
                        
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                        
                    
                    
                        
                            DATOS EMPRESA
                            
                                
                                    
                                        
                                            
                                            
                                        
                                        Convenio Institucional
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        Pais Empresa:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                        Provincia:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                

                                
                                    
                                        Cantón:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Parroquia:
                                        
                                            
                                        Parroquia...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                

                                
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                            
                        
                    
                    
                        CONVENIO INSTITUCIONALCod N° Cliente RUC Nombre Asesor 
                            
                                
                                    Cod
                                    N° Cliente
                                    RUC
                                    Nombre
                                    Asesor
                                
                            
                        
.datagrid-cell-c1-secuencial{width:32px}
.datagrid-cell-c1-numeroCliente{width:72px}
.datagrid-cell-c1-codigo{width:112px}
.datagrid-cell-c1-nombreUnido{width:282px}
.datagrid-cell-c1-nombre{width:282px}
.datagrid-cell-c9-secuencial{width:32px}
.datagrid-cell-c9-numeroCliente{width:72px}
.datagrid-cell-c9-codigo{width:112px}
.datagrid-cell-c9-nombreUnido{width:282px}
.datagrid-cell-c9-nombre{width:282px}

                    
                
                
                    
                        SITUACIÓN ECONÓMICA
                    
                
                
                    
                        
                            
                                
                                    Es Primer trabajo:
                                    
                                        
                                        
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    País Origen Ingresos:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                        
                        
                            
                                Ingresos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c2-nombreArrendador{width:197px}
.datagrid-cell-c2-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                ActivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c3-nombreArrendador{width:112px}
.datagrid-cell-c3-activos{width:72px}
.datagrid-cell-c3-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                        
                            
                                Gastos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c4-nombreArrendador{width:212px}
.datagrid-cell-c4-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                PasivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c5-nombreArrendador{width:142px}
.datagrid-cell-c5-activos{width:72px}
.datagrid-cell-c5-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                    
                

                
                    
                        REFERENCIAS
                    
                
                
                    
                        
                            
                                
                                    REFERENCIAS BANCARIAS
                                
                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                

                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS PERSONALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS COMERCIALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                    

                

                
                    
                        OTROS
                    
                

                
                    
                        
                            
                                
                                    Propósito relación:
                                    
                                        
                                        AHORROS
                                        CDP
                                        COLOCACIONES
                                        SERVICIOS
                                        TODAS
                                    Propósito relación...
                                    Obligado a llevar Contabilidad:
                                    
                                        
                                        
                                    
                                    Es Gravamen:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Condición firmas:
                                        
                                            
                                            Ninguna
                                            Conjuntas
                                            Indistintas
                                        Condición...
                                    
                                    
                                    

                                
                            
                        
                        
                            
                                
                                    
                                        Representante:
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Apoderado:
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    Tipo de poder:
                                
                                
                                    
                                    Especial
                                    
                                    General
                                    
                                    
                                
                            
                        
                        
    const HabilitaDeclaracionPeps = (chk) => {
        if (chk) {
            $(&quot;.DeclaracionPEPS&quot;).show();
        }
        else {
            $(&quot;.DeclaracionPEPS&quot;).hide();
        }
    };

    const CargaDeclaracionPep = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DeclaracionPep?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,cargo,institucion,fechaNombramiento,fechaCulminacion&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };


    
        Declaración PEPS: ¿Usted ha desempeñado en el último año, funciones o cargos púlicos destacados en el Ecuador o en el extranjero, o realizado funciones prominentes en una orfanización internacional en representación del país?
    
    
        
        
            
            
        
    


    
        
            
            
            
        
    


    
        
            Fecha de nombramiento de designación:
            
        

        
            Fecha de culminación del cargo:
            
        
    


    
        ¿Usted es familiar(Cónyuge o pareja en unión de hecho, y familiares hasta el segundo grado de consanguinidad y primero en afinidad), colaborador directo (Persona que se encuentre asociado(a) o vinculado(a) societariamente o mantiene realaciones empresariales, comerciales o laborales estrechas con una Persona Expuesta Políticamente (PEP))?
    
    
        
            
            
        
    


    
        
            
                PEP:
                
                
            
        
    

                    
                
                
                    
                        
                            
                                
                                
                            
                        

                        
                            
                                
                            
                            
                                
                            
                        
                        
                            
                                
                            
                            
                                
                            
                        
                    
                
            
        
    






    const NuevoClienteDatosBasicos = (identificacion, controlOrigen) => {
        if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
            if (VerificarNumeroCedula(identificacion)) {
                $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ 'width': '470px' });
                tipoDocumento = 'C'
            }
            else {
                $.messager.alert('Cédula Incorrecta', 'El Número de Cédula ingresado es incorrecto.', 'error');
                return;
            }
        }
        else {
            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val('PASAPORTE');
            $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
            $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
            $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
            $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
            $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
            $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ 'width': '50px' });
            tipoDocumento = 'P'
        }
        controlOrigenCedula = controlOrigen;
        CargarGrupoEconomico();
        CargaProvincias();
        CargaPaises();
        AbrirVentanaNuevoCliente();
    };











    $(document).ready(function () {

        $('#dlgMensajeCRSNatural').dialog({
            title: 'INDICIOS CRS (Estandar Común de Reportes)',
            position: 'center',
            draggable: true,
            collapsible: false,
            minimizable: false,
            maximizable: false,
            resizable: true,
            closable: false,
            width: 'auto',
            height: 380,
            closed: false,
            cache: false,
            modal: true
        });

        $('#dlgMensajeCRSNatural').dialog('close');

        //controles a agregar verificación
        $(&quot;#cbPaisOrigen&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad1&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad2&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad3&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisResidencia&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#rbResideSI&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisOrigenRecursos&quot;).change(function () { verificarCRSNatural() });

    });

    function CierraDialogoCRSNatural() {
        $('#dlgMensajeCRSNatural').dialog('close');
    }

    function verificarCRSNatural() {
               
        var tipoDocumento = $('#txtTipoIdentificacion').val() || $(&quot;#cbTipoDocumento&quot;).val();
        var paisNacimiento = $(&quot;#cbPaisOrigen&quot;).val();
        var nacionalidad1 = $(&quot;#cbNacionalidad1&quot;).val();
        var nacionalidad2 = $(&quot;#cbNacionalidad2&quot;).val();
        var nacionalidad3 = $(&quot;#cbNacionalidad3&quot;).val();
        var paisResidencia = $(&quot;#cbPaisResidencia&quot;).val();
        var paisTrabajo = $(&quot;#cbPaisOrigenRecursos&quot;).val();
        var residenteFiscalEcuador = $('input[name=radiog_reside]:checked').val();

        
        if ((residenteFiscalEcuador &amp;&amp; residenteFiscalEcuador == &quot;S&quot;) &amp;&amp; (
            (tipoDocumento &amp;&amp; tipoDocumento.startsWith(&quot;P&quot;)) ||
            (paisNacimiento &amp;&amp; paisNacimiento != &quot;EC&quot;) ||
            (nacionalidad1 &amp;&amp; nacionalidad1 != &quot;ECU&quot;) ||
            (nacionalidad2 &amp;&amp; nacionalidad2 != &quot;ECU&quot;) ||
            (nacionalidad3 &amp;&amp; nacionalidad3 != &quot;ECU&quot;) ||
            (paisResidencia &amp;&amp; paisResidencia != &quot;EC&quot;) ||
            (paisTrabajo &amp;&amp; paisTrabajo != &quot;EC&quot;)))
        {
            $('#dlgMensajeCRSNatural').dialog('open');
        } 
    }


            
            
            
        
    
    
    
        $ = jQuery.noConflict();

        var codProvinciaEmpresa = &quot;&quot;;
        var codCantonEmpresa = 0;
        var numeroClienteConyugeGenerado = 0;
        var numeroClienteRepresentanteGenerado = 0;
        var numeroClienteApoderadoGenerado = 0;

        var codPais = 0;
        var numeroClienteGenerado;
        var secuencialCodigoClienteGenerado;
        var codigoUsuarioActual = ('CCEDENO').trim().toUpperCase();
        var fechaSistema;
        var arrIngresos = new Array();
        var arrGastos = new Array();
        var arrActivos = new Array();
        var arrPasivos = new Array();
        var impresionFormularioPendiente;
        var direccionPersonaRegistroCivil;
        var base64StringFoto;
        var base64StringFirma;
        var consultarRegistroCivil = true;
        var IpCliente;
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //MDJR 18/05/2017 funcion mejorada
        var field = $(&quot;#txtEmail&quot;);
        var hiddenField = $(&quot;#txtEmailOculto&quot;);
        var enmascarado;
        var paisGeneraDI;
        var arroba = '@';
        var ocultar = '*';
        var esCRSControles = false; //HabilitarControles
        var esCRSDatosEmpresa = false; //HabilitarDatosTrabajo
        var esCRSCiudadNacmientoExt = false; //HabilitarCiudadNacmientoExt
        var esCRSTributaExterior = false; //VerificaTributaExterior
        var offline = false;

        function EnmascararEmail(correo) {
            if (!isValidEmail(correo)) return correo;
            var email = correo.split(arroba);
            return oculta(email[0]) + arroba + email[1];
        }

        function oculta(inicial) {
            for (var i = 1; i &lt; inicial.length - 1; i++) {
                inicial = inicial.substr(0, i) + ocultar + inicial.substr(i + 1);
            }
            enmascarado = true;
            return inicial;
        }




        jQuery(function ($) {
            ////////////////////carga de combos para telefonos/////////////////////////////////

            $('select.data-list-input').change(function () {
                var that = this; //esto es eso
                var telefono = $(that).siblings('input.data-list-input').val();
                var codigo = $(that).val();
                switch (telefono.length) {
                    case 9:
                        $.each(codigosArea, function (key, value) {
                            if (telefono.substring(0, 2) == key) {
                                $(that).siblings('input.data-list-input').val(codigo + telefono.substring(2, telefono.length));
                            }
                        });

                        break;
                    case 6:
                    case 7:
                        $(that).siblings('input.data-list-input').val(codigo + telefono);
                        break;
                    default:
                        $(that).siblings('input.data-list-input').val(codigo);
                }
                $(that).siblings('input.data-list-input').focus();
                $(that).val('');
            });

            //Ingreso de prefijos para numero exterior, establece la seleccion en txtTelefonoExterior
            $('select.data-list-inputext').change(function () {
                var that = this; //esto es eso
                var telefonoext = $(that).siblings('input.data-list-inputext').val();
                var codigoext = $(that).val();

                $.each(prefijosExterior, function (key, value) {
                    //if (telefonoext.substring(0, codigoext.length) == key) {
                    $(that).siblings('input.data-list-inputext').val(codigoext );// +telefonoext.substring(codigoext.length, telefonoext.length)
                    //}
                });

                $(that).siblings('input.data-list-inputext').focus();
                $(that).val('');
            });

            //Inicializo combos
            $('#telefono1').empty();
            $('#telefono2').empty();
            $('#telefonoPublico').empty();
            $('#TelefonoPersonal').empty();
            $('#TelefonoPersonal1').empty();
            $('TelefonoCom').empty();
            $('TelefonoCom1').empty();


            $.each(codigosArea, function (key, value) {
                $('#telefono1').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#telefono2').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#telefonoPublico').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#TelefonoPersonal').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#TelefonoPersonal1').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#TelefonoCom').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
                $('#TelefonoCom1').append('&lt;option value=' + key + '>' + value + '&lt;/option>');
            });

            $('#telefono1').val('');
            $('#telefono2').val('');
            $('#telefonoPublico').val('');
            $('#TelefonoPersonal').val('');
            $('#TelefonoPersonal1').val('');
            $('#TelefonoCom').val('');
            $('#TelefonoCom1').val('');

            //////////////////fin carga de combos para telefonos///////////////////////////////////////////

        });



        function formatValorItemIngreso(val, row, index) {
            return '&lt;input id=&quot;txtValorIngreso' + index + '&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarValorItemIngreso(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />';
        }

        function formatValorItemGasto(val, row, index) {
            return '&lt;input id=&quot;txtValorGasto' + index + '&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarValorItemGasto(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />';
        }
        function formatValorItemActivo(val, row, index) {
            return '&lt;input id=&quot;txtValorActivo' + index + '&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarValorItemActivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />';
        }
        function formatValorItemPasivo(val, row, index) {
            return '&lt;input id=&quot;txtValorPasivo' + index + '&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarValorItemPasivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />';
        }

        function formatIngresoDescripcionActivos(val, row, index) {
            return '&lt;input id=&quot;txtDescripcionActivo' + index + '&quot; style=&quot;text-transform: uppercase;width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarDescripcionActivo(this)&quot; maxlength=&quot;100&quot; />';
        }

        function formatIngresoDescripcionPasivos(val, row, index) {
            return '&lt;input id=&quot;txtDescripcionPasivo' + index + '&quot; style=&quot;text-transform: uppercase; width:90%&quot; type=&quot;text&quot; value=&quot;' + val + '&quot; onchange=&quot;CambiarDescripcionPasivo(this)&quot; maxlength=&quot;100&quot; />';
        }


        function CopiarCargoToDescripcion() {
            $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
        }

        function CambiarValorItemIngreso(tb) {
            var grid = $('#grdIngresos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtValorIngreso')[1]].activos = tb.value == '' ? &quot;0&quot; : tb.value;
            $('#txtTotalIngresos').val('$ ' + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemGasto(tb) {
            var grid = $('#grdGastos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtValorGasto')[1]].activos = tb.value == '' ? &quot;0&quot; : tb.value;
            $('#txtTotalGastos').val('$ ' + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemActivo(tb) {
            var grid = $('#grdActivos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtValorActivo')[1]].activos = tb.value == '' ? &quot;0&quot; : tb.value;
            $('#txtTotalActivos').val('$ ' + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemPasivo(tb) {
            var grid = $('#grdPasivos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtValorPasivo')[1]].activos = tb.value == '' ? &quot;0&quot; : tb.value;
            $('#txtTotalPasivos').val('$ ' + ObtenerTotal(rowsItems));
        }

        function CambiarDescripcionActivo(tb) {
            var grid = $('#grdActivos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtDescripcionActivo')[1]].descripcionActividad = tb.value.trim();
        }

        function CambiarDescripcionPasivo(tb) {
            var grid = $('#grdPasivos');
            var dataItems = $.data(grid[0], 'datagrid').data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split('txtDescripcionPasivo')[1]].descripcionActividad = tb.value.trim();
        }

        function ObtenerTotal(lista) {
            var total = 0;
            for (var i = 0; i &lt; lista.length; i++) {
                total += parseFloat(lista[i].activos);
            }
            return total.toFixed(2);
        }

        function BuscarPersonaRegistroCivil() {
            $ = jQuery.noConflict();
            if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtIdentificacion&quot;).val() == null) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Documento&quot; es requerido y máximo de 10 dígitos', 'warning', function () { $('#txtIdentificacion').focus(); });
            }
            else if (isNaN($(&quot;#txtIdentificacion&quot;).val().trim())) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Documento&quot; debe ser un número.', 'warning', function () { $('#txtIdentificacion').focus(); });
            }
            else if ($(&quot;#txtIdentificacion&quot;).val().trim().length &lt; 10) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Documento&quot; debe tener 10 dígitos.', 'warning', function () { $('#txtIdentificacion').focus(); });
            }
            else if (($(&quot;#txtCodigoDactilar&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCodigoDactilar&quot;).val() == null) &amp;&amp; $('#chkEsMenorDeEdad').is(':checked') == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Código Dactilar&quot; es requerido.', 'warning', function () { $('#txtCodigoDactilar').focus(); });
            }
            else if ($(&quot;#txtCodigoDactilar&quot;).val().trim().length &lt; 6 &amp;&amp; $('#chkEsMenorDeEdad').is(':checked') == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Código Dactilar&quot; debe tener 6 caracteres!', 'warning', function () { $('#txtCodigoDactilar').focus(); });
            }
            else {
                
                var urlDatosRegistroCivil = &quot;osapi/ServiceCliente.svc/ObtenerDatosClienteDeRegistroCivil&quot;;
                $.ajax({
                    url: urlDatosRegistroCivil,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        clave: $(&quot;#txtCodigoDactilar&quot;).val().trim().toUpperCase(),
                        fechaIngreso: '/Date(' + (parseFloat(Date.parse(toIsoDate(fechaSistema))) - 18000000) + ')/',
                        //fechaModificacion: '/Date(' + (parseFloat(Date.parse(toIsoDate($('#txtFechaExpedicion').val()))) - 18000000) + ')/',
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        offline = false;
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Estado == '000') {
                            $('#chEnUnionLibre').prop('checked', false);
                            $('#chConDisolucionConyugal').prop('checked', false);
                            $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;disabled&quot;, true);
                            $(&quot;#txtCodigoDactilar&quot;).prop(&quot;disabled&quot;, true);
                            $('#trBloqueA').show();
                            $('#trBloqueB').show();
                            $('#trBloqueC').show();
                            $('#trBloqueD').show();
                            $('#trBloqueE').show();
                            $('#txtNombrePersona').show();
                            $('#trBloqueFacebookSkype').show();
                            $(&quot;#txtGeneroPersona&quot;).hide();
                            $('#txtNombrePersona').val(resultado.Nombre);
                            $(&quot;#txtEstadoCivilPersona&quot;).val(resultado.EstadoCivil);
                            $(&quot;#txtFechaNacimiento&quot;).val(resultado.FechaNacimiento);
                            $(&quot;#txtFechaExpedicion&quot;).val(&quot;F. Exp: &quot; + resultado.FechaExpedicion); //TODO: VERIFICAR EXISTEN 2 CONTROLES CON FECHA DE EXPEDICION

                            $(&quot;#cbEstadoCivil&quot;).val(resultado.EstadoCivilChar);
                            $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                            ValidarFechaNacimiento(document.getElementById('txtFechaNacimiento'));
                            $(&quot;#txtFechaExpedicionPersona&quot;).val(resultado.FechaExpedicion);
                            if (resultado.ImageStringFoto != '') {
                                $(&quot;#imgFotoPersonaMain&quot;).attr('src', 'data:image/png;base64,' + resultado.ImageStringFoto);
                                base64StringFoto = resultado.ImageStringFoto;
                            }
                            if (resultado.ImageStringFirma != '') {
                                $(&quot;#imgFirmaPersonaMain&quot;).attr('src', 'data:image/png;base64,' + resultado.ImageStringFirma);
                                base64StringFirma = resultado.ImageStringFirma;
                            }

                            if (resultado.FechaDefuncion != '' &amp;&amp; resultado.FechaDefuncion != null) {//MDJR 19/05/2017 daba falsos positivos cuando devolvia null
                                $.fn.window.defaults.closable = false;
                                $.messager.alert('Persona Fallecida', 'La persona consultada falleció el ' + resultado.FechaDefuncion + '. No se puede crear al cliente.', 'error');
                                $('#divGuardarEnabled').hide();
                                $('#divGuardarDisabled').show();
                            }

                            var arrayApellidosNombres = resultado.Nombre.split(' ');
                            var apellidosPersona = arrayApellidosNombres[0] + ' ';
                            var nombresPersona;
                            for (var i = 1; i &lt; arrayApellidosNombres.length ; i++) {
                                if (i == 1)
                                    apellidosPersona = apellidosPersona + arrayApellidosNombres[1];
                                else if (i == 2)
                                    nombresPersona = arrayApellidosNombres[2] + ' ';
                                else
                                    nombresPersona = nombresPersona + arrayApellidosNombres[i] + ' ';
                            }
                            $(&quot;#txtApellidos&quot;).val(apellidosPersona.trim());
                            $(&quot;#txtNombres&quot;).val(nombresPersona);
                            ValidaEstadoCivil(document.getElementById('cbEstadoCivil'));
                            if (resultado.EstadoCivilChar == 'C' || resultado.EstadoCivilChar == 'U') {
                                $(&quot;#txtCedulaConyuge&quot;).val(resultado.NuiConyuge);
                                $(&quot;#txtNombreConyuge&quot;).val(resultado.NombreConyuge);
                                nombreConyugeRegistroCivil = resultado.NombreConyuge.trim();
                            }
                            if (resultado.SexoChar == 'H') {
                                $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                            }
                            else {
                                $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                            }
                            $(&quot;#txtSexoPersona&quot;).val(resultado.Sexo);
                            direccionPersonaRegistroCivil = resultado.Direccion;
                            if (resultado.GeneroChar != '' &amp;&amp; resultado.GeneroChar != null) {
                                $(&quot;#txtGeneroPersona&quot;).show();
                                $(&quot;#txtGeneroPersona&quot;).val(resultado.Genero);
                                if (resultado.GeneroChar == 'M') {
                                    $(&quot;#rbGeneroM&quot;).prop(&quot;checked&quot;, true);
                                }
                                else {
                                    $(&quot;#rbGeneroF&quot;).prop(&quot;checked&quot;, true);
                                }
                            }
                            //evito modificacion de datos

                            $('#txtIdentificacion').attr(&quot;disabled&quot;, true);

                            $('#cbTipoDocumento').prop(&quot;disabled&quot;, true);
                            $('#cbTipoDocumento').trigger('chosen:updated');

                            $('#cbEstadoCivil').prop(&quot;disabled&quot;, true);
                            $('#cbEstadoCivil').trigger('chosen:updated');

                            $('#txtFechaNacimiento').prop(&quot;disabled&quot;, true);
                            $('#txtFechaNacimiento').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

                            $('#rbSexoH').attr(&quot;disabled&quot;, true);
                            $('#rbSexoM').attr(&quot;disabled&quot;, true);

                            $('#txtNombres').focus();
                        }
                        else if (verificaRespuestaRC(resultado.Estado, resultado.MensajeConsulta)) {
                            $.messager.alert('Error', resultado.MensajeConsulta, 'error');
                        }
                        else
                        {
                           $.messager.confirm(mensajeServicioNoDisponible, mensajeRCNoDisponible, r => {
                               if (r) {
                                   offline = true;
                                   ActivaControlesPasaporte();
                                   $('#trBloqueE').show();
                                }
                            });
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que valida y guarda los datos del cliente
        function GuardarDatos(e) {
            $ = jQuery.noConflict();
            //Se validan los campos.

            //*************************Comienza div de Datos********************************.
            if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;&quot; || $(&quot;#cbTipoDocumento&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Tipo documento&quot; es requerido!', 'warning', function () { $('#cbTipoDocumento').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; &amp;&amp; $(&quot;#txtIdentificacion&quot;).val().trim() == '') {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Documento&quot;es requerido !', 'warning', function () { $('#txtIdentificacion').focus(); });
            }
            else if (consultarRegistroCivil == true &amp;&amp; $(&quot;#txtNombrePersona&quot;).val().trim() == '') {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campos requeridos', 'Consulte datos desde Registro Civil!', 'warning', function () { $('#txtIdentificacion').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; $(&quot;#txtApellidosPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidosPasaporte&quot;).val().trim().length > maxApellido) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de ' + maxApellido + ' caracteres!', 'warning', function () { $('#txtApellidosPasaporte').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; ($(&quot;#txtApellidos&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidos&quot;).val().trim().length > maxApellido)) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de ' + maxApellido + ' caracteres!', 'warning', function () { $('#txtApellidos').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNombres&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombres&quot;).val().trim().length > maxNombre)) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de ' + maxNombre + ' caracteres!', 'warning', function () { $('#txtNombres').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; ($(&quot;#txtNombresPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombresPasaporte&quot;).val().trim().length > maxNombre)) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de ' + maxNombre + ' caracteres!', 'warning', function () { $('#txtNombresPasaporte').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; (($(&quot;#txtApellidos&quot;).val().toUpperCase().trim() + ' ' + $(&quot;#txtNombres&quot;).val().toUpperCase().trim()) != $(&quot;#txtNombrePersona&quot;).val().toUpperCase().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campos requeridos', 'El nombre ingresado es diferente al que consta en el Registro Civil', 'warning', function () { $('#txtApellidos').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot;&quot; || $(&quot;#cbEstadoCivilPasaporte&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Estado civil&quot; es requerido!', 'warning', function () { $('#cbEstadoCivilPasaporte').trigger('chosen:activate'); });
            }
            else if ($('#chEnUnionLibre').is(':checked') == true &amp;&amp; $('#chConDisolucionConyugal').is(':checked') == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campos requeridos', 'El campo &quot;D.I. Conyuge&quot; es requerido', 'warning', function () { $('#txtCedulaConyuge').focus(); });
            }
            else if (($(&quot;#cbEstadoCivil&quot;).val() == 'C' || $(&quot;#cbEstadoCivil&quot;).val() == 'U') &amp;&amp; ($(&quot;#txtCedulaConyuge&quot;).val().trim() != &quot;&quot;)) {
                
                var urlCedulaConyuge = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=codigo eq '{0}'&quot;;
                $.ajax({
                    url: urlCedulaConyuge.replace(&quot;{0}&quot;, $(&quot;#txtCedulaConyuge&quot;).val().trim()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        
                        if (result.value.length > 0) {
                            numeroClienteConyuge = result.value[0].numeroCliente;
                            ContinuacionVerificacionIngresoDatos(e);
                        }
                        else {
                            $('.h2toggle').next('.cont').hide();
                            $('#divDatosCliente').show();
                            DatosAbierto();
                            e.preventDefault();
                            $.fn.window.defaults.closable = false;
                            $.messager.confirm('Confirmación', 'El conyuge no es cliente. ¿Desea crear uno nuevo?', function (r) {
                                if (r) {
                                    $(&quot;#txtIdentificacionDatosBasicos&quot;).val($(&quot;#txtCedulaConyuge&quot;).val());
                                    controlOrigenCedula = 'CedulaConyuge';
                                    var identificacion = $(&quot;#txtIdentificacionDatosBasicos&quot;).val().trim();
                                    if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
                                        if (VerificarNumeroCedula(identificacion)) {
                                            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                                            $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                                            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                                            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                                            $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                                            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ 'width': '470px' });
                                            tipoDocumento = 'C'
                                        }
                                        else {
                                            $.messager.alert('Cédula Incorrecta', 'El Número de Cédula ingresado es incorrecto.', 'error', function () {
                                                opcion == 1 ? $(&quot;#txtCondicionFirmas&quot;).focus() : $(&quot;#txtCondicionFirmasNoAhorroMas&quot;).focus();
                                            });
                                            return;
                                        }
                                    }
                                    else {
                                        $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val('PASAPORTE');
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
                                        $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
                                        $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
                                        $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
                                        $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
                                        $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
                                        $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
                                        $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ 'width': '50px' });
                                        tipoDocumento = 'P'
                                        //habilito edicion de nombres, apellidos y fecha nacimiento x ser nuevo
                                        $(&quot;#txtApellidosDatosBasicos&quot;).prop('disabled', false);
                                        $(&quot;#txtNombresDatosBasicos&quot;).prop('disabled', false);
                                        $('#txtFechaNacimientoDatosBasicos').datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
                                    }
                                    //CargaPaises();
                                    //CargarGrupoEconomico();
                                    //CargaProvincias();

                                    AbrirVentanaNuevoCliente();
                                }
                            });
                        }
                    }
                });
            }
            else
                ContinuacionVerificacionIngresoDatos(e);
        }

        function ContinuacionVerificacionIngresoDatos(e) {
            if ($('#chEnUnionLibre').is(':checked') == true &amp;&amp; $('#chConDisolucionConyugal').is(':checked') == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campos requeridos', 'El campo &quot;D.I. Conyuge&quot; es requerido', 'warning', function () { $('#txtCedulaConyuge').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; $(&quot;#txtFechaNacimiento&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Fecha de nacimiento&quot; es requerido!', 'warning', function () { $('#txtFechaNacimiento').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; !$('#rbSexoHPasaporte').is(':checked') &amp;&amp; !$('#rbSexoMPasaporte').is(':checked')) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el Sexo del cliente.!', 'warning', function () { $('#rbSexoHPasaporte').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; $(&quot;#txtFechaNacimientoPasaporte&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Fecha de nacimiento&quot; es requerido!', 'warning', function () { $('#txtFechaNacimientoPasaporte').focus(); });
            }
            else if ($(&quot;#txtEmail&quot;).val().trim() != &quot;&quot; &amp;&amp; (!isValidEmail($(&quot;#txtEmailOculto&quot;).val().trim()))) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Email&quot; NO es una dirección válida!', 'warning', function () { $('#txtEmail').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNumeroCargas&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargas&quot;).val().trim()) > maxNumeroCargas)) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Número de cargas&quot; es requerido y no debe exceder ' + maxNumeroCargas + '!', 'warning', function () { $('#txtNumeroCargas').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; ($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim()) > maxNumeroCargas)) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Número de cargas&quot; es requerido y no debe exceder ' + maxNumeroCargas + '!', 'warning', function () { $('#txtNumeroCargasPasaporte').focus(); });
            }
            else if (!($(&quot;#cbGrupoEtnico&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Grupo Étnico&quot; es requerido!', 'warning', () => { $('#cbGrupoEtnico').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresos&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo ' + $('#txtDescripcionIngresos').attr('placeholder') + ' en ' + $('#h1DebidaDiligenciaAmpliada').text() +' es obligatorio', 'warning', () => { $('#txtDescripcionIngresos').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresosConyuge&quot;).val()) &amp;&amp; ($(&quot;#cbEstadoCivil&quot;).val() == &quot;C&quot; || $(&quot;#cbEstadoCivil&quot;).val() == &quot;U&quot; )) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo ' + $('#txtDescripcionIngresosConyuge').attr('placeholder') + ' en ' + $('#h1DebidaDiligenciaAmpliada').text() +' es obligatorio', 'warning', () => { $('#txtDescripcionIngresosConyuge').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionOtrosIngresos&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo ' + $('#txtDescripcionOtrosIngresos').attr('placeholder') + ' en ' + $('#h1DebidaDiligenciaAmpliada').text() +' es obligatorio', 'warning', () => { $('#txtDescripcionOtrosIngresos').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtProcedenciaFondos&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo ' + $('#txtProcedenciaFondos').attr('placeholder') + ' en ' + $('#h1DebidaDiligenciaAmpliada').text() +' es obligatorio', 'warning', () => { $('#txtProcedenciaFondos').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosNumeroTransacciones&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el número de depósitos en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtDepositosNumeroTransacciones').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosMonto&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el monto de depósitos en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtDepositosMonto').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el número de transferencias recibidas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtTransferenciasRecibidasNumeroTransacciones').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasMonto&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el monto de transferencias recibidas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtTransferenciasRecibidasMonto').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el número de transferencias enviadas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtTransferenciasEnviadasNumeroTransacciones').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasMonto&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el monto de transferencias enviadas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtTransferenciasEnviadasMonto').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el número de remesas recibidas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtRemesasRecibidasNumeroTransacciones').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasMonto&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el monto de remesas recibidas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtRemesasRecibidasMonto').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el número de remesas enviadas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtRemesasEnviadasNumeroTransacciones').focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasMonto&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDebidaDiligenciaAmpliada').show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el monto de remesas enviadas en ' + $('#h1DebidaDiligenciaAmpliada').text(), 'warning', () => { $('#txtRemesasEnviadasMonto').focus();  });
            }
                //*********************Comienza div de Dirección**********************************.
            else if ($(&quot;#cbPaisOrigen&quot;).val() == &quot;&quot; || $(&quot;#cbPaisOrigen&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;País de origen&quot; es requerido!', 'warning', function () { $('#cbPaisOrigen').trigger('chosen:activate'); });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese la ciudad de nacimiento', 'warning', function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val().trim().length &lt; 5) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'La longitud mínima de la ciudad de nacimiento es de 5 caracteres', 'warning', function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSTributaExterior &amp;&amp; !($(&quot;#cbPaisDI&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Seleccione el país donde se generó el documento de identificación', 'warning', function () { $(&quot;#cbPaisDI&quot;).focus();  });
            }
            else if ($(&quot;#cbProvinciaReside&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaReside&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Provincia reside&quot; es requerido!', 'warning', function () { $('#cbProvinciaReside').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbCantonReside&quot;).val() == &quot;&quot; || $(&quot;#cbCantonReside&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Canton reside&quot; es requerido!', 'warning', function () { $('#cbCantonReside').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbParroquiaReside&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaReside&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Parroquia reside&quot; es requerido!', 'warning', function () { $('#cbParroquiaReside').trigger('chosen:activate'); });
            }
            else if ($(&quot;#txtDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccion&quot;).val().trim().length > maxDireccion) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Dirección&quot; es requerido, debe tener al menos ' + minLengthDir + ' caracteres y máximo ' + maxDireccion + '!', 'warning', function () { $('#txtDireccion').focus(); });
            }
            else if ($(&quot;#txtNumCasa&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasa&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasa&quot;).val().trim().length > 10) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;#casa/edificio&quot; es requerido, debe tener al menos ' + 3 + ' caracteres y máximo ' + 20 + '!', 'warning', function () { $('#txtNumCasa').focus();  });
            }
            else if ($(&quot;#txtReferenciaDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length > maxRefDireccion) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Referencia&quot; es requerido, debe tener al menos ' + minLengthDir + ' caracteres y máximo ' + maxRefDireccion + '!', 'warning', function () { $('#txtReferenciaDireccion').focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono requerido', 'Debe ingresar al menos un número de teléfono!', 'warning', function () { $('#txtTelefono1').focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefono1').focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono1&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefono1').focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener máximo 9 dígitos!', 'warning', function () { $('#txtTelefono1').focus(); });
            }
            else if ($(&quot;#cbNacionalidad1&quot;).val() == &quot;&quot; || $(&quot;#cbNacionalidad1&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDatosCliente').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nacionalidad 1&quot; es requerido!', 'warning', function () { $('#cbNacionalidad1').focus();  });
            }
            else if ($(&quot;input:radio[name ='radiog_reside']:checked&quot;).val() == undefined) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;¿Es residente fiscal en Ecuador?&quot; es requerido! en seccion Dirección', 'warning', function () {  });
            }
            else if ($(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val() == '' &amp;&amp; $('#chkTributaExterior').is(':checked') == true) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Número de Identificación Tributaria en el Exterior&quot; es requerido!', 'warning', function () { $('#txtNumeroIdentificacionTributariaExterior').focus();  });
            }
            else if (($(&quot;#chkPaisObligacionTributaria&quot;).val() == '' || $(&quot;#chkPaisObligacionTributaria&quot;).val() == null) &amp;&amp; $('#chkTributaExterior').is(':checked') == true) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;País Obligación Tributaria&quot; es requerido!', 'warning', function () { $('#chkPaisObligacionTributaria').focus();  });
            }

            else if ($('option:selected', '#chkPaisObligacionTributaria').size() == 0 &amp;&amp; $('#chkTributaExterior').is(':checked') == true) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;País con obligación tributaria&quot; es requerido!', 'warning', function () { $('#chkPaisObligacionTributaria').focus();  });
            }

            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefono2').focus(); });
            }
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono2&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefono2').focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener máximo 9 dígitos!', 'warning', function () { $('#txtTelefono2').focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Celular inválido', 'El número de celular debe tener ' + minLengthCel + '!', 'warning', function () { $('#txtCelular1').focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Celular inválido', 'El número de celular debe comenzar &quot;09&quot;!', 'warning', function () { $('#txtCelular1').focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Celular requerido', 'El número de celular debe tener ' + minLengthCel + '!', 'warning', function () { $('#txtCelular2').focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Celular requerido', 'El número de celular debe comenzar &quot;09&quot;!', 'warning', function () { $('#txtCelular2').focus(); });
            }
            else if ($(&quot;#cbTipoVivienda&quot;).val() == &quot;&quot; || $(&quot;#cbTipoVivienda&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Tipo vivienda&quot; es requerido!', 'warning', function () { $('#cbTipoVivienda').trigger('chosen:activate'); });
            }
                //*********************Comienza div de Ocupación**********************************.
            else if ($(&quot;#cbEducacion&quot;).val() == &quot;&quot; || $(&quot;#cbEducacion&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Educación&quot; es requerido!', 'warning', function () { $('#cbEducacion').trigger('chosen:activate'); });
            }
                //  else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == 'P' || $(&quot;#cbEducacion&quot;).val() == 'S')) {
            else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; (calcAge($(&quot;#cbTipoDocumento&quot;).val() == 'C' ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == 'P' || $(&quot;#cbEducacion&quot;).val() == 'S')) {
                //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Establecimiento&quot; es requerido!', 'warning', function () { $('#cbEstablecimiento').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Ocupación&quot; es requerido!', 'warning', function () { $('#cbOcupacion').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() != '272' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '000' &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == null)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Origen ingresos&quot; es requerido!', 'warning', function () { $('#cbOrigenIngresos').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Ocupación&quot; es requerido!', 'warning', function () { $('#cbOcupacion').trigger('chosen:activate'); });
            }
            else if (($(&quot;#cbProfesionSBS&quot;).val() == &quot;&quot; || $(&quot;#cbProfesionSBS&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() != 'P' &amp;&amp; $(&quot;#cbEducacion&quot;).val() != 'S' &amp;&amp; $(&quot;#cbEducacion&quot;).val() != 'N')) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Profesion SBS&quot; es requerido!', 'warning', function () { $('#cbProfesionSBS').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbGrupoEconomico&quot;).val() == &quot;&quot; || $(&quot;#cbGrupoEconomico&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Grupo economico&quot; es requerido!', 'warning', function () { $('#cbGrupoEconomico').trigger('chosen:activate'); });
            }
            else if ($(&quot;#cbClasificacionActividad&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividad&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Clasificacion actividad&quot; es requerido!', 'warning', function () { $('#cbClasificacionActividad').trigger('chosen:activate'); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtNombreEmpleador&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombreEmpleador&quot;).val().trim().length > maxNombreEmpleador) ) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nombre/Razón social empleador&quot; es requerido y no debe exceder ' + maxNombreEmpleador + ' caracteres!', 'warning', function () { $('#txtNombreEmpleador').focus(); });
            }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtNombreNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'El campo &quot;Nombre negocio&quot; es requerido!', 'warning', () => { $('#txtNombreNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#cbPaisNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'Seleccione pais del negocio propio', 'warning', () => { $('#cbPaisNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#txtEstadoNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'El campo &quot;Estado Empresa&quot; es requerido!', 'warning', () => { $('#txtEstadoNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbProvinciaNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'Seleccione provincia del negocio propio', 'warning', () => { $('#cbProvinciaNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbCantonNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'Seleccione cantón del negocio propio', 'warning', () => { $('#cbCantonNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtDireccionNegocioPropio&quot;).val()) ) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'El campo &quot;Dirección negocio&quot; es requerido!', 'warning', () => { $('#txtDireccionNegocioPropio').focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtCargoNegocioPropio&quot;).val())) {
                 $('.h2toggle').next('.cont').hide();
                 $('#divOcupacion').show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert('Campo requerido', 'El campo &quot;Cargo negocio&quot; es requerido!', 'warning', () => { $('#txtCargoNegocioPropio').focus(); });
           }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;&quot; &amp;&amp; ($('#lblEmpleadoPublico').is(':visible'))) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;País Empresa&quot; en Datos Empresa es requerido!', 'warning', function () { $('#cbPaisEmpresa').focus();  });
            }

            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; $(&quot;#txtPaisEstadoEmpresa&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($('#lblEmpleadoPublico').is(':visible'))) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Estado Empresa&quot; en Datos Empresa es requerido!', 'warning', function () { $('#txtPaisEstadoEmpresa').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($('#lblEmpleadoPublico').is(':visible'))) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Teléfono Exterior&quot; en Datos Empresa es requerido!', 'warning', function () { $('#txtTelefonoExterior').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null || $(&quot;#cbProvinciaPublico&quot;).val() == &quot;0&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Provincia&quot; es requerido!', 'warning', function () { $('#cbProvinciaPublico').trigger('chosen:activate'); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Canton&quot; en Datos Empresa es requerido!', 'warning', function () { $('#cbCantonPublico').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#cbParroquiaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Parroquia&quot; en Datos Empresa es requerido!', 'warning', function () { $('#cbParroquiaPublico').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cantón&quot; es requerido!', 'warning', function () { $('#cbCantonPublico').trigger('chosen:activate'); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Teléfono&quot; es requerido!', 'warning', function () { $('#txtTelefonoPublico').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot;) &amp;&amp; esCRSDatosEmpresa) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Teléfono Exterior&quot; es requerido!', 'warning', function () { $('#txtTelefonoExterior').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length &lt; 9)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefonoPublico').focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length == 9) &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPublico&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefonoPublico').focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length > 9)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Teléfono&quot; máximo debe tener 9 dígitos!', 'warning', function () { $('#txtTelefonoPublico').focus(); });
            }
                ////////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().length &lt; minLengthCel)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe constar ' + minLengthCel + ' dígitos', 'warning', function () { $('#txtTelefonoCelularEmpresa').focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().substring(0, 2) != &quot;09&quot;))) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe comenzar &quot;09&quot;', 'warning', function () { $('#txtTelefonoCelularEmpresa').focus(); });
            }
                ///////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtDireccionPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccionPublico&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccionPublico&quot;).val().trim().length > maxDireccionPublico)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Dirección&quot; es requerido, debe tener al menos ' + minLengthDir + ' caracteres y máximo ' + maxDireccionPublico + '!', 'warning', function () { $('#txtDireccionPublico').focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cargo&quot; es requerido y no debe exceder ' + maxCargoPublico + ' caracteres!', 'warning', function () { $('#txtCargoPublico').focus(); });
            }
            else if (($('#chkConvenioPublico').is(':checked') == true) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cargo&quot; es requerido y no debe exceder ' + maxCargoPublico + ' caracteres!', 'warning', function () { $('#txtCargoPublico').focus(); });
            }
            else if (($('#chkConvenioPublico').is(':checked') == true) &amp;&amp; getSelected() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Debe seleccionar una empresa de convenio institucional!', 'warning', function () { $('#divConvenioInstitucional').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() == '') {
                $('#divOcupacion').show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Descripción Actividad Económica Actual&quot; es requerido!', 'warning', function () { $('#txtDescripcionActividadEconomicaActual').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtTiempoTrabajo&quot;).val() == '') {
                $('#divOcupacion').show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Tiempo en el trabajo&quot; es requerido!', 'warning', function () { $('#txtTiempoTrabajo').focus(); });
            }
                //*********************Comienza Situacion Economica**********************************.
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '272' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '000' &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == 'B') &amp;&amp;
                $('#chkPrimerTrabajo').is(':checked') == false &amp;&amp; ($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == null)) {
                $('#divSituacionEconomica').show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;F. Inicio Trabajo Anterior&quot; es requerido!', 'warning', function () { $('#txtFechaInicioTrabajoAnterior').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '272' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '000' &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == 'B') &amp;&amp;
                $('#chkPrimerTrabajo').is(':checked') == false &amp;&amp; ($(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == null)) {
                $('.h2toggle').next('.cont').hide();
                $('#divSituacionEconomica').show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;F. Fin Trabajo Anterior&quot; es requerido!', 'warning', function () { $('#txtFechaFinTrabajoAnterior').focus(); });
            }

                //MDJR 2017/04/07 Ingresos y Egresos deben ser mayor que 0
            else if ($('#lblSituacionEconomica').is(':visible') &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; ((calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() == 'C') &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $('.h2toggle').next('.cont').hide();
                $('#divSituacionEconomica').show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El total de Ingresos Mes y Gastos Mes no deben ser cero', 'warning', function () { $('#txtValorIngreso0').focus(); });
            }
            else if ($('#lblSituacionEconomica').is(':visible') &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == 'P' &amp;&amp; ((calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == 'C') &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $('.h2toggle').next('.cont').hide();
                $('#divSituacionEconomica').show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El total de Ingresos Mes y Gastos Mes no deben ser cero', 'warning', function () { $('#txtValorIngreso0').focus(); });
            }

                //Referencia Personal 1
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtNombrePersonal&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nombre&quot; es requerido!', 'warning', function () { $('#txtNombrePersonal').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtDireccionPersonal&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Dirección&quot; es requerido!', 'warning', function () { $('#txtDireccionPersonal').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido requerido', 'Es requerido que ingrese un número telefónico convencional o celular', 'warning', function () { $('#txtTelefonoPersonal').focus(); });
            }

                /////////////////////////////////////////
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefonoPersonal').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefonoPersonal').focus(); });
            }
                /////////////////////////////////////////
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El número de teléfono debe tener máximo 9 dígitos!', 'warning', function () { $('#txtTelefonoPersonal').focus(); });
            }

            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Teléfono&quot; debe constar ' + minLengthCel + ' dígitos', 'warning', function () { $('#txtTelefonoCelular').focus(); });
            }

            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe comenzar &quot;09&quot;', 'warning', function () { $('#txtTelefonoCelular').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtParentesco&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Parentesco&quot; es requerido!', 'warning', function () { $('#txtParentesco').focus(); });
            }

                //Referencia Personal 2
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales ', 'warning', function () { $('#txtDireccionPersonal1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
                /////////////////////////////////////////////0
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales ', 'warning', function () { $('#txtParentesco1').focus(); });
            }
                /////////////////////////////////////////////0
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtNombrePersonal1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtParentesco1').focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtNombrePersonal1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtDireccionPersonal1').focus(); });
            }
                /////////////////////////////////////////////////////2
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtParentesco1').focus(); });
            }
                /////////////////////////////////////////////////////2
                /////////////////////////////////////////////////////3
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtNombrePersonal1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtDireccionPersonal1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Personales', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
                /////////////////////////////////////////////////////3
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal1&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos', 'warning', function () { $('#txtTelefonoPersonal1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe constar de' + minLengthCel + ' dígitos', 'warning', function () { $('#txtTelefonoCelular1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe comenzar &quot;09&quot;', 'warning', function () { $('#txtTelefonoCelular1').focus(); });
            }

                //Referencia Bancaria 1
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtCuenta').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#cbTipoCuenta').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtBanco').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#cbTipoCuenta').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtBanco').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtCuenta').focus(); });
            }

                //Referencia Bancaria 2
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtCuenta1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#cbTipoCuenta1').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtBanco1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#cbTipoCuenta').focus(); });
            }

            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtBanco1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Bancarias', 'warning', function () { $('#txtCuenta1').focus(); });
            }

                //Referencia Comercial 1
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtDireccionCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtTelefonoCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtNombreCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtTelefonoCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtNombreCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtDireccionCom').focus(); });
            }
                /////////////////////////////////////////0
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefonoCom').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefonoCom').focus(); });
            }
                /////////////////////////////////////////0
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos', 'warning', function () { $('#txtTelefonoCom').focus(); });
            }
                /////////////////////////////////////////////////////////////////////
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe constar de' + minLengthCel + ' dígitos', 'warning', function () { $('#txtTelefonoCelularCom').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe comenzar &quot;09&quot;', 'warning', function () { $('#txtTelefonoCelularCom').focus(); });
            }
                ////////////////////////////////////////////////////////////////////////

                //Referencia Comercial 2
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtDireccionCom1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtTelefonoCom1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtNombreCom1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtTelefonoCom1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtNombreCom1').focus(); });
            }
            else if (($('#lblSituacionEconomica').is(':visible')) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Datos Incompletos en Referencias Comerciales', 'warning', function () { $('#txtDireccionCom1').focus(); });
            }
                //else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 6) {
                //    $('.h2toggle').next('.cont').hide();
                //    $('#divReferencias').show();
                //    ReferenciasAbierto()
                //    e.preventDefault();
                //    $.fn.window.defaults.closable = false;
                //    $.messager.alert('Campo inválido', 'El campo &quot;Teléfono&quot; debe constar mínimo de 6 dígitos', 'warning', function () { $('#txtTelefonoCom1').focus(); });
                //}
                /////////////////////////////////////////0
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'El número de teléfono debe tener 9 dígitos incluido el código de provincia', 'warning', function () { $('#txtTelefonoCom1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom1&quot;).val().trim())) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Teléfono inválido', 'Ingrese el código de provincia correspondiente', 'warning', function () { $('#txtTelefonoCom1').focus(); });
            }
                /////////////////////////////////////////0
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length > 9) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos', 'warning', function () { $('#txtTelefonoCom1').focus(); });
            }
                /////////////////////////////////////////////////////////////////////////////////////////////
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim().length &lt; minLengthCel) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe constar de' + minLengthCel + ' dígitos', 'warning', function () { $('#txtTelefonoCelularCom1').focus(); });
            }
            else if (($('#lblReferencias').is(':visible')) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $('.h2toggle').next('.cont').hide();
                $('#divReferencias').show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo inválido', 'El campo &quot;Celular&quot; debe comenzar &quot;09&quot;', 'warning', function () { $('#txtTelefonoCelularCom1').focus(); });
            }

                //*********************Comienza div de Otros**********************************.
            else if ($(&quot;#cbPropositoRelacion&quot;).val() == &quot;&quot; || $(&quot;#cbPropositoRelacion&quot;).val() == null) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Proposito relacion&quot; es requerido!', 'warning', function () { $('#cbPropositoRelacion').trigger('chosen:activate'); });
            }
                //MDJR 06/06/2017 Por favor se requiere cuando una persona es menor de edad y registra estado civil casada el sistema no requiere ingresar un representante
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; !offline &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != 'C' &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cédula&quot; es requerido y no debe exceder ' + maxRepresentante + ' caracteres!', 'warning', function () { $('#txtRepresentante').focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != 'C' &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cédula&quot; es requerido y no debe exceder ' + maxRepresentante + ' caracteres!', 'warning', function () { $('#txtRepresentante').focus(); });
            }

            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; !$('#rbPoderE').is(':checked') &amp;&amp; !$('#rbPoderG').is(':checked')) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Seleccione tipo de poder', 'warning', function () { $('#rbPoderG').focus(); });
            }
            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtFechaEmision&quot;).val().trim() == &quot;&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Fecha emisión&quot; es requerido!', 'warning', function () { $('#txtFechaEmision').focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; $(&quot;#txtApoderado&quot;).val().trim() == $(&quot;#txtIdentificacion&quot;).val().trim()) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Ingreso inválido', 'El cliente no puede ser apoderado de si mismo.', 'error', function () {
                    $(&quot;#txtNombreApoderado&quot;).val('');
                    $(&quot;#txtFechaEmision&quot;).val('');
                    $(&quot;#txtFechaCaducidad&quot;).val('');
                    $('#txtFechaEmision').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
                    $('#txtApoderado').val(''); $('#txtApoderado').focus();
                });
            }

            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().trim().length == 0) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'Ingrese el código postal del pais de residencia', 'warning', function () { $('#txtDireccionDomicilioExterior').focus();  });
            }
            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().length &lt; 3) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'La longitud mínima del código postal es de 5 caracteres', 'warning', function () { $('#txtCodigoPostal').focus();  });
            }
            else if ($(&quot;#txtDireccionDomicilioExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Dirección Domicilio Exterior&quot; es requerido!', 'warning', function () { $('#txtDireccionDomicilioExterior').focus();  });
            }
            else if ($(&quot;#txtPaisEstado&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Pais Estado&quot; es requerido!', 'warning', function () { $('#txtPaisEstado').focus();  });
            }
            else if (($(&quot;#txtNumCasaExterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasaExterior&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasaExterior&quot;).val().trim().length > 10) &amp;&amp; esCRSControles) {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;#casa/edificio exterior&quot; es requerido, debe tener al menos ' + 3 + ' caracteres y máximo ' + 10 + '!', 'warning', function () { $('#txtNumCasaExterior').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Provincia&quot; en Datos Empresa es requerido!', 'warning', function () { $('#cbProvinciaPublico').focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == null &amp;&amp; ($('#lblEmpleadoPublico').is(':visible'))) {
                $('.h2toggle').next('.cont').hide();
                $('#divOcupacion').show();
                $('#lblEmpleadoPublico').show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Pais Empresa&quot; en Datos Empresa es requerido!', 'warning', function () { $('#cbPaisEmpresa').focus();  });
            }
            else if ($('#chkEsCargoEleccion').is(':checked') &amp;&amp;  !($(&quot;#txtCargoDeclaracionPEPS&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cargo&quot; en la Declaración PEPS es obligatorio', 'warning', () => { $('#txtCargoDeclaracionPEPS').focus();  });
            }
            else if ($('#chkEsCargoEleccion').is(':checked') &amp;&amp; !($(&quot;#txtInstitucionDeclaracionPEPS&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Institución&quot; en la Declaración PEPS es obligatorio', 'warning', () => { $('#txtInstitucionDeclaracionPEPS').focus();  });
            }
            else if ($('#chkEsCargoEleccion').is(':checked') &amp;&amp; !($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val())) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Fecha de nombramiento de designación&quot; en la Declaración PEPS es obligatorio', 'warning', () => { $('#txtFechaNombramientoDeclaracionPEPS').focus();  });
            }
            else if ($(&quot;#txtNombreUnidoPEP&quot;).val() == '' &amp;&amp; $('#chkEsRelacionPersonaPolitica').is(':checked') == true) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Nombre Unido PEP&quot; en la sección Otros es obligatorio', 'warning', function () { $('#txtNombreUnidoPEP').focus();  });
            }

            else if ($(&quot;#txtCargoPEP&quot;).val() == '' &amp;&amp; $('#chkEsRelacionPersonaPolitica').is(':checked') == true) {
                $('.h2toggle').next('.cont').hide();
                $('#divOtros').show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert('Campo requerido', 'El campo &quot;Cargo&quot; en la sección Otros es obligatorio', 'warning', function () { $('#txtCargoPEP').focus();  });
            }
            else {
                abrirModalOportunidad(listaCaptaciones);
                //Se previene el envio de datos directos de form en submit.
                e.preventDefault();
                var urlValidaIdentificacion = &quot;osapi/ServiceCliente.svc/ValidaIdentificacionExistente&quot;;
                //Se valida si existe un cliente con la misma identificación, en estado activo.
                
                $.ajax({
                    url: urlValidaIdentificacion,
                    type: 'POST',
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        tipo: $(&quot;#cbTipoDocumento&quot;).val()
                    }),
                    dataType: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (result) {
                        //Si la cédula ingresada no existe, se graba al cliente.
                        if (result.Correcto) {
                            grabarClienteNatural();
                        }
                        else {
                            
                            $.fn.window.defaults.closable = false;
                            $.messager.alert('Cliente no agregado', result.Informacion, 'warning');
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que graba los datos del nuevo cliente natural
        function grabarClienteNatural() {

            var grdListIngresos = $('#grdIngresos');
            var dataListIngresos = $.data(grdListIngresos[0], 'datagrid').data;
            var rowsListIngresos = dataListIngresos.rows;

            var grdListGastos = $('#grdGastos');
            var grdListGastos = $.data(grdListGastos[0], 'datagrid').data;
            var rowsListGastos = grdListGastos.rows;

            var grdListActivos = $('#grdActivos');
            var dataListActivos = $.data(grdListActivos[0], 'datagrid').data;
            var rowsListActivos = dataListActivos.rows;

            var grdListPasivos = $('#grdPasivos');
            var dataListPasivos = $.data(grdListPasivos[0], 'datagrid').data;
            var rowsListPasivos = dataListPasivos.rows;

            var rowsPaisObligacionTributaria = $('#chkPaisObligacionTributaria').val();
            var rowsNumeroIdentificacionTributariaExterior = $('#txtNumeroIdentificacionTributariaExterior').val();
            var rowsPaisObligacionTributaria2 = $('#chkPaisObligacionTributaria2').val();
            var rowsNumeroIdentificacionTributariaExterior2 = $('#txtNumeroIdentificacionTributariaExterior2').val();

            paisesObligacionesTributarias = {
                itemsPaisesObligacionesTributariasGrabar: []
            };

            if (rowsPaisObligacionTributaria != null) {
                if (rowsPaisObligacionTributaria.length > 0) {
                    paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                        &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                        &quot;codigoPais&quot;: rowsPaisObligacionTributaria,
                        &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior
                    });
                    if (rowsPaisObligacionTributaria2 != null &amp;&amp; $('#chkTributaExterior2').is(':checked') == true) {
                        if (rowsPaisObligacionTributaria2.length > 0) {
                            paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                                &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                                &quot;codigoPais&quot;: rowsPaisObligacionTributaria2,
                                &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior2
                            });
                        }
                    }

                }
            }
            else {
                itemsPaisesObligacionesTributariasGrabar: []
            }

            listaItemsEconomicosPatrimoniales = {
                itemsEconomicosPatrimonialesGrabar: []
            };


            if (rowsListIngresos.length > 0) {
                for (var i = 0; i &lt; rowsListIngresos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListIngresos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListIngresos[i].activos),
                        &quot;descripcion&quot;: '',
                        &quot;numeroVerificador&quot;: 1
                    });
                }
            }

            if (rowsListGastos.length > 0) {
                for (var i = 0; i &lt; rowsListGastos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListGastos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListGastos[i].activos),
                        &quot;descripcion&quot;: '',
                        &quot;numeroVerificador&quot;: 2
                    });
                }
            }

            if (rowsListActivos.length > 0) {
                for (var i = 0; i &lt; rowsListActivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListActivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListActivos[i].activos),
                        &quot;descripcion&quot;: rowsListActivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 3
                    });
                }
            }

            if (rowsListPasivos.length > 0) {
                for (var i = 0; i &lt; rowsListPasivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListPasivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListPasivos[i].activos),
                        &quot;descripcion&quot;: rowsListPasivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 4
                    });
                }
            }
            if ($(&quot;#cbTipoDocumento&quot;).val() == 'P' || offline) {
                $(&quot;#txtApellidos&quot;).val($(&quot;#txtApellidosPasaporte&quot;).val());
                $(&quot;#txtNombres&quot;).val($(&quot;#txtNombresPasaporte&quot;).val());
                $(&quot;#txtFechaNacimiento&quot;).val($(&quot;#txtFechaNacimientoPasaporte&quot;).val());
                if ($('#rbSexoHPasaporte').is(':checked')) {
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, false);
                }
                if ($('#rbSexoMPasaporte').is(':checked')) {
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, false);
                }
                $(&quot;#txtNumeroCargas&quot;).val($(&quot;#txtNumeroCargasPasaporte&quot;).val());
                var identificaconPasaporte = $(&quot;#txtIdentificacion&quot;).val().trim();
                $(&quot;#txtIdentificacion&quot;).val(identificaconPasaporte.toUpperCase());
            }

            var telefonoReferenciaPersonal_1 = $(&quot;#txtTelefonoPersonal&quot;).val();
            if ($(&quot;#txtTelefonoCelular&quot;).val() != '')
                telefonoReferenciaPersonal_1 += '/' + $(&quot;#txtTelefonoCelular&quot;).val();

            var telefonoReferenciaPersonal_2 = $(&quot;#txtTelefonoPersonal1&quot;).val();
            if ($(&quot;#txtTelefonoCelular1&quot;).val() != '')
                telefonoReferenciaPersonal_2 += '/' + $(&quot;#txtTelefonoCelular1&quot;).val();

            var telefonoReferenciaComercial_1 = $(&quot;#txtTelefonoCom&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom&quot;).val() != '')
                telefonoReferenciaComercial_1 += '/' + $(&quot;#txtTelefonoCelularCom&quot;).val();

            var telefonoReferenciaComercial_2 = $(&quot;#txtTelefonoCom1&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom1&quot;).val() != '')
                telefonoReferenciaComercial_2 += '/' + $(&quot;#txtTelefonoCelularCom1&quot;).val();

            var telefonoEmpresa = $(&quot;#txtTelefonoPublico&quot;).val();
            if ($(&quot;#txtTelefonoCelularEmpresa&quot;).val() != '')
                telefonoEmpresa += '/' + $(&quot;#txtTelefonoCelularEmpresa&quot;).val();

            var urlNuevoCliente = &quot;osapi/ServiceCliente.svc/GrabarCliente&quot;;
            var urlNuevoDatosConvenio = &quot;osapi/ServiceCliente.svc/GrabarDatosConvenio&quot;;
            var urlNuevoDatosEmpresa = &quot;osapi/ServiceCliente.svc/GrabarDatosEmpresa&quot;;
            var urlNuevoApoderado = &quot;osapi/ServiceCliente.svc/GrabarDatosApoderado&quot;;
            var urlNuevoEstablecimiento = &quot;osapi/ServiceCliente.svc/GrabarDatosEstablecimiento&quot;;

            var generoChar = null;
            if ($('#rbGeneroM').is(':checked'))
                generoChar = $('#rbGeneroM').val();
            else if ($('#rbGeneroF').is(':checked'))
                generoChar = $('#rbGeneroF').val();

            
            $.ajax({
                url: urlNuevoCliente,
                type: 'POST',
                data: JSON.stringify(
                    {
                        Cliente: {
                            codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                            tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                            direccionDomicilio: $(&quot;#txtDireccion&quot;).val().trim(),
                            telefonoDomicilio: $(&quot;#txtTelefono1&quot;).val().trim(),
                            email: $(&quot;#txtEmailOculto&quot;).val().trim(),
                            paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                            nacionalidad1: $(&quot;#cbNacionalidad1&quot;).val(),
                            nacionalidad2: $(&quot;#cbNacionalidad2&quot;).val(),
                            nacionalidad3: $(&quot;#cbNacionalidad3&quot;).val(),
                            zonaReside: $(&quot;#cbParroquiaReside&quot;).val().split('|')[1],
                            representantePrincipal: $(&quot;#txtRepresentante&quot;).val().trim(),
                            representanteSecundario: '',
                            estado: 'A',
                            nombreUnido: $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim(),
                            sectorEconomico: '000',
                            vinculo: 1,
                            puedeSerSocio: 0,
                            numeroVerificador: 1,
                            codigoUsuarioModifico: codigoUsuarioActual,
                            referencia: $(&quot;#txtReferenciaDireccion&quot;).val().trim(),
                            codigoGrupo: $(&quot;#cbGrupoEconomico&quot;).val().trim(),
                            telefono2: $(&quot;#txtTelefono2&quot;).val().trim(),
                            celular1: $(&quot;#txtCelular1&quot;).val().trim(),
                            celular2: $(&quot;#txtCelular2&quot;).val().trim(),
                            propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                            esMigrante: $('#chkMigrante').is(':checked') == true ? 0 : 1,
                            ciudadNacimiento: esCRSCiudadNacmientoExt ? $(&quot;#txtCiudadNacimiento&quot;).val() || null : null,
                            nCasa: $(&quot;#txtNumCasa&quot;).val() || 0,
                            codigoPostal: $(&quot;#txtCodigoPostal&quot;).val(),
                            paisGeneraDI: $(&quot;#cbPaisDI&quot;).val() || null,
                            esResidenteEC: $(&quot;input:radio[name ='radiog_reside']:checked&quot;).val() == &quot;S&quot; ? true : false,
                            calleSecundaria: $(&quot;#txtCalleSecundaria&quot;).val().trim().toUpperCase(),
                            correoValido: estaValidadoCorreo
                        },
                        EmailAsesor: (localStorage[&quot;emailAsesor&quot;] == undefined || localStorage[&quot;emailAsesor&quot;] == &quot;null&quot; || localStorage[&quot;emailAsesor&quot;] == &quot;oficialseguridad@oscus.coop&quot;) ? codigoUsuarioActual : localStorage[&quot;emailAsesor&quot;],
                        IdCrm: localStorage[&quot;idOportunidadCrm&quot;] == undefined || localStorage[&quot;idOportunidadCrm&quot;] == &quot;null&quot; ? &quot;&quot; : localStorage[&quot;idOportunidadCrm&quot;],
                        ClienteModelo: {
                            clienteNatural: {
                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                nombre: $(&quot;#txtNombres&quot;).val().trim(),
                                apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                                queSexo: $('#rbSexoH').is(':checked') ? $('#rbSexoH').val() : $('#rbSexoM').val(),
                                queGenero: generoChar,
                                estadoCivil: $(&quot;#cbEstadoCivil&quot;).val(),
                                numeroCargas: $(&quot;#txtNumeroCargas&quot;).val().trim(),
                                esDependiente: $(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '245' || $(&quot;#cbOcupacion&quot;).val() == '246' || $(&quot;#cbOcupacion&quot;).val() == '247' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249' ? 0 : 1,
                                nivelEducacion: $(&quot;#cbEducacion&quot;).val(),
                                queVivienda: $(&quot;#cbTipoVivienda&quot;).val(),
                                fechaNacimiento: '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNacimiento&quot;).val()))) - 18000000) + ')/',
                                queProfesion: $(&quot;#cbOcupacion&quot;).val(),
                                esNacional: $('#chkEsNacional').is(':checked') == true ? 0 : 1,
                                queActividadEconomica: $(&quot;#cbClasificacionActividad&quot;).val().trim(),
                                numeroverificador: 1,
                                esGravamen: $('#chkGravamen').is(':checked') == true ? 0 : 1,
                                obligadoLlevarContabilidad: $('#chkLlevarContabilidad').is(':checked') == true ? 0 : 1,
                                tipoFirma: 'N', //MDJR 2017/04/13 SIEMPRE N
                                clienteFirma: 0,
                                origenIngresos: $(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; ? &quot;N&quot; : $(&quot;#cbOrigenIngresos&quot;).val(),
                                profesionSBS: $(&quot;#cbProfesionSBS&quot;).val(),
                                tieneApoderado: $(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; ? 0 : 1,
                                paisResidencia: $(&quot;#cbPaisResidencia&quot;).val().trim(),
                                nacionalidadAmericana: $('#chkNacionalidadAmericana').is(':checked'),
                                enUnionLibre: $('#chEnUnionLibre').is(':checked'),
                                conDisolucionConyugal: $('#chConDisolucionConyugal').is(':checked'),
                                paisEstado: esCRSControles ? $(&quot;#txtPaisEstado&quot;).val().toUpperCase() : '',
                                direccionDomicilioExterior: esCRSControles ? $(&quot;#txtDireccionDomicilioExterior&quot;).val().toUpperCase() : '',
                                tributaExterior: $('#chkTributaExterior').is(':checked') == true ? 1 : 0,
                                nCasaExterior: esCRSControles ? $(&quot;#txtNumCasaExterior&quot;).val().toUpperCase() : '',
                                numeroIdentificacionTributariaExterior: $('#chkTributaExterior').is(':checked') == true ? $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val().toUpperCase() : &quot;&quot;,
                                secuencialGrupoEtnico: $(&quot;#cbGrupoEtnico&quot;).val()
                            },
                            //para calcular el nivel riesgo y revisar actividad cliente
                            cliente: {
                                codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                                tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                                propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                                paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                                nivelRiesgo: 0,
                                codigoUsuarioModifico: codigoUsuarioActual
                            },
                            referenciaComercial: {
                                nombre: $(&quot;#txtNombreCom&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom&quot;).val(),
                                telefono: telefonoReferenciaComercial_1,
                                prioridad: 1,
                                numeroVerificador: 1
                            },
                            referenciaBancaria: {
                                nombreBanco: $(&quot;#txtBanco&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta&quot;).val(),
                                prioridad: 1,
                                tipoCuenta: $(&quot;#cbTipoCuenta&quot;).val() || '',
                                numeroVerificador: 1
                            },
                            referenciaPersonal: {
                                nombre: $(&quot;#txtNombrePersonal&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal&quot;).val(),
                                telefono: telefonoReferenciaPersonal_1,
                                prioridad: 1,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco&quot;).val()
                            },
                            referenciaComercialNatural: {
                                nombre: $(&quot;#txtNombreCom1&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom1&quot;).val(),
                                telefono: telefonoReferenciaComercial_2,
                                prioridad: 2,
                                numeroVerificador: 1
                            },
                            referenciaBancariaNatural: {
                                nombreBanco: $(&quot;#txtBanco1&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta1&quot;).val(),
                                prioridad: 2,
                                tipoCuenta: $(&quot;#cbTipoCuenta1&quot;).val() || '',
                                numeroVerificador: 1
                            },
                            referenciaPersonalNatural: {
                                nombre: $(&quot;#txtNombrePersonal1&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal1&quot;).val(),
                                telefono: telefonoReferenciaPersonal_2,
                                prioridad: 2,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco1&quot;).val()
                            },
                            datoCrediticio: {
                                tiempoResidencia: 1,
                                numeroConyuge: numeroClienteConyuge,
                                codigoUsuarioModifico: codigoUsuarioActual,
                                descripcionActividad: $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() != '' ? $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val().trim().toUpperCase() : '',
                                tiempoActividad: $(&quot;#txtTiempoTrabajo&quot;).val().trim() == &quot;&quot; ? 0 : $(&quot;#txtTiempoTrabajo&quot;).val().trim(),
                                actividadSecundaria: ($(&quot;#cbClasificacionActividadSecundaria&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividadSecundaria&quot;).val() == null) ? null : $(&quot;#cbClasificacionActividadSecundaria&quot;).val(),
                                fechaInicioTrabajoAnterior: $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? '/Date(' + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + ')/' : '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val()))) - 18000000) + ')/',
                                fechaSalidaTrabajoAnterior: $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? '/Date(' + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + ')/' : '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaFinTrabajoAnterior&quot;).val()))) - 18000000) + ')/',
                                paisResidencia: $(&quot;#cbPaisOrigenRecursos&quot;).val().trim()
                            },
                            //se usa la clase DatoCrediticio para enviar otros datos
                            datosIngresosEgresos: {
                                ingresos: $(&quot;#txtIngresos&quot;).val() != '' ? $(&quot;#txtIngresos&quot;).val() : 0,
                                activos: $(&quot;#txtIngresosAdicionales&quot;).val() != '' ? $(&quot;#txtIngresosAdicionales&quot;).val() : 0,
                                egresos: $(&quot;#txtEgresos&quot;).val() != '' ? $(&quot;#txtEgresos&quot;).val() : 0,
                            },
                            datosPersonaRegistroCivil: {
                                numeroCliente: ($('#txtCodigoDactilar').is(':visible')) ? $(&quot;#txtNumeroCliente&quot;).val() : 0,
                                fechaExpedicion: ($('#txtCodigoDactilar').is(':visible')) ? '/Date(' + (parseFloat(Date.parse(toIsoDate($('#txtFechaExpedicionPersona').val()))) - 18000000) + ')/' : '/Date(' + (parseFloat(Date.parse(toIsoDate('01/01/1990'))) - 18000000) + ')/',
                                direccion: direccionPersonaRegistroCivil,
                                usuarioSkype: $(&quot;#txtUsuarioSkype&quot;).val().trim(),
                                usuarioFacebook: $(&quot;#txtUsuarioFacebook&quot;).val().trim(),
                                codigoDactilar: $(&quot;#txtCodigoDactilar&quot;).val().trim(),
                            },
                            pepsClientes: {
                                numeroCliente: $(&quot;#txtNumeroCliente&quot;).val(),
                                esCargoEleccion: $('#chkEsCargoEleccion').is(':checked') == true ? 1 : 0,
                                esRelacionPersonaPolitica: $('#chkEsRelacionPersonaPolitica').is(':checked') == true ? 1 : 0,
                                nombreUnidoPEP: $('#chkEsRelacionPersonaPolitica').is(':checked') == true ? $(&quot;#txtNombreUnidoPEP&quot;).val() != '' ? $(&quot;#txtNombreUnidoPEP&quot;).val().trim().toUpperCase() : '' : '',
                                cargoPEP: $('#chkEsRelacionPersonaPolitica').is(':checked') == true ? $(&quot;#txtCargoPEP&quot;).val() != '' ? $(&quot;#txtCargoPEP&quot;).val().trim().toUpperCase() : '' : '',
                            },
                            paisesObligacionesTributarias: $('#chkTributaExterior').is(':checked') == true ? paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar : [],
                            listaItemsEconomicosPatrimoniales: listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar,
                            geoReferenciacionClientes: {
                                latitudDomicilio: modificoGeoDomicilio ? latitudDomicilio : null,
                                longitudDomicilio: modificoGeoDomicilio ? longitudDomicilio : null,
                                usuarioActualiza: codigoUsuarioActual,
                            },
                            Offline: offline,
                            ConsultoRegistroCivil: consultarRegistroCivil,
                            DatoNegocioPropio: (!TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp;  !( $(&quot;#SecuencialDatoNegocioPropio&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDatoNegocioPropio&quot;).val() || 0,
                                ruc: $(&quot;#txtRucNegocioPropio&quot;).val(),
                                nombreNegocio: $(&quot;#txtNombreNegocioPropio&quot;).val(),
                                codigoPais: $(&quot;#cbPaisNegocioPropio&quot;).val(),
                                estado: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;? $(&quot;#txtEstadoNegocioPropio&quot;).val() : null,
                                telefonoExterior: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;?  $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val() : null,
                                codigoProvincia: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbProvinciaNegocioPropio&quot;).val(): null,
                                secuencialCanton: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbCantonNegocioPropio&quot;).val() : null,
                                telefono: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;?  $(&quot;#txtTelefonoNegocioPropio&quot;).val() : null,
                                celular: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#txtCelularNegocioPropio&quot;).val() :null,
                                direccion: $(&quot;#txtDireccionNegocioPropio&quot;).val(),
                                cargo: $(&quot;#txtCargoNegocioPropio&quot;).val(),
                                activo: TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()),
                                codigoUsuario: codigoUsuarioActual
                            },
                            DeclaracionPep:  (!$('#chkEsCargoEleccion').is(':checked') &amp;&amp; !($(&quot;#SecuencialDeclaracionPep&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDeclaracionPep&quot;).val() || 0,
                                cargo: $(&quot;#txtCargoDeclaracionPEPS&quot;).val(),
                                institucion: $(&quot;#txtInstitucionDeclaracionPEPS&quot;).val(),
                                fechaNombramiento: '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val()))) - 18000000) + ')/',
                                fechaCulminacion: $(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val() ? '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val()))) - 18000000) + ')/' : null,
                                activo: $('#chkEsCargoEleccion').is(':checked'),
                                codigoUsuario: codigoUsuarioActual
                            },
                            descripcionIngresoFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    valorIngresoSC: IngresosSC(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoSC: $(&quot;#txtDescripcionIngresos&quot;).val(),
                                    valorIngresoConyuge: IngresosConyuge(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoConyuge: $(&quot;#txtDescripcionIngresosConyuge&quot;).val(),
                                    valorOtrosIngresos: IngresosOtros(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionValorOtros: $(&quot;#txtDescripcionOtrosIngresos&quot;).val(),
                                    procedenciaDeLosFondos: $(&quot;#txtProcedenciaFondos&quot;).val()
                                } : null,
                            transaccionalidadMesFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    cantidadDepositos: $(&quot;#txtDepositosNumeroTransacciones&quot;).val(),
                                    montoTotalDepositos: $(&quot;#txtDepositosMonto&quot;).val(),
                                    cantidadTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(),
                                    cantidadTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(),
                                    cantidadRemesasRecibidas: $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasRecibidas: $(&quot;#txtRemesasRecibidasMonto&quot;).val(),
                                    cantidadRemesasEnviadas: $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasEnviadas: $(&quot;#txtRemesasEnviadasMonto&quot;).val()
                                } : null
                        }
                }),
                dataType: &quot;json&quot;,
                contentType: &quot;application/json; charset=utf-8&quot;,
                success: function (result) {
                    //Si se ha ingresado correctamente en la tabla clientes, se ingresa en la tabla cliente natural.
                    if (result.Correcto) {
                        numeroClienteGenerado = result.Anexo.NumeroCliente;
                        document.getElementById('lblAsesor').innerHTML = result.Anexo.SecuencialCliente.split('|')[1];
                        document.getElementById('txtCodigoAsesor').value = result.Anexo.SecuencialCliente.split('|')[2];
                        document.getElementById('txtCodigoOficina').value = result.Anexo.SecuencialCliente.split('|')[3];
                        if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;S&quot;) {
                            secuencialCodigoClienteGenerado = result.Anexo.SecuencialCliente.split('|')[0];
                            $(&quot;#txtIdentificacion&quot;).val(secuencialCodigoClienteGenerado);
                        }
                        if (result.Informacion != '') {
                            $.fn.window.defaults.closable = false;
                            $.messager.alert('Nota', result.Informacion, 'info', function () { });
                        }
                                //Si se grabó correctamente el cliente natural, se graban datos de apoderado o de educación.
                                var mensajeResultGrabarClienteNatural = result.Informacion;
                                if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot;) {
                                    $.ajax({
                                        url: urlNuevoApoderado,
                                        type: 'POST',
                                        data: JSON.stringify({
                                            numeroCliente: result.Anexo.NumeroCliente,
                                            codigoClienteApoderado: $(&quot;#txtApoderado&quot;).val().trim(),
                                            fechaEmision: '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaEmision&quot;).val()))) - 18000000) + ')/',
                                            fechaCaducidad: '/Date(' + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCaducidad&quot;).val()))) - 18000000) + ')/',
                                            codigoUsuario: codigoUsuarioActual,
                                            tipoPoder: $('input[name=rbPoder]:checked').val()
                                        }),
                                        dataType: &quot;json&quot;,
                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                        success: function (result) {
                                            //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                            if (result.Correcto) {
                                                if ($('#chkConvenioPublico').is(':checked') == true) {
                                                    $.ajax({
                                                        url: urlNuevoDatosConvenio,
                                                        type: 'POST',
                                                        data: JSON.stringify({
                                                            convenio: {
                                                                secuencialConvenio: getSelected(),
                                                                usuarioIngreso: codigoUsuarioActual,
                                                                usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                estaActivo: 0,
                                                                debitoDeCuentaDeEmpresa: 0,
                                                                acreditaRolACuentaEmpresa: 1,
                                                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                numeroCliente: result.Anexo.NumeroCliente
                                                            },
                                                            datosEmpresa: {
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim().toUpperCase(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim().toUpperCase(),
                                                                telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val() != null ? $(&quot;#txtCargoPublico&quot;).val().trim().toUpperCase() : '',
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }
                                                        }),
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {
                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $('#imgRegistrarHuellas').show();
                                                                $('#imgRegistrarHuellasDisabled').hide();
                                                                $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false)) {
                                                    $.ajax({
                                                        url: urlNuevoDatosEmpresa,
                                                        type: 'POST',
                                                        data: JSON.stringify({
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }),
                                                        //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {

                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $('#imgRegistrarHuellas').show();
                                                                $('#imgRegistrarHuellasDisabled').hide();
                                                                $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/, false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    ActivarDesactivarBotones();
                                                    $('#imgRegistrarHuellas').show();
                                                    $('#imgRegistrarHuellasDisabled').hide();
                                                    $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                        impresionFormularioPendiente = true;
                                                    });
                                                }
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                            }
                                        },
                                        error: ajaxError
                                    });
                                }
                                else {
                                    // if ($(&quot;#cbEducacion&quot;).val() == 'P' || $(&quot;#cbEducacion&quot;).val() == 'S') {
                                    if ($(&quot;#cbEstablecimiento&quot;).val() &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == 'P' || $(&quot;#cbEducacion&quot;).val() == 'S')) {
                                        //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                                        $.ajax({
                                            url: urlNuevoEstablecimiento,
                                            type: 'POST',
                                            data: JSON.stringify({
                                                codigoEstablecimiento: $('#cbEstablecimiento').val(),
                                                numeroCliente: result.Anexo.NumeroCliente
                                            }),
                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                            dataType: &quot;json&quot;,
                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                            success: function (result) {
                                                //Si correctamente el establecimiento se procede a ingresar datos Empresa
                                                if (result.Correcto) {
                                                    if ($('#chkConvenioPublico').is(':checked') == true) {
                                                        $.ajax({
                                                            url: urlNuevoDatosConvenio,
                                                            type: 'POST',
                                                            data: JSON.stringify({
                                                                convenio: {
                                                                    secuencialConvenio: getSelected(),
                                                                    usuarioIngreso: codigoUsuarioActual,
                                                                    usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    estaActivo: 0,
                                                                    debitoDeCuentaDeEmpresa: 0,
                                                                    acreditaRolACuentaEmpresa: 1,
                                                                    codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    numeroCliente: result.Anexo.NumeroCliente
                                                                },
                                                                datosEmpresa: {
                                                                    nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                    direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                    telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                    cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                    pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                    paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                    sueldoMensual: 0,
                                                                    numeroVerificador: 1,
                                                                    secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                    numeroCliente: result.Anexo.NumeroCliente,
                                                                    secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                    telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;

                                                                }
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {
                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $('#imgRegistrarHuellas').show();
                                                                    $('#imgRegistrarHuellasDisabled').hide();
                                                                    $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false)) {
                                                        $.ajax({
                                                            url: urlNuevoDatosEmpresa,
                                                            type: 'POST',
                                                            data: JSON.stringify({
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {

                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $('#imgRegistrarHuellas').show();
                                                                    $('#imgRegistrarHuellasDisabled').hide();
                                                                    $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else {
                                                        
                                                        $.fn.window.defaults.closable = false;
                                                        ActivarDesactivarBotones();
                                                        $('#imgRegistrarHuellas').show();
                                                        $('#imgRegistrarHuellasDisabled').hide();
                                                        $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                            VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                            impresionFormularioPendiente = true;
                                                        });
                                                    }
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                }
                                            },
                                            error: ajaxError
                                        });
                                    }
                                    else {
                                        //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                        if (result.Correcto) {
                                            if ($('#chkConvenioPublico').is(':checked') == true) {
                                                $.ajax({
                                                    url: urlNuevoDatosConvenio,
                                                    type: 'POST',
                                                    data: JSON.stringify({
                                                        convenio: {
                                                            secuencialConvenio: getSelected(),
                                                            usuarioIngreso: codigoUsuarioActual,
                                                            usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            estaActivo: 0,
                                                            debitoDeCuentaDeEmpresa: 0,
                                                            acreditaRolACuentaEmpresa: 1,
                                                            codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            numeroCliente: result.Anexo.NumeroCliente
                                                        },
                                                        datosEmpresa: {
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }
                                                    }),
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (resultDatosConvenio) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $('#imgRegistrarHuellas').show();
                                                            $('#imgRegistrarHuellasDisabled').hide();
                                                            $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else if (($(&quot;#cbOrigenIngresos&quot;).val() == 'B' || $(&quot;#cbOrigenIngresos&quot;).val() == 'V' || $(&quot;#cbOcupacion&quot;).val() == '248' || $(&quot;#cbOcupacion&quot;).val() == '249') &amp;&amp; ($('#chkConvenioPublico').is(':checked') == false)) {
                                                $.ajax({
                                                    url: urlNuevoDatosEmpresa,
                                                    type: 'POST',
                                                    data: JSON.stringify({
                                                        nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                        direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                        telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                        cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                        sueldoMensual: 0,
                                                        numeroVerificador: 1,
                                                        numeroCliente: result.Anexo.NumeroCliente,
                                                        secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                        secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == 'EC' ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                        pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                        paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                        telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != 'EC' ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                    }),
                                                    //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (result) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $('#imgRegistrarHuellas').show();
                                                            $('#imgRegistrarHuellasDisabled').hide();
                                                            $.messager.alert('Cliente agregado', mensajeResultGrabarClienteNatural, 'info', function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert('Cliente no agregado', 'No se ha podido agregar cliente natural.', 'error', function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                ActivarDesactivarBotones();
                                                $('#imgRegistrarHuellas').show();
                                                $('#imgRegistrarHuellasDisabled').hide();
                                                //$.messager.alert('Cliente agregado', 'Cliente ingresado correctamente!', 'info', function () {
                                                $.messager.alert('Cliente agregado', result.Informacion, 'info', function () {
                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                    impresionFormularioPendiente = true;
                                                });
                                            }
                                        }
                                        else {
                                            
                                            $.fn.window.defaults.closable = false;
                                            $.messager.alert('Cliente no agregado', result.Informacion, 'error', function () { });
                                        }
                                    }
                                }
                        //Verificar solicitud de tarjeta de debito EDRS 15/07/2019
                        VerificaTarjetaDebito(result.Anexo.NumeroCliente, true);
                    }
                    else {
                        
                        $.fn.window.defaults.closable = false;
                        $.messager.alert('Cliente no agregado', result.Informacion, 'error', function () { });
                    }
                    localStorage['listaOportunidades'] = false;
                    localStorage[&quot;emailAsesor&quot;] = '';
                    localStorage[&quot;idOportunidadCrm&quot;] = '';
                },
                error: ajaxError
            });
        }

        function DeshabilitarEdicion() {
            $(&quot;#txtTipoDocumentoSeleccionado&quot;).val((document.getElementById('cbTipoDocumento').options[document.getElementById('cbTipoDocumento').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEstadoCivilSeleccionado&quot;).val((document.getElementById('cbEstadoCivil').options[document.getElementById('cbEstadoCivil').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtPaisSeleccionado&quot;).val((document.getElementById('cbPaisOrigen').options[document.getElementById('cbPaisOrigen').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtProvinciaSeleccionada&quot;).val((document.getElementById('cbProvinciaReside').options[document.getElementById('cbProvinciaReside').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtCantonSeleccionado&quot;).val((document.getElementById('cbCantonReside').options[document.getElementById('cbCantonReside').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtParroquiaSeleccionada&quot;).val((document.getElementById('cbParroquiaReside').options[document.getElementById('cbParroquiaReside').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEducacionSeleccionada&quot;).val((document.getElementById('cbEducacion').options[document.getElementById('cbEducacion').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtTipoViviendaSeleccionada&quot;).val((document.getElementById('cbTipoVivienda').options[document.getElementById('cbTipoVivienda').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtOcupacionSeleccionada&quot;).val((document.getElementById('cbOcupacion').options[document.getElementById('cbOcupacion').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtClasificacionSeleccionada&quot;).val((document.getElementById('cbClasificacionActividad').options[document.getElementById('cbClasificacionActividad').selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtGrupoEconomicoSeleccionado&quot;).val((document.getElementById('cbGrupoEconomico').options[document.getElementById('cbGrupoEconomico').selectedIndex].innerHTML).toUpperCase());
            //$('#divTipoDocumentoSelect').hide();
            //$('#divTipoDocumentoText').show();
            //$('#divEstadoCivilSelect').hide();
            //$('#divEstadoCivilText').show();
            $('#divPaisSelect').hide();
            $('#divPaisText').show();
            $('#divProvinciaSelect').hide();
            $('#divProvinciaText').show();
            $('#divCantonSelect').hide();
            $('#divCantonText').show();
            $('#divParroquiaSelect').hide();
            $('#divParroquiaText').show();
            $('#divEducacionSelect').hide();
            $('#divEducacionText').show();
            $('#divTipoViviendaSelect').hide();
            $('#divTipoViviendaText').show();
            $('#divOcupacionSelect').hide();
            $('#divOcupacionText').show();
            $('#divClasificacionActividadSelect').hide();
            $('#divClasificacionActividadText').show();
            $('#divGrupoEconomicoSelect').hide();
            $('#divGrupoEconomicoText').show();
            $('#txtApellidos').prop('readonly', true);
            $('#txtNombres').prop('readonly', true);
            $('#txtIdentificacion').prop('readonly', true);
            $('#txtDireccion').prop('readonly', true);
            $('#txtTelefono1').prop('readonly', true);
            $('#txtTelefono2').prop('readonly', true);
            $('#txtCelular1').prop('readonly', true);
            $('#txtCelular2').prop('readonly', true);
            $('#txtEmail').prop('readonly', true);
            $('#txtReferencia').prop('readonly', true);
            $('#txtNumeroCargas').prop('readonly', true);
            $('#txtFechaNacimiento').prop('readonly', true);
            $('#txtRepresentante').prop('readonly', true);
            $('#rbSexoH').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#rbSexoM').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtFechaNacimiento').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        }

        function ActivarDesactivarBotones() {
            $('#divGuardarEnabled').hide();
            $('#divGuardarDisabled').show();
            $('#divPrinterDisabled').hide();
            $('#divPrinterEnabled').show();
            DeshabilitarEdicion();
        }


        function ListaControl() {
            var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
            if ($(&quot;#txtApellidos&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtApellidos&quot;).val().trim() != &quot;undefined&quot; &amp;&amp;
                $(&quot;#txtNombres&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombres&quot;).val().trim() != &quot;undefined&quot;) {
                if ($(&quot;#cbTipoDocumento&quot;).val() == 'C') {
                    if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot;) {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert('Campo requerido', 'Ingrese el Nº de Cédula para procesar Lista de Control', 'warning', function () { $('#txtIdentificacion').focus(); });
                        return;
                    }
                }
                $.fn.window.defaults.closable = false;
                var urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
                $.ajax({
                    url: urlListaControl,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                        nombre: $(&quot;#txtNombres&quot;).val().trim(),
                        estadoCivil: $(&quot;#cbTipoDocumento&quot;).val(),
                        nivelEducacion: codigoUsuarioActual
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Correcto) {
                            if (resultado.Anexo.EstaEnConsepEsSindicado || resultado.Anexo.EstaEnConsepEsHomonimo || resultado.Anexo.EstaEnOFAC ||
                                resultado.Anexo.EstaEnProvidenciasJudiciales || resultado.Anexo.EstaEnListaONU || resultado.Anexo.EstaEnEmpresasFantasma) {
                                $.fn.window.defaults.closable = false;
                                $.messager.alert('Lista Control', resultado.Informacion, 'warning', function () { window.location.href = '/OSCUS.Aplicacion/'; });
                            }
                            else {
                                if (resultado.Informacion != '') { //Esto se da solo cuando el cliente ingresad esta en RegistrosClientesListaNegra
                                    $.fn.window.defaults.closable = false;
                                    $.messager.alert('Lista Control', resultado.Informacion, 'warning', function () { window.location.href = '/OSCUS.Aplicacion/'; });
                                }
                                var apellidosnombreCliente = $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim();
                                var urlNombreRemplazar = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=nombreUnido eq '{0}' and estado eq 'A'&quot;;
                                $.ajax({
                                    url: urlNombreRemplazar.replace(&quot;{0}&quot;, apellidosnombreCliente),
                                    dataType: &quot;json&quot;,
                                    cache: &quot;false&quot;,
                                    success: function (result) {
                                        
                                        if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                                            if (result.value.length >= 1) {
                                                divGrdClientesHomonimos.style.display = &quot;block&quot;;
                                                $('#grdClientesHomonimos').datagrid({
                                                    fitColumns: true,
                                                    striped: true,
                                                    nowrap: false,
                                                    sortName: 'released',
                                                    sortOrder: 'asc',
                                                    width: '100%'
                                                });
                                                $('#grdClientesHomonimos').datagrid('loadData', result.value);
                                                AbrirVentanaClientesHomonimos();
                                            }
                                        }
                                    },
                                    error: ajaxError
                                });

                            }
                        }
                        else {
                            $.messager.alert('Error', resultado.Informacion, 'error');
                        }
                    },
                });
            }
        }

        jQuery(function ($) {

            jQuery(document).on('keyup', field, function () {
                if (field.val().indexOf(arroba) > 0) {
                    if (!enmascarado) {
                        var email = field.val().split(arroba);
                        field.val(oculta(email[0]) + arroba + email[1]);
                        hiddenField.val(email[0] + arroba + email[1]);
                    }
                    else {
                        if (field.val().split(arroba)[0].length != hiddenField.val().split(arroba)[0].length) {
                            enmascarado = false;
                            field.val(&quot;&quot;);
                            hiddenField.val(&quot;&quot;);
                        }
                        else hiddenField.val(hiddenField.val().split(arroba)[0] + arroba + field.val().split(arroba)[1]);
                    }
                } else if (enmascarado &amp;&amp; field.val().length >= 0) {
                    field.val(&quot;&quot;);
                    hiddenField.val(&quot;&quot;);
                    enmascarado = false;
                }
            });
            ////////////////////////////////////////////// fin enmascara //////////////////////////////////////////////////////////////

            //Función que maneja el evento de click en grid de convenio institucional.
            $(document).ready(function () {
                $('#grdConvenioInstitucional').datagrid({
                    onClickRow: function (rowIndex, rowData) {
                        //Se cargan los datos de empresa
                        if (rowData.numeroCliente != null &amp;&amp; rowData.numeroCliente != &quot;&quot;) {
                            var url = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$expand=zonaResideNavigation($select=secuencialCantonNavigation;$expand=secuencialCantonNavigation($select=secuencial,codigoProvincia))&amp;$filter=numeroCliente eq {0}&amp;$select=direccionDomicilio,telefonoDomicilio,celular1,nombreUnido&quot;;
                            
                            $.ajax({
                                url: url.replace(&quot;{0}&quot;, rowData.numeroCliente),
                                dataType: &quot;json&quot;,
                                cache: &quot;false&quot;,
                                success: function (result) {
                                    if (result.value[0] != null &amp;&amp; result.value[0] != undefined &amp;&amp; result.value[0] != &quot;&quot;) {
                                        $('#txtNombreEmpleador').val(result.value[0].nombreUnido);
                                        $('#txtTelefonoPublico').val(result.value[0].telefonoDomicilio);
                                        $('#txtTelefonoCelularEmpresa').val(result.value[0].celular1);
                                        $('#txtDireccionPublico').val(result.value[0].direccionDomicilio);
                                        codProvinciaEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.codigoProvincia.trim()
                                        $('#cbProvinciaPublico').val(codProvinciaEmpresa);
                                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                                        codCantonEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.secuencial;
                                        CargaCantonEmpresa(codProvinciaEmpresa);
                                        
                                    }
                                }
                            });
                        }
                    }
                });
            });
            //Datepicker fecha nacimiento
            $(document).ready(function () {
                $(function () {
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: 'De click para seleccionar la fecha',
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa']
                    });
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker fecha de emisión
                $(function () {
                    $(&quot;#txtFechaEmision&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: 'De click para seleccionar la fecha',
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                        disabled: true
                    });
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker Fecha Inicio Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: 'De click para seleccionar la fecha',
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa']
                    });
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });


                //Datepicker Fecha Fin Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: 'Anterior',
                        nextText: 'Siguiente',
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: 'De click para seleccionar la fecha',
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sábado'],
                        dayNamesShort: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa'],
                        dayNamesMin: ['Do', 'Lu', 'Ma', 'Mi', 'Ju', 'Vi', 'Sa']
                    });
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });
            });

            //Función que controla tooltip de validación.
            $(document).ready(function () {
                //*************** Para tooltip personalizado *******************
                $('.masterTooltip').hover(function () {
                    // Hover over code
                    var title = $(this).attr('title');
                    $(this).data('tipText', title).removeAttr('title');
                    $('&lt;p class=&quot;tooltip&quot;>&lt;/p>')
                    .text(title)
                    .appendTo('body')
                    .fadeIn('slow');
                }, function () {
                    // Hover out code
                    $(this).attr('title', $(this).data('tipText'));
                    $('.tooltip').remove();
                }).mousemove(function (e) {
                    var mousex = e.pageX + 30; //Get X coordinates
                    var mousey = e.pageY - 65 //Get Y coordinates
                    $('.tooltip')
                    .css({
                        top: mousey,
                        left: mousex,
                        color: '#105D99',
                        background: '#AEC63C url(&quot;../Images/Info_x24.png&quot;) no-repeat left',
                        //opacity: '0.9',
                        //filter: 'alpha(opacity = 90)',
                        borderColor: 'transparent',
                        fontSize: '0.95em',
                        paddingLeft: '25px',
                        boxShadow: '1px 1px 1px #818181',
                        MozBoxShadow: '1px 1px 1px #818181',
                        WebkitBoxShadow: '1px 1px 1px #818181',
                        zIndex: '999999'
                    })
                });
            });

            $(document).ready(function () {
                //Se inicia con la lista de clientes oculta.
                var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
                divGrdClientesHomonimos.style.display = &quot;none&quot;;
            });


            //Función que mantiene visible el div de menu
            $(document).ready(function () {
                var $sidebar = $(&quot;#divMenuIz&quot;),
                $window = $(window),
                offset = $sidebar.offset(),
                topPadding = 15;

                $window.scroll(function () {
                    if ($window.scrollTop() > offset.top) {
                        $sidebar.addClass('fixed');
                    } else {
                        $sidebar.removeClass('fixed');
                    }
                });
            });
            //Acciones que deben ejecutarse al iniciar.
            $(document).ready(function () {

                if (codigoUsuarioActual.indexOf('&amp;#209;'))
                    codigoUsuarioActual = codigoUsuarioActual.replace('&amp;#209;', 'Ñ')
                //Se cambia la altura del menu dinamicamente
                divMenu = document.getElementById('divMenu');
                divMenu.style.height = &quot;600px&quot;;
                $('#divPaisText').hide();
                //Se personaliza botones de popups.
                $.messager.defaults.ok = 'Aceptar';
                $.messager.defaults.cancel = 'Cancelar';

                $('#dlgListaHomonimos').dialog({
                    title: 'CLIENTES HOMÓNIMOS',
                    position: 'center',
                    draggable: true,
                    collapsible: false,
                    minimizable: false,
                    maximizable: false,
                    resizable: true,
                    closable: false,
                    width: 650,
                    height: 310,
                    closed: false,
                    cache: false,
                    modal: true
                });
                $('#dlgListaHomonimos').dialog('close');

                if ('' != null &amp;&amp; '' != &quot;&quot; &amp;&amp; '' != null &amp;&amp; '' != &quot;&quot; &amp;&amp; '' != null &amp;&amp; '' != &quot;&quot;) {
                    $('#txtApellidos').val('');
                    $('#txtNombres').val('');
                    $('#txtIdentificacion').val('');
                }


                //Para acordeón.
                $(&quot;#h1Datos&quot;).click(function (e) {

                    if ($(&quot;#divDatosCliente&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Direccion&quot;).click(function (e) {
                    if ($(&quot;#divDireccion&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Ocupacion&quot;).click(function (e) {
                    if ($(&quot;#divOcupacion&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1SituacionEconomica&quot;).click(function (e) {
                    if ($(&quot;#divSituacionEconomica&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Referencias&quot;).click(function (e) {
                    if ($(&quot;#divReferencias&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Otros&quot;).click(function (e) {
                    if ($(&quot;#divOtros&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1GeoDomicilio&quot;).click(function (e) {
                    if ($(&quot;#divGeoDomicilio&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        GeoDomicilio(&quot;/OSCUS.Aplicacion/&quot;);
                    }
                });

                $(&quot;#h1ManoDerecha&quot;).click(function (e) {
                    if ($(&quot;#divManoDerecha&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).hide();
                    }
                    $(&quot;#h1ManoIzquierda&quot;).removeClass(&quot;boldFont&quot;);
                });

                $(&quot;#h1ManoIzquierda&quot;).click(function (e) {
                    if ($(&quot;#divManoIzquierda&quot;).is(':visible')) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).hide();
                    }
                    $(&quot;#h1ManoDerecha&quot;).removeClass(&quot;boldFont&quot;);
                });

                $('.h2toggle').next('.cont').hide();

                $('.h2toggle').click(function () {
                    var el = $(this).next('.cont');
                    isVisible = el.is(':visible') ? el.slideUp() : el.slideDown();
                });

                //Se inicia con la sección de datos cliente abierta.
                $('#divDatosCliente').show();
                $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);

                var urlFechaSistema = &quot;/OSCUS.Aplicacion/odata/Calendarios?$format=json&amp;$top=1&amp;$filter=estaCerrado eq 1&amp;$select=fechaSistema&amp;$orderby=fechaSistema asc&quot;;
                
                $.ajax({
                    url: urlFechaSistema,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultFechaSistema) {
                        if (resultFechaSistema.value[0] != null &amp;&amp; resultFechaSistema.value[0] != &quot;&quot; &amp;&amp; resultFechaSistema.value[0] != undefined)
                            fechaSistema = resultFechaSistema.value[0].fechaSistema.split('T')[0].split('-')[2] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split('T')[0].split('-')[1] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split('T')[0].split('-')[0];
                    }
                });
                //Se da formato a combosBox
                var config = {
                    '.chosen-select': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true },
                    '.chosen-select-deselect': { allow_single_deselect: true },
                    '.chosen-select-no-single': { disable_search: true },
                    '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
                    '.chosen-select-width': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    '.chosen-select-tipoDocumento': { disable_search: true, width: &quot;44%&quot; },
                    '.chosen-select-estadoCivil': { disable_search: true, width: &quot;55%&quot; },
                    '.chosen-select-estadoCivilPasaporte': { disable_search: true, width: &quot;57%&quot; },
                    '.chosen-select-educacion': { disable_search: true, width: &quot;75%&quot; },
                    '.chosen-select-establecimiento': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;65%&quot; },
                    '.chosen-select-paisOrigenRecursos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;150px&quot; },
                    '.chosen-select-paisOrigen': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    '.chosen-select-nacionalidad': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    '.chosen-select-paisobligaciontributaria': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    '.chosen-select-paisobligaciontributaria2': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    '.chosen-select-paisResidencia': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    '.chosen-select-provinciaReside': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    '.chosen-select-cantonReside': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    '.chosen-select-parroquiaReside': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    '.chosen-select-tipoVivienda': { disable_search: true, width: &quot;200px&quot; },
                    '.chosen-select-origenIngresos': { disable_search: true, width: &quot;65%&quot; },
                    '.chosen-select-ocupacion': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;74%&quot; },
                    '.chosen-select-profesionSBS': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;50%&quot; },
                    '.chosen-select-grupoEconomico': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;81%&quot; },
                    '.chosen-select-clasificacionActividad': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;77%&quot; },

                    '.chosen-select-propositoRelacion': { disable_search: true, width: &quot;20%&quot; },
                    '.chosen-select-condicionFirmas': { disable_search: true, width: &quot;47%&quot; },
                    '.chosen-select-parentescoVinculo': { disable_search: true, width: &quot;37%&quot; },
                    '.chosen-select-causalVinculo': { disable_search: true, width: &quot;48%&quot; },
                    '.chosen-select-grupoEconomicoSecundario': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    '.chosen-select-clasificacionActividadSecundaria': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    '.chosen-select-tipoCuenta': { disable_search: true, width: &quot;100%&quot; },
                    '.chosen-select-tipoCuenta1': { disable_search: true, width: &quot;100%&quot; },
                    '.chosen-select-paisOrigenDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; }, //desde aqui para Nuevo Cliente Datos Basicos
                    '.chosen-select-provinciaResideDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    '.chosen-select-tipoDocumentoDatosBasicos': { disable_search: true, width: &quot;52%&quot; },
                    '.chosen-select-estadoCivilDatosBasicos': { disable_search: true, width: &quot;220px&quot; },
                    '.chosen-select-educacionDatosBasicos': { disable_search: true, width: &quot;220px&quot; },
                    '.chosen-select-tipoViviendaDatosBasicos': { disable_search: true, width: &quot;100%&quot; },
                    '.chosen-select-grupoEconomicoDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    '.chosen-select-clasificacionActividadDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    '.chosen-select-cantonResideDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    '.chosen-select-parroquiaResideDatosBasicos': { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                }

                for (var selector in config) {
                    $(selector).chosen(config[selector]);
                }
                document.getElementById('cbTipoDocumento').value = 'C';
                $(&quot;#cbTipoDocumento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                $('#txtIdentificacion').focus();

                IpCliente = '';
                //Se ingresan datos en comboBox de Paises
                var urlPaises = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
                
                $.ajax({
                    url: urlPaises,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultPaises) {
                        $('#cbPaisOrigen').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbPaisOrigenDatosBasicos').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbPaisOrigenRecursos').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');//
                        $('#cbPaisResidencia').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbPaisEmpresa').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(resultPaises.value, function (key, value) {
                            $(&quot;#cbPaisOrigen&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            $(&quot;#cbPaisOrigenDatosBasicos&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            $(&quot;#cbPaisOrigenRecursos&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            $(&quot;#cbPaisResidencia&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            $(&quot;#cbPaisEmpresa&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            $(&quot;#cbPaisDI&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                            if (value.esParaisoFiscal == 0) arrPaises.push(value.codigo);
                        });
                        $(&quot;#cbPaisOrigen&quot;).val('EC');
                       // CambiarEsNacional(document.getElementById('cbPaisOrigen'));
                        $(&quot;#cbPaisOrigen&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).val('EC');
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenRecursos&quot;).val('EC');
                        $(&quot;#cbPaisOrigenRecursos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisResidencia&quot;).val('EC');
                        $(&quot;#cbPaisResidencia&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarControles(document.getElementById('cbPaisResidencia'));
                        HabilitarNacionalidad2(document.getElementById('cbNacionalidad1'));
                        HabilitarNacionalidad3(document.getElementById('cbNacionalidad2'));
                        HabilitarTributaExterior(document.getElementById('chkTributaExterior'));
                        HabilitarTributaExterior2(document.getElementById('chkTributaExterior2'));
                        $(&quot;#cbPaisEmpresa&quot;).val('EC');
                        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarDatosTrabajo(document.getElementById('cbPaisEmpresa'));
                        HabilitarEsRelacionPersonaPolitica(document.getElementById('chkEsRelacionPersonaPolitica'));
                        CargaNacionalidad();
                        CargaPaisObligacionTributaria();
                        $(&quot;#cbPaisDI&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de provincias
                var urlProvincias = &quot;/OSCUS.Aplicacion/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlProvincias,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultProvincias) {
                        $('#cbProvinciaReside').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbProvinciaResideDatosBasicos').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbProvinciaPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(resultProvincias.value, function (key, value) {
                            $(&quot;#cbProvinciaReside&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                            $(&quot;#cbProvinciaPublico&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                            $(&quot;#cbProvinciaResideDatosBasicos&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                        });
                        $(&quot;#cbProvinciaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaResideDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de ocupación
                var url = &quot;/OSCUS.Aplicacion/odata/Profesiones?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $('#cbOcupacion').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbOcupacion&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                        });
                        $(&quot;#cbOcupacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de grupo económico y grupo económico secundario
                var url = &quot;/OSCUS.Aplicacion/odata/GruposActividadesEconomicas?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $('#cbGrupoEconomico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbGrupoEconomicoSecundario').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $('#cbGrupoEconomicoDatosBasicos').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbGrupoEconomico&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                            $(&quot;#cbGrupoEconomicoSecundario&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                            $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                        });
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).append('&lt;option value=' + &quot;N&quot; + '>' + &quot;NINGUNO&quot; + '&lt;/option>');
                        $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de profesión SBS
                var url = &quot;/OSCUS.Aplicacion/odata/ProfesionesSBS?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $('#cbProfesionSBS').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbProfesionSBS&quot;).append('&lt;option value=' + value.codigo + '>' + value.nombre + '&lt;/option>');
                        });
                        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
                //}
            });
            CargaListaGrupoEtnico();
        });




        //Funciones de navegación de menu izquierda.
        function fnNavegar(opcion) {
            if ($('#divPrinterDisabled').is(':visible')) {
                if (opcion == 3) {
                    if ($('#txtApellidos').val().trim() != &quot;&quot; &amp;&amp; $('#txtNombres').val().trim() != &quot;&quot; &amp;&amp; $('#txtIdentificacion').val().trim() != &quot;&quot;) {
                        $.ajax({
                            url: '/OSCUS.Aplicacion/Cliente/GrabaVariablesSesion',
                        type: 'POST',
                        data: JSON.stringify({
                            codigo: $('#txtIdentificacion').val().trim().toUpperCase(),
                            nombre: $('#txtNombres').val().trim().toUpperCase(),
                            apellido: $('#txtApellidos').val().trim().toUpperCase(),
                        }),
                        dataType: &quot;json&quot;,
                        contentType: &quot;application/json; charset=utf-8&quot;,
                        success: function (data) {
                            
                            //Se redirige a pantalla de Datos Generales de Cliente.
                            window.location.href = '/OSCUS.Aplicacion/Cliente/Cotizador?id=' + encodeStr(Encrypt($('#txtIdentificacion').val().trim()));
                            },
                        error: ajaxError
                    });
                    }
                    else {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert('Campos obligatorios', 'Debe ingresar: identificación, nombre y apellido!', 'warning', function () {
                            //Se habilita pestaña de datos.
                            $('.h2toggle').next('.cont').hide();
                            $('#divDatosCliente').show();
                            DatosAbierto();
                            //Se hace focus en campo vacío.
                            $('#txtIdentificacion').val().trim() == &quot;&quot; ? $('#txtIdentificacion').focus() : $('#txtApellidos').val().trim() == &quot;&quot; ? $(&quot;#txtApellidos&quot;).focus() : $(&quot;#txtNombres&quot;).focus();
                        });
                    }
                }
                else {
                    $.fn.window.defaults.closable = false;
                    $.messager.alert('Opción incorrecta', 'Primero debe guardar la información del cliente!', 'warning');
                }

            }
            else if ($('#divPrinterEnabled').is(':visible')) {
                if (opcion == 1) {
                    window.location.href = '/OSCUS.Aplicacion/Cliente/DatosGenerales?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 2) {
                    window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosVista?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 3) {
                    if ('' == 'True') {
                $.messager.alert('Restricción', 'Su rol de usuario le permite crear sólo CDP de Fraternas.', 'info');
                return;
            }
            if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad) {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Error', 'No puede ser titular un menor de edad.', 'error');
                return;
            }
            else if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) > mayoriaEdad &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == 'S') {
                $.fn.window.defaults.closable = false;
                $.messager.alert('Precaución', 'El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.', 'warning');
                return;
            }
            window.location.href = '/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 4) {
            window.location.href = '/OSCUS.Aplicacion/Cliente/Prestamos?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 5) {
            window.location.href = '/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 6) {
            window.location.href = '/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 7) {
                    window.location.href = '/OSCUS.Aplicacion/Cliente/Consolidado?id=' + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else {
                    $.messager.alert('No disponible', 'Opción no disponible.', 'error', function () { location.reload(true); });
                }
}
}


//Función que verifica la educación y según eso cambia el estado de requerido en Establecimiento.
function VerificaEducacion(cb) {
    $('#cbEstablecimiento').val(0);
    $('#cbProfesionSBS').val(0);

    if (cb.value == 'N' || cb.value == 'T' || cb.value == 'U' || cb.value == 'G') {

        $('#cbEstablecimiento').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $('#cbProfesionSBS').val(0);
        if (cb.value != 'N') {
            $('#cbProfesionSBS').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#lblProfesion').show('slow');
        }
        else {

            $('#cbProfesionSBS').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#lblProfesion').hide('slow');
        }
        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $('#lblEstablecimiento').hide('slow');
    }
    else {
        if ($('#cbProvinciaReside').val() != &quot;&quot;) {
            $('#cbEstablecimiento').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#cbProfesionSBS').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            //MDJR Solo Si es menor de edad mostrar establecimiento
            if (calcAge($(&quot;#cbTipoDocumento&quot;).val() == 'C' ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) $('#lblEstablecimiento').show('slow');

            $('#lblProfesion').hide('slow');
            //Se verifica si el comboBox ya está lleno para no volverlo a llenar.
            if (document.getElementById(&quot;cbEstablecimiento&quot;).options.length &lt; 2) {
                
                //DisplayBusy(true);
                //Se ingresan datos en comboBox de establecimiento
                var urlEstablecimiento = &quot;/OSCUS.Aplicacion/odata/Establecimientos?$format=json&amp;$filter=codigoProvincia eq '{0}'&amp;$select=codigo,nombre&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlEstablecimiento.replace(&quot;{0}&quot;, $('#cbProvinciaReside').val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultEstablecimiento) {
                        if (resultEstablecimiento.value.length > 0) {
                            var establecimiento = $('#cbEstablecimiento');
                            establecimiento.empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                            for (i = 0; i &lt; resultEstablecimiento.value.length; i++) {
                                establecimiento.append('&lt;option value=' + resultEstablecimiento.value[i].codigo + '>' + resultEstablecimiento.value[i].nombre + '&lt;/option>');
                            }
                            establecimiento.chosen().trigger(&quot;chosen:updated&quot;);
                        }
                        //DisplayBusy(false);
                        
                    }
                });
            }
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $(&quot;#cbEducacion&quot;).val(0);
            $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $('#cbEstablecimiento').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $.messager.alert('Provincia no seleccionada', 'Primero debe seleccionar una provincia de residencia!', 'warning', function () {
                $('.h2toggle').next('.cont').hide();
                $('#divDireccion').show();
                DireccionAbierto();
                $('#cbProvinciaReside').trigger('chosen:activate');
            });
        }
    }
}


function ValidaOrigenIngresos(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOcupacion&quot;).val() != '245' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '246' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '247' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '248' &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != '249') {
        //Se borran los datos ingresados siempre que se cambie de opción
        $('#chkConvenioPublico').removeAttr('checked'); // &quot;checked&quot;
        $('#txtNombreEmpleador').val('');
        $('#cbPaisEmpresa').val(0);
        $('#cbProvinciaPublico').val(0);
        $('#cbCantonPublico').val(0);
        $('#cbCantonPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $('#txtDireccionPublico').val('');
        $('#txtTelefonoPublico').val('');
        $('#txtTelefonoExterior').val('');
        $('#txtTelefonoCelularEmpresa').val('');
        $('#txtCargoPublico').val('');
        $('#divConvenioInstitucional').hide();

        if (cb.value == 'B' || cb.value == 'V') {
            $('#txtDescripcionActividadEconomicaActual').val('');
            $('#txtDescripcionActividadEconomicaActual').attr('readonly', 'true');
            $('#txtDescripcionActividadEconomicaActual').addClass('masterTooltip');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Cargo Actual en la Empresa');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Cargo Actual en la Empresa');
            $('#lblEmpleadoPublico').show();
        }
        else {
            $('#lblEmpleadoPublico').hide();
            $('#txtDescripcionActividadEconomicaActual').val('');
            $('#txtDescripcionActividadEconomicaActual').removeAttr('readonly', 'true');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Ingrese: Descripción Actividad Económica Actual');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Descripción Actividad Económica Actual');
        }
    }
    else {
        $('#txtDescripcionActividadEconomicaActual').val('');
        $('#txtDescripcionActividadEconomicaActual').attr('readonly', 'true');
        $('#txtDescripcionActividadEconomicaActual').addClass('masterTooltip');
        $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Cargo Actual en la Empresa');
        $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Cargo Actual en la Empresa');
    }
}

//Función que valida la ocupación de un empleado para esquema de datos empresa.
function ValidaOcupacion(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOrigenIngresos&quot;).val() != 'B' &amp;&amp; $(&quot;#cbOrigenIngresos&quot;).val() != 'V') {
        //Se borran los datos ingresados siempre que se cambie de opción
        $('#chkConvenioPublico').removeAttr('checked'); // &quot;checked&quot;
        $('#txtNombreEmpleador').val('');
        $('#txtPaisEstadoEmpresa').val('');
        $('#cbPaisEmpresa').val(0);
        $('#cbProvinciaPublico').val(0);
        $('#cbCantonPublico').val(0);
        $('#cbCantonPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $('#txtDireccionPublico').val('');
        $('#txtTelefonoPublico').val('');
        $('#txtTelefonoExterior').val('');
        $('#txtTelefonoCelularEmpresa').val('');


        if (cb.value == '245' || cb.value == '246' || cb.value == '247' || cb.value == '248' || cb.value == '249') {
            $('#txtDescripcionActividadEconomicaActual').val('');
            $('#txtDescripcionActividadEconomicaActual').attr('readonly', 'true');
            $('#txtDescripcionActividadEconomicaActual').addClass('masterTooltip');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Cargo Actual en la Empresa');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Cargo Actual en la Empresa');
            $('#lblEmpleadoPublico').show();
        }
        else {
            $('#lblEmpleadoPublico').hide();
            $('#txtDescripcionActividadEconomicaActual').val('');
            $('#txtDescripcionActividadEconomicaActual').removeAttr('readonly', 'true');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Ingrese: Descripción Actividad Económica Actual');
            $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Descripción Actividad Económica Actual');
        }
    }
    else {
        $('#txtDescripcionActividadEconomicaActual').val('');
        $('#txtDescripcionActividadEconomicaActual').removeAttr('readonly', 'true');
        $('#txtDescripcionActividadEconomicaActual').attr(&quot;title&quot;, 'Ingrese: Descripción Actividad Económica Actual');
        $('#txtDescripcionActividadEconomicaActual').attr(&quot;placeholder&quot;, 'Descripción Actividad Económica Actual');
        }

        if (cb.value == '370' || cb.value == '272' || cb.value == '248' || cb.value == '249' || cb.value == '568') {
            var origenIngresos;
            switch (cb.value) {
                case '370': codGrupoEconomico = 'S01';
                    origenIngresos = 'H';
                    break;
                case '272': codGrupoEconomico = 'S02';
                    break;
                case '568': codGrupoEconomico = 'S03';
                    origenIngresos = 'A';
                    $('#lblEmpleadoPublico').hide();
                    break;
                case '249': codGrupoEconomico = 'S04';
                    origenIngresos = 'B';
                    break;
                case '248': codGrupoEconomico = 'S05';
                    origenIngresos = 'V';
                    break;
            }
            $(&quot;#cbGrupoEconomico&quot;).val(codGrupoEconomico);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot;#cbOrigenIngresos&quot;).val(origenIngresos);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById('cbGrupoEconomico'));
            $('#cbOrigenIngresos').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $('#cbGrupoEconomico').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $('#cbClasificacionActividad').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            //if (valorIngresaUsuario) {
            //    $(&quot;#cbGrupoEconomico&quot;).val('');
            //    $(&quot;#cbOrigenIngresos&quot;).val('');
            //}

            $(&quot;#cbGrupoEconomico&quot;).val('');
            $(&quot;#cbOrigenIngresos&quot;).val('');

            $('#cbGrupoEconomico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);


            $('#cbOrigenIngresos').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $('#cbClasificacionActividad').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById('cbGrupoEconomico'));
        }
}

//Función que carga cantones de datos empresa.
function CargaCantonEmpresa(codProvinciaEmpresa) {
    $('#cbCantonPublico').val(0);
    if (codProvinciaEmpresa != &quot;&quot; &amp;&amp; codProvinciaEmpresa != &quot;undefined&quot;) {

        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq '{0}' &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvinciaEmpresa),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $('#cbCantonPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbCantonPublico&quot;).val(codCantonEmpresa);
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que controla que no se ingrese de forma manual datos.
function controlIngresoFecha(e) {
    return false;
}

//Función que calcula la edad en formato &quot;dd/mm/yy&quot;
//function calcAge(dateString) {
//    //transformamos de día/mes/año a año/mes/dia
//    var dobConverted = toIsoDate(dateString);
//    var birthday = +new Date(dobConverted);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

function TimeSpanAniosMesesDias(fechaEmision) {
    var anio = parseInt(fechaEmision.split('/')[2]);
    var mes = parseInt(fechaEmision.split('/')[1]);
    var dia = parseInt(fechaEmision.split('/')[0]);
    var anioActual = parseInt(fechaSistema.split('/')[2]);
    var mesActual = parseInt(fechaSistema.split('/')[1]);
    var diaActual = parseInt(fechaSistema.split('/')[0]);
    var diasFebrero = 28;
    var diasPrestados = 31;
    var aniosCumplidos;
    var mesesCumplidos;
    var diasCumplidos;
    if (anio % 4 == 0) {
        if (anio % 100 == 0) {
            if (anio % 400 == 0)
                diasFebrero = 29
        }
        else
            diasFebrero = 29
    }
    if (mes % 2 == 0)
        diasPrestados = 30;
    if (mes == 8)
        diasPrestados = 31
    if (mes == 2)
        diasPrestados = diasFebrero
    if (diaActual &lt; dia) {
        diasCumplidos = (diaActual + diasPrestados) - dia;
        mes += 1;
    }
    else
        diasCumplidos = diaActual - dia;

    if (mesActual &lt; mes) {
        mesesCumplidos = (mesActual + 12) - mes;
        anio += 1;
    }
    else
        mesesCumplidos = mesActual - mes;
    aniosCumplidos = anioActual - anio;
    var arrTimeSpan = new Array();
    arrTimeSpan.push({ anios: aniosCumplidos, meses: mesesCumplidos, dias: diasCumplidos });
    return arrTimeSpan;
}

//function calcAgeDatosBasicos(dateString) {
//    var birthday = +new Date(dateString);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

////Convierte fecha de dd/mm/yyyy a yyyy/mm/dd
//function toIsoDate(o_date) {
//    var arrDate = o_date.split('/');
//    var convDate = arrDate[2] + '/' + arrDate[1] + '/' + arrDate[0];
//    return convDate;
//}

//Función que realiza acciones según la provincia que se seleccione
function ValidaProvincia(cb) {

    $('#cbParroquiaReside').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
    $('#cbParroquiaReside').val(0);
    $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    document.getElementById('lblAsesor').innerHTML = &quot;&quot;;
    document.getElementById('txtCodigoAsesor').value = &quot;&quot;;
    document.getElementById('txtCodigoOficina').value = &quot;&quot;;

    $(&quot;#cbEducacion&quot;).val(0);
    $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    $('#cbEstablecimiento').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
    $(&quot;#cbEstablecimiento&quot;).val(0);
    $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq '{0}' &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $('#cbCantonReside').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonReside&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbCantonReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
        }

        //Se ingresan datos en comboBox de nacionalidades.
        function CargaNacionalidad() {
            //Se ingresan datos en comboBox de nacionalidades
            var urlNacionalidades = &quot;/OSCUS.Aplicacion/odata/nacionalidad?$format=json&amp;$orderby=DESCRIPCION&quot;;
            
            $.ajax({
                url: urlNacionalidades,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultNacionalidades) {
                    
                    $('#cbNacionalidad1').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                    $('#cbNacionalidad2').empty().append('&lt;option value=&quot;&quot;>Nacionalidad 2..&lt;/option>');
                    $('#cbNacionalidad3').empty().append('&lt;option value=&quot;&quot;>Nacionalidad 3..&lt;/option>');
                    $.each(resultNacionalidades.value, function (key, value) {
                        $(&quot;#cbNacionalidad1&quot;).append('&lt;option value=' + value.NACIONALIDAD1 + '>' + value.DESCRIPCION + '&lt;/option>');
                        $(&quot;#cbNacionalidad2&quot;).append('&lt;option value=' + value.NACIONALIDAD1 + '>' + value.DESCRIPCION + '&lt;/option>');
                        $(&quot;#cbNacionalidad3&quot;).append('&lt;option value=' + value.NACIONALIDAD1 + '>' + value.DESCRIPCION + '&lt;/option>');
                    });

                    $(&quot;#cbNacionalidad1&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad2&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad3&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        //Se ingresan datos en comboBox paises con obligacion tributaria.
        function CargaPaisObligacionTributaria() {
            //Se ingresan datos en checklistbox de paises tributa
            var urlPaisTributa = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&quot;;
            
            $.ajax({
                url: urlPaisTributa,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultPaisTributa) {
                    
                    $('#chkPaisObligacionTributaria').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                    $('#chkPaisObligacionTributaria2').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                    $.each(resultPaisTributa.value, function (key, value) {
                        $(&quot;#chkPaisObligacionTributaria&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                        $(&quot;#chkPaisObligacionTributaria2&quot;).append('&lt;option value=' + value.codigo + '>' + value.descripcion + '&lt;/option>');
                    });
                    $(&quot;#chkPaisObligacionTributaria&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    $(&quot;#chkPaisObligacionTributaria2&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        function HabilitarCiudadNacmientoExt(cb) {
            if (cb.value.trim() == 'EC') {
                esCRSCiudadNacmientoExt = false;
                $('#CiudadNacimiento').css('display', 'none');
            }
            else {
                    ValidacionCRS(cb.value.trim(), function (data) {
                        
                        if (data.value.length > 0) {
                            esCRSCiudadNacmientoExt = true;
                            $('#CiudadNacimiento').css('display', 'inline-block')
                        }
                        else {
                            esCRSCiudadNacmientoExt = false;
                            $('#CiudadNacimiento').css('display', 'none');
                        }
                        });
                }
                VerificaTributaExterior();
       }

function HabilitarControles(cb) {
    if (cb.value.trim() == 'EC') {
        esCRSControles = false;
        $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
        $(&quot;#grupoExterior&quot;).hide();
        $(&quot;#txtPaisEstado&quot;).hide();
        $(&quot;#txtNumCasaExterior&quot;).hide();
        $(&quot;#txtCodigoPostal&quot;).hide();
        $(&quot;.td_extranjero&quot;).hide()
        $(&quot;.td_ecuador&quot;).show();
        $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
        $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
    }
    else {

        ValidacionCRS(cb.value.trim(), function (data) {
            
            if (data.value.length > 0) {
                esCRSControles = true;
                $(&quot;#txtDireccionDomicilioExterior&quot;).show();
                $(&quot;#grupoExterior&quot;).show();
                $(&quot;#txtPaisEstado&quot;).show();
                $(&quot;#txtNumCasaExterior&quot;).show();
                $(&quot;#txtCodigoPostal&quot;).show();
                $(&quot;.td_extranjero&quot;).show();
                $(&quot;.td_ecuador&quot;).hide();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, true).change().attr(&quot;disabled&quot;, true);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;inline-block&quot;);
            }
            else
            {
                esCRSControles = false;
                $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
                $(&quot;#grupoExterior&quot;).hide();
                $(&quot;#txtPaisEstado&quot;).hide();
                $(&quot;#txtNumCasaExterior&quot;).hide();
                $(&quot;#txtCodigoPostal&quot;).hide();
                $(&quot;.td_extranjero&quot;).hide()
                $(&quot;.td_ecuador&quot;).show();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
            }
         });
    }
    ObtenerPrefijosExterior(cb.value);
    VerificaPF()
}

        function HabilitarNacionalidad2(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad2&quot;).show();
            }
            else {
                $(&quot;.nacionalidad2&quot;).hide();
            }
            VerificaTributaExterior();
        }



        function HabilitarNacionalidad3(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad3&quot;).show();
            }
            else {
                $(&quot;.nacionalidad3&quot;).hide();
            }
            VerificaTributaExterior();
        }

        function HabilitarEsRelacionPersonaPolitica(chk) {
            if (chk.checked) {
                $(&quot;.relacionPersonaPolitica&quot;).show();
            }
            else {
                $(&quot;.relacionPersonaPolitica&quot;).hide();
            }
        }

        function HabilitarDatosTrabajo(cb) {
            if (cb.value.trim() == 'EC') {
                esCRSDatosEmpresa = false;
                $(&quot;#cbProvinciaPublico_chosen&quot;).show();
                $(&quot;#cbCantonPublico_chosen&quot;).show();
                $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                $(&quot;.td_paisexterior&quot;).hide();
                $(&quot;.td_paisecuador&quot;).show();
                $(&quot;#txtTelefonoExterior&quot;).val('');
            }
            else {
                ValidacionCRS(cb.value.trim(), function (data) {
                    
                    if (data.value.length > 0) {
                        esCRSDatosEmpresa = true;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).show();
                        $(&quot;.td_paisexterior&quot;).show();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoPublico&quot;).val('');
                    }
                    else {
                        esCRSDatosEmpresa = false;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                        $(&quot;.td_paisexterior&quot;).hide();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoExterior&quot;).val('');
                    }
                });
            }
            ObtenerPrefijosExterior(cb.value);
            VerificaTributaExterior();
        }

        function HabilitarTributaExterior(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).show();
                $(&quot;.preguntatributaexterior2&quot;).show();
                $(&quot;.tributaexterior&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).hide();
                $(&quot;.preguntatributaexterior2&quot;).hide();
                $(&quot;.tributaexterior&quot;).hide();
            }
        }
        function HabilitarTributaExterior2(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).show();
                $(&quot;.tributaexterior2&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).hide();
                $(&quot;.tributaexterior2&quot;).hide();
            }
        }

function VerificaPF() {
    if ($.inArray($(&quot;#cbPaisResidencia&quot;).val().trim(), arrPaises) > -1 ||
        $.inArray($(&quot;#cbPaisOrigen&quot;).val().trim(), arrPaises) > -1) {
        //DESACTIVO GUARDADO
        $.messager.alert('S/C en paraiso fiscal', 'No se puede iniciar la Relación Contractual por pertenecer a Paraiso Fiscal', 'warning');
        $('#divGuardarEnabled').hide();
        $('#divGuardarDisabled').show();
    }
    else {
        $('#divGuardarEnabled').show();
        $('#divGuardarDisabled').hide();
    }
}


//Función que realiza acciones según la provincia que se seleccione (empleado público)
function ValidaProvinciaPublico(cb) {
    $('#cbCantonPublico').val(0);
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq '{0}' &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $('#cbCantonPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que realiza acciones según el cantón que se seleccione
function ValidaCanton(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Parroquias
        var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} and activo&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultParroquias) {
                $('#cbParroquiaReside').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                $.each(resultParroquias.value, function (key, value) {
                    $(&quot;#cbParroquiaReside&quot;).append('&lt;option value=' + value.secuencialGrupoNGN + '|' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                });
                $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
    else {
        $('#cbParroquiaReside').val(0);
    }
        }

        //Función que realiza acciones según el cantón que se seleccione en trabajo
        function ValidaCantonPublico(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                
                //Se ingresan datos en comboBox de Parroquias
                var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} &amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultParroquias) {
                        $('#cbParroquiaPublico').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                        $.each(resultParroquias.value, function (key, value) {
                            $(&quot;#cbParroquiaPublico&quot;).append('&lt;option value=' + value.secuencial + '>' + value.nombre + '&lt;/option>');
                        });
                        $(&quot;#cbParroquiaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
            }
            else {
                $('#cbParroquiaPublico').val(0);
            }
        }

//Función que asigna a un asesor dependiendo de la parroquia escogida en el popup Datos Basicos Cliente Nuevo.
function AsignarAsesorDatosBasicos(cb) {
    document.getElementById('lblAsesorDatosBasicos').innerHTML = &quot;&quot;;
}

//Función que realiza acciones según el grupo económico que se seleccione
function ValidaGrupoEconomico(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Paises
        var url = &quot;/OSCUS.Aplicacion/odata/ActividadesEconomicas?$format=json&amp;$expand=ActividadesEconomicasNivel4($expand=IndustriasNivelDos($expand=ClasificacionesCreditos))&amp;$filter=codigoRelacionado eq '{0}'&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                $('#cbClasificacionActividad').empty().append('&lt;option value=&quot;&quot;>&lt;/option>');
                for (var i = 0; i &lt; result.value.length; i++) {
                    for (var j = 0; j &lt; result.value[i].ActividadesEconomicasNivel4.length; j++) {
                        for (var k = 0; k &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos.length; k++) {
                            for (var l = 0; l &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos.length; l++) {
                                $(&quot;#cbClasificacionActividad&quot;).append('&lt;option value=' + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].codigo + '>' + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].nombre + '&lt;/option>');
                            }
                        }
                    }
                }
                if (cb.value == 'S01' || cb.value == 'S02' || cb.value == 'S03' || cb.value == 'S04' || cb.value == 'S05')
                    $(&quot;#cbClasificacionActividad&quot;).val(cb.value);
                $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}


function ValidaEstadoCivil(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != 'C' &amp;&amp; cb.value != 'U') {
            $(&quot;#txtCedulaConyuge&quot;).val('');
            $('#txtCedulaConyuge').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtCedulaConyuge').removeClass('masterTooltip');
            $(&quot;#txtNombreConyuge&quot;).val('');
            $('#txtNombreConyuge').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreConyuge').removeClass('masterTooltip');
            if (cb.value == 'S' &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || cb.value == 'D' || cb.value == 'V') {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop('disabled', true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;
        }
        else {
            if ($('#chEnUnionLibre').is(':checked') == true)
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#chConDisolucionConyugal&quot;).prop('disabled', false);
            $(&quot;#txtCedulaConyuge&quot;).val('');
            $('#txtCedulaConyuge').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtCedulaConyuge').addClass('masterTooltip');
            $('#txtCedulaConyuge').attr(&quot;title&quot;, 'Ingrese: D.I Cónyuge');
            $('#txtCedulaConyuge').attr(&quot;placeholder&quot;, 'D.I Cónyuge');
            $(&quot;#txtNombreConyuge&quot;).val('');
            $('#txtNombreConyuge').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreConyuge').addClass('masterTooltip');
            $('#txtNombreConyuge').attr(&quot;title&quot;, 'Este campo se llena automáticamente');
            $('#txtNombreConyuge').attr(&quot;placeholder&quot;, 'Apellidos y Nombres del Cónyuge');
            $(&quot;#txtCedulaConyuge&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == '')
                CargarNombreConyuge(numeroClienteConyuge);
        }
    }
}

function ValidaEstadoCivilPasaporte(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;); //Se limpia para que el momento de volver a elegir la fecha de nacimiento muestre lo respectivo
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != 'C' &amp;&amp; cb.value != 'U') {
            $(&quot;#txtCedulaConyugePasaporte&quot;).val('');
            $('#txtCedulaConyugePasaporte').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtCedulaConyugePasaporte').removeClass('masterTooltip');
            $(&quot;#txtNombreConyugePasaporte&quot;).val('');
            $('#txtNombreConyugePasaporte').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreConyugePasaporte').removeClass('masterTooltip');
            $(&quot;#txtCedulaConyuge&quot;).val('');
            if (cb.value == 'S' &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || cb.value == 'D' || cb.value == 'V') {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop('disabled', true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;

        }
        else {
            if ($('#chEnUnionLibre').is(':checked')) {
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#txtCedulaConyugePasaporte&quot;).val('');
            $('#txtCedulaConyugePasaporte').addClass('masterTooltip');
            $('#txtCedulaConyugePasaporte').attr(&quot;title&quot;, 'Ingrese: D.I Cónyuge');
            $('#txtCedulaConyugePasaporte').attr(&quot;placeholder&quot;, 'D.I Cónyuge');
            $('#txtCedulaConyugePasaporte').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#txtNombreConyugePasaporte&quot;).val('');
            //$('#txtNombreConyugePasaporte').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreConyugePasaporte').addClass('masterTooltip');
            $('#txtNombreConyugePasaporte').attr(&quot;title&quot;, 'Este campo se llena automáticamente');
            $('#txtNombreConyugePasaporte').attr(&quot;placeholder&quot;, 'Apellidos y Nombres del Cónyuge');
            $(&quot;#txtCedulaConyugePasaporte&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == '') {
                CargarNombreConyuge(numeroClienteConyuge);
            }
        }
        $(&quot;#cbEstadoCivil&quot;).val(cb.value);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
}

function ActivaDesactivaIdentificacion(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $('#trBloqueB').hide();
        $('#trBloqueC').hide();
        $('#trBloqueD').hide();
        $('#trBloqueE').hide();
        $('#txtCodigoDactilar').hide();
        $('#colChkMenorDeEdad').hide();
        $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;checked&quot;, false);
        $('#imgBuscarPersonaRegistroCivil').hide();
        if (cb.value == 'C') {
            $('#txtCodigoDactilar').show();
            $('#imgBuscarPersonaRegistroCivil').show();
            $('#trBloquePasaporte').hide();
            $(&quot;#txtIdentificacion&quot;).focus();
            field = $(&quot;#txtEmail&quot;);
            $('#trBloqueFacebookSkype').hide();
            $('#colChkMenorDeEdad').show();
            consultarRegistroCivil = true;
        }
        else {
            ActivaControlesPasaporte();
        }


        if (cb.value == 'S') {
            $(&quot;#txtIdentificacion&quot;).val('');
            $('#txtIdentificacion').attr(&quot;readonly&quot;, true);
            $('#txtIdentificacion').attr(&quot;title&quot;, 'Este campo se llena automáticamente luego de grabar el cliente.');

            $(&quot;#txtRepresentante&quot;).val('');
            $('#txtRepresentante').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtRepresentante').addClass('masterTooltip');
            $('#txtRepresentante').attr(&quot;title&quot;, 'Ingrese: Cédula');
            $('#txtRepresentante').attr(&quot;placeholder&quot;, 'Cédula');

            $(&quot;#txtNombreRepresentante&quot;).val('');
            $('#txtNombreRepresentante').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreRepresentante').addClass('masterTooltip');
            $('#txtNombreRepresentante').attr(&quot;title&quot;, 'Este campo se llena automáticamente');
            $('#txtNombreRepresentante').attr(&quot;placeholder&quot;, 'Nombre');
            $(&quot;#txtFechaNacimiento&quot;).val('');
            $('#lblSituacionEconomica').hide();
            $('#lblSituacionEconomicaActividad').hide();
            $('#divSituacionEconomica').hide();
        }
        else {
            $(&quot;#txtIdentificacion&quot;).val('');
            $('#txtIdentificacion').removeAttr(&quot;readonly&quot;, true);
            $('#txtIdentificacion').addClass('masterTooltip');
            $('#txtIdentificacion').attr(&quot;title&quot;, &quot;Ingrese: Documento de identidad del cliente&quot;);
            $('#txtIdentificacion').attr(&quot;placeholder&quot;, 'Documento');

            $(&quot;#txtRepresentante&quot;).val('');
            $('#txtRepresentante').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtRepresentante').removeClass('masterTooltip');
            $('#txtRepresentante').removeAttr(&quot;title&quot;);

            $(&quot;#txtNombreRepresentante&quot;).val('');
            $('#txtNombreRepresentante').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $('#txtNombreRepresentante').removeClass('masterTooltip');
            $('#txtNombreRepresentante').removeAttr(&quot;title&quot;);
        }
        $(&quot;#txtIdentificacion&quot;).focus();
        $(&quot;#txtIdentificacion&quot;).focus();
    }

}

    function ActivaControlesPasaporte() {
        $('#trBloquePasaporte').show();
        $('#trBloqueFacebookSkype').show();
        field = $(&quot;#txtEmailPasaporte&quot;);
        consultarRegistroCivil = false;
    }


jQuery(function ($) {
    //Funcionalidad de click en boton Cancelar.
    $(&quot;#btnCancelar&quot;).click(function () {
        $.fn.window.defaults.closable = false;
        $.messager.confirm('Confirmación', 'Está seguro que desea cancelar la creación de un nuevo cliente?', function (r) {
            if (r) {
                window.location.href = '/OSCUS.Aplicacion/';
            }
        });
    });
});


//Acciones a ejecutarse al abrir el div de Datos.
function DatosAbierto() {
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Dirección.
function DireccionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Direccion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Ocupación.
function OcupacionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Ocupacion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Situacion Economica.
function SituacionEconomicaAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1SituacionEconomica&quot;).addClass(&quot;boldFont&quot;);
}


//Acciones a ejecutarse al abrir el div de Otros.
function OtrosAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Otros&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Otros.
function ReferenciasAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Referencias&quot;).addClass(&quot;boldFont&quot;);
}

//Funcion que realiza acciones necesarias al dar click en checkbox de convenio institucional
function VerificaConvenio(chk) {
    if (chk.checked) {
        $('#txtNombreEmpleador').val('');
        $('#txtNombreEmpleador').removeClass('masterTooltip');
        $('#txtNombreEmpleador').removeAttr(&quot;title&quot;);
        $('#txtNombreEmpleador').attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#cbProvinciaPublico').val(0);
        $('#cbProvinciaPublico').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $('#cbCantonPublico').val(0);
        $('#cbCantonPublico').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $('#txtDireccionPublico').val('');
        $('#txtDireccionPublico').removeClass('masterTooltip');
        $('#txtDireccionPublico').removeAttr(&quot;title&quot;);
        $('#txtDireccionPublico').attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#txtTelefonoPublico').val('');
        $('#txtTelefonoPublico').removeClass('masterTooltip');
        $('#txtTelefonoPublico').removeAttr(&quot;title&quot;);
        $('#txtTelefonoPublico').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#telefonoPublico').attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#txtTelefonoExterior').val('');
        $('#txtTelefonoExterior').removeClass('masterTooltip');
        $('#txtTelefonoExterior').removeAttr(&quot;title&quot;);
        $('#txtTelefonoExterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#telefonoExterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#txtTelefonoCelularEmpresa').val('');
        $('#txtTelefonoCelularEmpresa').removeClass('masterTooltip');
        $('#txtTelefonoCelularEmpresa').removeAttr(&quot;title&quot;);
        $('#txtTelefonoCelularEmpresa').attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#grdConvenioInstitucional').datagrid('unselectAll');

        $(&quot;#divConvenioInstitucional&quot;).show();

        //Se cargan los datos en grid de convenio.
        
        var urlConvenioReemplazar = &quot;/OSCUS.Aplicacion/odata/ConvenioCrediNomina?$format=json&amp;$expand=numeroClienteNavigation($select=codigo,nombreUnido;$expand=asesorNegociosNavigation($select=codigoUsuarioNavigation;$expand=codigoUsuarioNavigation($select=nombre)))&amp;$filter=estaActivo eq 0&amp;$select=secuencial,numeroCliente&amp;$orderby=numeroClienteNavigation/nombreUnido&quot;;
        var arrConvenio = new Array();
        $.ajax({
            url: urlConvenioReemplazar,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                
                if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                    for (var i = 0; i &lt; result.value.length; i++) {
                        arrConvenio.push({ secuencial: result.value[i].secuencial, numeroCliente: result.value[i].numeroCliente, codigo: result.value[i].numeroClienteNavigation.codigo, nombreUnido: result.value[i].numeroClienteNavigation.nombreUnido, nombre: result.value[i].numeroClienteNavigation.asesorNegociosNavigation.codigoUsuarioNavigation.nombre });
                    }
                    $('#grdConvenioInstitucional').datagrid('loadData', arrConvenio);
                    $('#divConvenioInstitucional').focus();
                }
                else {
                    //Se muestra mensaje informativo de dato no encontrado.
                    $.messager.alert('Convenio institucional no encontrado', 'No se ha econtrado ningún convenio institucional!', 'warning', function () { $(&quot;#divConvenioInstitucional&quot;).hide(); });
                }
            }
        });
    }
    else {
        $('#grdConvenioInstitucional').datagrid('unselectAll');

        $('#txtNombreEmpleador').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtNombreEmpleador').addClass('masterTooltip');
        $('#txtNombreEmpleador').attr(&quot;title&quot;, 'Ingrese: Nombre o razón social de empleador');

        $('#cbProvinciaPublico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $('#cbCantonPublico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $('#txtDireccionPublico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtDireccionPublico').addClass('masterTooltip');
        $('#txtDireccionPublico').attr(&quot;title&quot;, 'Ingrese: Dirección');

        $('#txtTelefonoPublico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtTelefonoPublico').addClass('masterTooltip');
        $('#txtTelefonoPublico').attr(&quot;title&quot;, 'Ingrese: Teléfono');
        $('#telefonoPublico').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#txtTelefonoExterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtTelefonoExterior').addClass('masterTooltip');
        $('#txtTelefonoExterior').attr(&quot;title&quot;, 'Ingrese: Teléfono Exterior');
        $('#telefonoExterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $('#txtTelefonoCelularEmpresa').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtTelefonoCelularEmpresa').addClass('masterTooltip');
        $('#txtTelefonoCelularEmpresa').attr(&quot;title&quot;, 'Ingrese: Celular');

        $(&quot;#divConvenioInstitucional&quot;).hide();
    }
}

//Función que retorna el valor del item escogido en grid de convenio institucional.
function getSelected() {
    var row = $('#grdConvenioInstitucional').datagrid('getSelected');
    if (row) {
        return row.secuencial;
    }
    else {
        return &quot;&quot;;
    }
}

//Función que valida la fecha de nacimiento para controlar ciertos campos.
function ValidarFechaNacimiento(fechaNacimiento) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == 'P' &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == '') { //Para pasaporte primero debe ingresar el estado civil
        $.messager.alert('Campo requerido', 'Primero ingrese el Estado civil', 'warning', function () { $('#cbEstadoCivilPasaporte').trigger('chosen:activate'); });
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;);
        return;
    }

    if (calcAge(fechaNacimiento.value) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != 'C') {
        // $(&quot;#txtRepresentante&quot;).val(''); cuando se actualizaba la fecha de nacimiento se borraban
        $('#txtRepresentante').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtRepresentante').addClass('masterTooltip');
        $('#txtRepresentante').attr(&quot;title&quot;, 'Ingrese: Cédula');
        $('#txtRepresentante').attr(&quot;placeholder&quot;, 'Cédula');

        //$(&quot;#txtNombreRepresentante&quot;).val(''); cuando se actualizaba la fecha de nacimiento se borraban
        $('#txtNombreRepresentante').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtNombreRepresentante').addClass('masterTooltip');
        $('#txtNombreRepresentante').attr(&quot;title&quot;, 'Este campo se llena automáticamente');
        $('#txtNombreRepresentante').attr(&quot;placeholder&quot;, 'Nombre');

        $('#lblSituacionEconomica').hide();
        $('#divSituacionEconomica').hide();
        $('#lblSituacionEconomicaActividad').hide();
        $('#lblReferencias').hide();
        $('#divReferencias').hide();

        DesabilitaApoderado();
    }
    else {

        $(&quot;#txtRepresentante&quot;).val('');
        $('#txtRepresentante').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtRepresentante').removeClass('masterTooltip');
        $('#txtRepresentante').removeAttr(&quot;title&quot;);
        //$('#txtRepresentante').removeAttr(&quot;placeholder&quot;, 'Cédula');

        $(&quot;#txtNombreRepresentante&quot;).val('');
        $('#txtNombreRepresentante').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtNombreRepresentante').removeClass('masterTooltip');
        $('#txtNombreRepresentante').removeAttr(&quot;title&quot;);

        $('#lblSituacionEconomica').show();
        $('#lblSituacionEconomicaActividad').show();
        $('#lblReferencias').show();

        HabilitaApoderado();

        //////nueva carga//////
        //abro div de se
        $('#divSituacionEconomica').show();
        //cargo datos
        ObtenerItemsEconomicosCliente(0);
        ObtenerItemsPatrimonialesCliente(0);
        //cierro div se
        $(&quot;#h1SituacionEconomica&quot;).trigger('click');
        /////fin nueva carga////

        $('#lblEstablecimiento').hide('slow'); //MDJR Solo Si es menor de edad mostrar establecimiento

        //metodo anterior de carga, si se pudre el nuevo descomentar
        //$(&quot;#h1SituacionEconomica&quot;).trigger('click');
        //$(&quot;#h1SituacionEconomica&quot;).trigger('click');//Si, tiene que estar 2 veces.
    }
    $(&quot;#cbEducacion&quot;).val(0).chosen().trigger(&quot;chosen:updated&quot;);
    $('#cbEstablecimiento').val(0).chosen().trigger(&quot;chosen:updated&quot;);
}

//Función que valida la fecha emisión e ingresa automáticamente la fecha caducidad.
function ValidaFechaEmision(fechaEmision) {
    if (fechaEmision.value != &quot;&quot; &amp;&amp; fechaEmision.value != null &amp;&amp; fechaEmision.value != undefined) {
        var tiempoTranscurrido = TimeSpanAniosMesesDias(fechaEmision.value);
        //if (tiempoTranscurrido[0].anios &lt; 2 || (tiempoTranscurrido[0].anios == 2 &amp;&amp; tiempoTranscurrido[0].meses == 0 &amp;&amp; tiempoTranscurrido[0].dias == 0)) {
        if (tiempoTranscurrido[0].anios &lt; 2) {
            var anio = parseInt(fechaEmision.value.split('/')[2]) + 2;
            var fechaCaducidad = fechaEmision.value.split('/')[0] + '/' + fechaEmision.value.split('/')[1] + '/' + anio;
            $('#txtFechaCaducidad').val(fechaCaducidad);
        }
        else {
            $(&quot;#txtFechaCaducidad&quot;).val('');
            var mensajeCaducidad;
            var mensajeAniosCaducidad = '';
            var mensajeMesesCaducidad = '';
            var mensajeDiasCaducidad = '';
            if (tiempoTranscurrido[0].anios >= 2)
                mensajeAniosCaducidad = tiempoTranscurrido[0].anios + ' años';
            if (tiempoTranscurrido[0].meses != 0)
                mensajeMesesCaducidad = tiempoTranscurrido[0].meses + ' meses';
            if (tiempoTranscurrido[0].dias != 0)
                mensajeDiasCaducidad = tiempoTranscurrido[0].dias + ' dias';
            if (mensajeAniosCaducidad != '')
                mensajeCaducidad = mensajeAniosCaducidad + ', ';
            if (mensajeMesesCaducidad != '')
                mensajeCaducidad = mensajeCaducidad + mensajeMesesCaducidad + ', ';
            if (mensajeDiasCaducidad != '')
                mensajeCaducidad = mensajeCaducidad + mensajeDiasCaducidad;
            $.fn.window.defaults.closable = false;
            $.messager.alert('Fecha inválida', 'Según la fecha ingresada han transcurrido: ' + mensajeCaducidad + ' y por tanto el poder está caducado. (Tiempo de validez máx. 2 años)', 'warning', function () {
                $(&quot;#txtFechaEmision&quot;).val('');
                $(&quot;#txtFechaEmision&quot;).focus();
            });
            return;
        }

    }
}

var datosCalculoIngresos = {
    ingresos: ko.observable(),
    ingresosAdicionales: ko.observable()
};
datosCalculoIngresos.totalIngresos = ko.dependentObservable(function () {
    return (this.ingresos() - this.ingresosAdicionales()).toFixed(2);
}, datosCalculoIngresos);
ko.applyBindings(datosCalculoIngresos);


function AbrirVentanaClientesHomonimos() {
    $('#dlgListaHomonimos').dialog('open');
}

function CierraClientesHomonimos() {
    $.fn.window.defaults.closable = false;
    $('#dlgListaHomonimos').dialog('close');
}




function ValidaIngreso(valorIngresado) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == 'C' &amp;&amp; valorIngresado.value.trim() == &quot;&quot; &amp;&amp; valorIngresado.value.trim() == &quot;undefined&quot;) {
        if (!VerificarNumeroCedula(valorIngresado.value.trim())) {
            $.messager.alert('Cédula incorrecta', 'El número de cédula es incorrecto', 'error', function () { $('#txtIdentificacion').focus(); });
        }
        else
            ListaControl();
    }

}


function calcularTotalIngresos() {
    if ($(&quot;#txtIngresos&quot;).val() != &quot;&quot; &amp;&amp; $(&quot;#txtIngresosAdicionales&quot;).val() != &quot;&quot;) {
        $(&quot;#txtTotalIngresos&quot;).val(parseFloat(parseFloat($(&quot;#txtIngresos&quot;).val()) + parseFloat($(&quot;#txtIngresosAdicionales&quot;).val())).toFixed(2));
    }
}

function formatNumeroCliente(val, row) {
    var url = &quot;Consolidado?id=&quot;;
    return '&lt;a href=&quot;' + url + encodeStr(Encrypt(row.numeroCliente.toString())) + '&quot;>' + val + '&lt;/a>';
}

function ImprimirActualizacion() {
    
    var urlRegistraImpresion = &quot;osapi/ServiceCliente.svc/RegistrarImpresionActualizaDatosClientes&quot;;
    $.ajax({
        url: urlRegistraImpresion,
        type: &quot;POST&quot;,
        data: JSON.stringify({
            numeroCliente: numeroClienteGenerado,
            usuarioActualizo: codigoUsuarioActual
        }),
        datatype: &quot;json&quot;,
        contentType: &quot;application/json; charset=utf-8&quot;,
        success: function (resultado) {
            
            $.fn.window.defaults.closable = false;
            if (resultado.Correcto) {
                var identificacion = $('#txtIdentificacion').val();

                    $.ajax({
                                    url: '/OSCUS.Aplicacion/Cliente/ImprimeFormularioActualizacionDatos',
                                    method: 'POST',
                                    contentType: &quot;application/json; charset=utf-8&quot;,
                    data: JSON.stringify({
                        caso: 'N',
                        identificacion: identificacion}),
                    dataType: &quot;text&quot;,
                    success: function (r) {
                        window.open(r);
                    }
                });

            }
            else {
                $.messager.alert('Error', resultado.Informacion, 'error');
            }
        },
    });
}

function HabilitarCampos(chk) {
    $('#chConDisolucionConyugal').prop('checked', false);
    if (chk.checked) {
        $(&quot;#cbEstadoCivil&quot;).val('U');
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    else {
        $(&quot;#cbEstadoCivil&quot;).val('S');
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    ValidaEstadoCivil(document.getElementById('cbEstadoCivil'));
}

function DeshabilitarConyuge(chk) {
    if (chk.checked) {
        $(&quot;#txtCedulaConyuge&quot;).val('');
        $('#txtCedulaConyuge').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtCedulaConyuge').removeClass('masterTooltip');
        $(&quot;#txtNombreConyuge&quot;).val('');
        $('#txtNombreConyuge').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtNombreConyuge').removeClass('masterTooltip');
    }
    else {
        $(&quot;#txtCedulaConyuge&quot;).val('');
        $('#txtCedulaConyuge').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtCedulaConyuge').addClass('masterTooltip');
        $('#txtCedulaConyuge').attr(&quot;title&quot;, 'Ingrese: D.I Cónyuge');
        $('#txtCedulaConyuge').attr(&quot;placeholder&quot;, 'D.I Cónyuge');
        $(&quot;#txtNombreConyuge&quot;).val('');
        $('#txtNombreConyuge').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtNombreConyuge').addClass('masterTooltip');
        $('#txtNombreConyuge').attr(&quot;title&quot;, 'Este campo se llena automáticamente');
        $('#txtNombreConyuge').attr(&quot;placeholder&quot;, 'Apellidos y Nombres del Cónyuge');
        $(&quot;#txtCedulaConyuge&quot;).focus();
    }
    numeroClienteConyuge = null;
}

function ObtenerItemsEconomicosCliente(numeroCliente) {
    if (arrIngresos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaIemsEconomicosClientes&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalIngresos = 0;
                    var totalGastos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].tiempoActividad == 1) {
                            totalIngresos += resultado[i].activos;
                            arrIngresos.push(resultado[i]);
                        }
                        else {
                            totalGastos += resultado[i].activos;
                            arrGastos.push(resultado[i]);
                        }
                    }
                    if (arrIngresos.length > 0) {
                        $('#txtTotalIngresos').val('$ ' + totalIngresos.toFixed(2));
                        $('#grdIngresos').datagrid('loadData', arrIngresos);
                    }
                    if (arrGastos.length > 0) {
                        $('#txtTotalGastos').val('$ ' + totalGastos.toFixed(2));
                        $('#grdGastos').datagrid('loadData', arrGastos);
                    }

                }
            },
        });
    }
}

function ObtenerItemsPatrimonialesCliente(numeroCliente) {
    if (arrActivos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaItemsPatrimonialesCliente&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalActivos = 0;
                    var totalPasivos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].actividadSecundaria == '1') {
                            totalActivos += resultado[i].activos;
                            arrActivos.push(resultado[i]);
                        }
                        else {
                            totalPasivos += resultado[i].activos;
                            arrPasivos.push(resultado[i]);
                        }
                    }
                    if (arrActivos.length > 0) {
                        $('#txtTotalActivos').val('$ ' + totalActivos.toFixed(2));
                        $('#grdActivos').datagrid('loadData', arrActivos);
                    }
                    if (arrPasivos.length > 0) {
                        $('#txtTotalPasivos').val('$ ' + totalPasivos.toFixed(2));
                        $('#grdPasivos').datagrid('loadData', arrPasivos);
                    }
                }
            },
        });
    }
}

function ActivarDesactivarDatosPrimerTrabajo(queProfesion, origenIngresos) {
    //272 -> estudiante, 000 -> ninguna, V->E. Privado, B-> E. publico
    //if (queProfesion == '272' || queProfesion == '000' || (origenIngresos != 'V' &amp;&amp; origenIngresos != 'B')) {
    if (queProfesion == '272' || queProfesion == '000') {
        $('#chkPrimerTrabajo').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, false);
        $('#txtFechaInicioTrabajoAnterior').val('');
        $('#txtFechaInicioTrabajoAnterior').removeClass('masterTooltip');
        $('#txtFechaInicioTrabajoAnterior').removeAttr(&quot;title&quot;);
        $('#txtFechaInicioTrabajoAnterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaInicioTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $('#txtFechaFinTrabajoAnterior').val('');
        $('#txtFechaFinTrabajoAnterior').removeClass('masterTooltip');
        $('#txtFechaFinTrabajoAnterior').removeAttr(&quot;title&quot;);
        $('#txtFechaFinTrabajoAnterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaFinTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        if (queProfesion == '272' || queProfesion == '000') {
            $('#cbOrigenIngresos').val(0);
            $('#cbOrigenIngresos').attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $('#cbOrigenIngresos').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
    }
    else {
        $('#chkPrimerTrabajo').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        //$(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, true);
        if ($('#txtFechaFinTrabajoAnterior').val() == '01/01/1960') {
            $('#txtFechaInicioTrabajoAnterior').val('');
            $('#txtFechaFinTrabajoAnterior').val('');
        }
        $('#txtFechaInicioTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $('#txtFechaInicioTrabajoAnterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaInicioTrabajoAnterior').addClass('masterTooltip');
        $('#txtFechaInicioTrabajoAnterior').attr(&quot;title&quot;, 'Ingrese: Fecha inicio trabajo anterior');

        $('#txtFechaFinTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $('#txtFechaFinTrabajoAnterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaFinTrabajoAnterior').addClass('masterTooltip');
        $('#txtFechaFinTrabajoAnterior').attr(&quot;title&quot;, 'Ingrese: Fecha fin trabajo anterior');
    }
}

function ActivarFechasInicioFin() {
    if (($('#chkPrimerTrabajo').is(':checked') == true)) {
        $('#txtFechaInicioTrabajoAnterior').val('');
        $('#txtFechaInicioTrabajoAnterior').removeClass('masterTooltip');
        $('#txtFechaInicioTrabajoAnterior').removeAttr(&quot;title&quot;);
        $('#txtFechaInicioTrabajoAnterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaInicioTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $('#txtFechaFinTrabajoAnterior').val('');
        $('#txtFechaFinTrabajoAnterior').removeClass('masterTooltip');
        $('#txtFechaFinTrabajoAnterior').removeAttr(&quot;title&quot;);
        $('#txtFechaFinTrabajoAnterior').attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaFinTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
    }
    else {
        $('#txtFechaInicioTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $('#txtFechaInicioTrabajoAnterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaInicioTrabajoAnterior').addClass('masterTooltip');
        $('#txtFechaInicioTrabajoAnterior').attr(&quot;title&quot;, 'Ingrese: Fecha inicio trabajo anterior');


        $('#txtFechaFinTrabajoAnterior').datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $('#txtFechaFinTrabajoAnterior').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $('#txtFechaFinTrabajoAnterior').addClass('masterTooltip');
        $('#txtFechaFinTrabajoAnterior').attr(&quot;title&quot;, 'Ingrese: Fecha fin trabajo anterior');
    }
}

function CopiarCargoToDescripcion() {
    $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
}

function CloseWindowRegistroHuellas() {
    $ = jQuery.noConflict();
    if (impresionFormularioPendiente)
        ImprimirActualizacion();
}

function DeshabilitarCodigoDactilar(chk) {
    if (chk.checked) {
        $('#txtCodigoDactilar').val('')
        $('#txtCodigoDactilar').attr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    else {
        $('#txtCodigoDactilar').removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    $('#txtIdentificacion').focus();
        }


    




                        Clientes
                        Ruta Asesor
                        
                            Simulador CDP
                        
                        
                            Consultar Buro
                        
                        
                        

                        
                            Cerrar sesion
                        
                    NUEVO CLIENTE
    
        
        

        
            
                
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        DATOS CLIENTE HOMÓNIMO
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Estado civil...
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                
                            
                            
                                
                                    
                                        
                                        Instrucción:
                                        
                                            
                                            Sin Estudios
                                            Formación Intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo Económico... 
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Actividad Económica...
                                    
                                
                                
                                    
                                        
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                            
                            
                                
                                    
                                        
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        
                                        
                                            
                                        Cantón...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        
                                        
                                    
                                
                            

                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        Asesor:
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                
                            
                        
                    
                
            
        
    
CLIENTES HOMÓNIMOS
    
        
            
                
                    
                        Clientes homónimos encontradosNº Cliente Código Dir. Domicilio Representante 
                            
                                
                                    Nº Cliente
                                    Código
                                    Dir. Domicilio
                                    Representante
                                
                            
                        
.datagrid-cell-c6-numeroCliente{width:52px}
.datagrid-cell-c6-codigo{width:72px}
.datagrid-cell-c6-direccionDomicilio{width:292px}
.datagrid-cell-c6-representantePrincipal{width:72px}

                    
                
            
            
                
                    
                
            
        
    
New Dialog
DI Nombre 
    
        
            DI
            Nombre
         
    

.datagrid-cell-c7-codigo{width:22px}
.datagrid-cell-c7-nombreUnido{width:92px}

Ok INDICIOS CRS (Estandar Común de Reportes)
    
        El socio/cliente presenta indicios de CRS por locual usted debe solicitar evidencia documental como:
        Si el País de nacimiento/Nacionalidad diferente de Ecuador:
        
            Documento de identificación que demuestre la nacionalidad ecuatoriana
            Certificado de renuncia a la nacionalidad
            Abandono de permiso de estado residente
        
        Si el País de residencia diferente de Ecuador/Teléfono de contacto en el exterior
        
            Documento actualizado de servicio básico a nombre del socio/cliente (Luz,agua potable, predio urbano)
            Certificado de residencia expedido por una autoridad u organismo ecuatoriano
            Declaración del impuesto a la renta o formulario 107 en caso de relación de dependencia
        
    
    
        
    
Datos de simulador CDP
                
                    
                    
                    
                
                
                    Procesando...
                
            SimuladorCancelarConsuta buró tarjetas de crédito
                
                    
                    Score
                    
                    Cupo recomendado
                    
                
                
                    Procesando...
                
            ConsultarCancelarSeleccionar oportunidad
                
                    OportunidadesId Tipo persona Oportunidad Tipo Fuente Importe Producto Agencia Propietario Propietario 
                        
                            
                                Id
                                Tipo persona
                                Oportunidad
                                Tipo
                                Fuente
                                Importe
                                Producto
                                Agencia
                                Propietario
                                Propietario
                            
                        
                    
.datagrid-cell-c8-id{width:92px}
.datagrid-cell-c8-Tipo_de_persona{width:77px}
.datagrid-cell-c8-Deal_Name{width:192px}
.datagrid-cell-c8-Type{width:72px}
.datagrid-cell-c8-Lead_Source{width:72px}
.datagrid-cell-c8-Amount{width:72px}
.datagrid-cell-c8-Producto{width:72px}
.datagrid-cell-c8-Agencia{width:52px}
.datagrid-cell-c8-Owner-name{width:72px}
.datagrid-cell-c8-Owner-email{width:72px}

                
                
                    Procesando...
                
            CancelarAnteriorSiguienteEneFebMarAbrMayJunJulAgoSepOctNovDic18231824182518261827182818291830183118321833183418351836183718381839184018411842184318441845184618471848184918501851185218531854185518561857185818591860186118621863186418651866186718681869187018711872187318741875187618771878187918801881188218831884188518861887188818891890189118921893189418951896189718981899190019011902190319041905190619071908190919101911191219131914191519161917191819191920192119221923192419251926192719281929193019311932193319341935193619371938193919401941194219431944194519461947194819491950195119521953195419551956195719581959196019611962196319641965196619671968196919701971197219731974197519761977197819791980198119821983198419851986198719881989199019911992199319941995199619971998199920002001200220032004200520062007200820092010201120122013201420152016201720182019202020212022DoLuMaMiJuViSa      123456789101112131415161718192021222324252627282930      /html[1]/body[1]/div[@class=&quot;panel window messager-window&quot;]/div[@class=&quot;messager-body panel-body panel-body-noborder window-body&quot;]/div[@class=&quot;messager-progress&quot;]/div[@class=&quot;messager-p-bar progressbar&quot;]/div[@class=&quot;progressbar-text&quot;]InformaciónEstamos procesando su solicitud...Estamos procesando su solicitud...</value>
      <webElementGuid>15a060b4-696e-44e3-bfbc-08c50d3cce07</webElementGuid>
   </webElementProperties>
   <webElementProperties>
      <isSelected>false</isSelected>
      <matchCondition>equals</matchCondition>
      <name>xpath</name>
      <type>Main</type>
      <value>/html[1]/body[1]</value>
      <webElementGuid>4e9beb82-f685-45fe-87fc-dd64fb57b735</webElementGuid>
   </webElementProperties>
   <webElementXpaths>
      <isSelected>true</isSelected>
      <matchCondition>equals</matchCondition>
      <name>xpath:position</name>
      <type>Main</type>
      <value>//body</value>
      <webElementGuid>1403b62e-6673-46ff-ba5e-715da18eff1c</webElementGuid>
   </webElementXpaths>
   <webElementXpaths>
      <isSelected>false</isSelected>
      <matchCondition>equals</matchCondition>
      <name>xpath:customAttributes</name>
      <type>Main</type>
      <value>//body[(text() = concat(&quot;
    

        
            
        
    
    
        
            
                
                    Carlos SANTAMARIA SANCHEZ (CCEDENO)
                    Jueves 31 de Marzo de 2022
                
                
                    Menu 
                    
                
                Cerrar sesion
            

        
    
    
        
        
            

    
        
            
                
    //Función que calcula la edad
    function calculaEdad(dateString) {
        var birthday = +new Date(dateString);
        return ~~((Date.now() - birthday) / (31557600000));
    }

    //Funciones de navegación de menu izquierda.
    function fnNavegar(opcion) {
        var tieneRolFraternas;
        var id = getUrlParameter(&quot; , &quot;'&quot; , &quot;id&quot; , &quot;'&quot; , &quot;);
        if (id != null &amp;&amp; id != &quot;&quot; &amp;&amp; id != undefined) {
            
                var urlDatosCliente = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=tipo&quot;;
                $.ajax({
                    url: urlDatosCliente.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultConsultaClientes) {
                        
                        if (opcion == 1) {
                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;)
                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGenerales?id=&quot; , &quot;'&quot; , &quot; + id;
                                else if (resultConsultaClientes.value[0].tipo == &quot;A&quot; || resultConsultaClientes.value[0].tipo == &quot;R&quot;)
                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGeneralesJuridico?id=&quot; , &quot;'&quot; , &quot; + id;
                            }
                        }
                        else if (opcion == 2) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosVista?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 3) {
                            if (codigoUsuarioActual.indexOf(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;))
                                codigoUsuarioActual = codigoUsuarioActual.replace(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ñ&quot; , &quot;'&quot; , &quot;)
                            
                            var urlCodigoRolUsuarioActual = &quot;/OSCUS.Aplicacion/odata/UsuariosRoles?$format=json&amp;$filter=codigoUsuario eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and estaActivo eq 0&amp;$select=codigoRol&quot;;
                                    $.ajax({
                                        url: urlCodigoRolUsuarioActual.replace(&quot;{0}&quot;, codigoUsuarioActual),
                                        dataType: &quot;json&quot;,
                                        cache: &quot;false&quot;,
                                        success: function (resultConsultaCodigoRol) {
                                            
                                            if (resultConsultaCodigoRol.value[0] != null &amp;&amp; resultConsultaCodigoRol.value[0] != &quot;&quot; &amp;&amp; resultConsultaCodigoRol.value[0] != undefined) {
                                                
                                                var urlParametrosInversiones = &quot;/OSCUS.Aplicacion/odata/ParametrosInversiones?$format=json&quot;;
                                                $.ajax({
                                                    url: urlParametrosInversiones,
                                                    dataType: &quot;json&quot;,
                                                    cache: &quot;false&quot;,
                                                    success: function (resultParametrosInversiones) {
                                                        
                                                        if (resultParametrosInversiones.value[0] != null &amp;&amp; resultParametrosInversiones.value[0] != &quot;&quot; &amp;&amp; resultParametrosInversiones.value[0] != undefined) {
                                                            if (resultParametrosInversiones.value[0].rolFraternas.trim() == resultConsultaCodigoRol.value[0].codigoRol.trim())
                                                                tieneRolFraternas = &quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;; //T->True
                                                            else
                                                                tieneRolFraternas = &quot; , &quot;'&quot; , &quot;F&quot; , &quot;'&quot; , &quot;;//T->False
                                                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                                              if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                  if (tieneRolFraternas == &quot;T&quot;) {
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite procesar sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                    return;
                                                                }
                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                    
                                                                    var urlDatosClienteNatural = &quot;/OSCUS.Aplicacion/odata/ClientesNaturales?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=fechaNacimiento&quot;;
                                                                    $.ajax({
                                                                        url: urlDatosClienteNatural.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                                                                        dataType: &quot;json&quot;,
                                                                        cache: &quot;false&quot;,
                                                                        success: function (resultConsultaClientesNaturales) {
                                                                            
                                                                            if (resultConsultaClientesNaturales.value[0] != null &amp;&amp; resultConsultaClientesNaturales.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientesNaturales.value[0] != undefined) {
                                                                                var edad = calculaEdad(resultConsultaClientesNaturales.value[0].fechaNacimiento);
                                                                                if (edad &lt; mayoriaEdad) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No puede ser titular un menor de edad.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                                                                                    return;
                                                                                }
                                                                                else {
                                                                                    if (resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                                        $.fn.window.defaults.closable = false;
                                                                                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Precaución&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                        return;
                                                                                    }
                                                                                    else
                                                                                        window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                              else {
                                                                
                                                                var urlFraternaJurico = &quot;/OSCUS.Aplicacion/odata/ClientesJuridicos?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=esFraterna&quot;;
                                                                $.ajax({
                                                                    url: urlFraternaJurico.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                                                                    dataType: &quot;json&quot;,
                                                                    cache: &quot;false&quot;,
                                                                    success: function (resultFraterna) {
                                                                        
                                                                        if (resultFraterna.value[0] != null &amp;&amp; resultFraterna.value[0] != &quot;&quot; &amp;&amp; resultFraterna.value[0] != undefined) {
                                                                            if (resultFraterna.value[0].esFraterna == 0) {
                                                                                if (tieneRolFraternas == &quot;T&quot;)
                                                                                     window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario NO le permite procesar CDP de Fraternas, éstos solo pueden ser procesados en Tesorería.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                    return;
                                                                                }
                                                                            }
                                                                            else {
                                                                                if (tieneRolFraternas == &quot;T&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite procesar sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                    return;

                                                                                }
                                                                                else if (tieneRolFraternas == &quot;F&quot;)
                                                                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                            }
                                                                        }

                                                                    }
                                                                });
                                                            }
                                                          }
                                                        }
                                                        localStorage[&quot;rolParaFraterna&quot;] = tieneRolFraternas;
                                                    }
                                                });
                                            }
                                        }
                                    });
                        }
                        else if (opcion == 4) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Prestamos?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 5) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 6) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 7) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Consolidado?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 8) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/AsociarCuentasBCE?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else {
                            alert(&quot;Opción no disponible.&quot;);
                        }
                    }
                });
}
}





    
        
            
            Consolidado
        
        
            
            Datos Generales
        
        
            
            Depósitos a la vista
        
        
            
            Depósitos a plazo
        
        
            
            Préstamos
        
        
            
            Servicios financieros
        
        
            
            Servicios no financieros
        
    



            
        
        
            
                
                    
                        DATOS
                        
                            Asesor:
                            
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        Tipo documento:
                                        
                                            
                                            Cédula
                                            Pasaporte
                                        PasaporteCédulaPasaporte
                                    
                                
                                
                                    
                                        Tipo documento:
                                        
                                    
                                
                            
                            
                                
                                    Es menor de edad:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                
                            
                            
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                

                                
                                    
                                    
                                    
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Soltero(a)
                                    
                                
                                
                                    
                                        Estado civil:
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    En Unión Libre:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    Con Disolución Conyugal:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                  
                                
                                
                            
                        
                        
                            
                                
                                    
                                        
                                            
                                                
                                                
                                            
                                        
                                        
                                            
                                                
                                                    Estado civil:
                                                    
                                                        
                                                        Soltero(a)
                                                        Casado(a)
                                                        Viudo(a)
                                                        Divorciado(a)
                                                        Unión libre
                                                    Soltero(a)Soltero(a)Casado(a)Viudo(a)Divorciado(a)Unión libre
                                                
                                                
                                                

                                            
                                        
                                        
                                            
                                                
                                                
                                                    Sexo: 
                                                    
                                                    Hombre
                                                    
                                                    Mujer
                                                
                                            
                                        
                                        
                                            
                                                
                                                  
                                                
                                            
                                        
                                    
                                

                            
                        
                        
                            
                                
                                
                                
                            
                        
                        
                            
                                
                                    
                                        País de Nacimiento:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    

                                    
                                        
                                    
                                    
                                        País donde generó D.I.:
                                        
                                            
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís genera DI...
                                    

                                    
                                        
                                            País de nacimiento:
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Nacionalidad 1:
                                        AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 1...
                                    
                                    
                                        Nacionalidad 2:
                                        Nacionalidad 2..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 2..
                                    
                                    
                                        Nacionalidad 3:
                                        Nacionalidad 3..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 3..
                                    
                                    
                                        Grupo Étnico:
                                        Mestizo/aMontuvio/aDe una nacionalidad o pueblo indígenaMulato/aNegro/aCholo/aAfroecuatoriano/ a AfrodescendienteOtraGrupo Etnico...
                                    
                                
                            
                        
                    
                
                
    const mensajeFactorAltoRiesgo = &quot;El socio presenta Factor de Riesgo Alto, se solicitará información adicional para el Formulario de Debida Diligencia&quot;;
    const mensajeTituloFactorAltoRiesgo = &quot;Factor de Riesgo Alto&quot;;

    $(document).ready(() => {

        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).click(() => {
            if ($(&quot;#divDebidaDiligenciaAmpliada&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                $(this).removeClass(&quot;boldFont&quot;);
            }
            else {
                $(this).addClass(&quot;boldFont&quot;);
            }
        });

        $(&quot;#cbClasificacionActividad&quot;).change((_, params) => ClienteAltoRiesgo(params.selected, $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));
        $(&quot;#cbPaisOrigen&quot;).change((_, params) => ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), params.selected, $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));

        $(&quot;#chkEsCargoEleccion&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );

        $(&quot;#chkEsRelacionPersonaPolitica&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );
    });

    const DebidaDiligenciaAmpliadaAbierto = () => {
        if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1DatosComplementarios&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1DatosComplementarios&quot;).removeClass(&quot;boldFont&quot;);
        }
        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).addClass(&quot;boldFont&quot;);
    }

    const ActividadEconomicaRiesgo = (codigoClasificacionCredito, callback) => {
        const url = &quot;~/odata/ClasificacionesCreditos?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and mayorIncidencia eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoClasificacionCredito),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const PaisNivelRiesgo = (codigoPais, callback) => {
        const url = &quot;~/odata/Paises?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and nivelRiesgo eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPais),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const VerificaListasControl = (codigo, apellidos, nombres, tipoDocumento, callback) => {
        const urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
        $.ajax({
            url: urlListaControl,
            type: &quot;POST&quot;,
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            data: JSON.stringify({
                codigo: codigo,
                apellido: apellidos,
                nombre: nombres,
                estadoCivil: tipoDocumento,
                nivelEducacion: codigoUsuarioActual
            }),
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const EsPep = (codigoPep, callback) => {
        const url = &quot;~/odata/Peps?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$select=id&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPep),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const ClienteAltoRiesgo = (codigoClasificacionCredito, codigoPais, codigo, tipoDocumento) => {

        let apellidos = $(&quot;#txtApellidos&quot;).val();
        let nombres = $(&quot;#txtNombres&quot;).val();

        if ($(&quot;#cbTipoDocumento&quot;).val() === &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
            apellidos = $(&quot;#txtApellidos&quot;).val();
            nombres = $(&quot;#txtNombres&quot;).val();
        }
        else if ($(&quot;#cbTipoDocumento&quot;).val() === &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;) {
            apellidos = $(&quot;#txtApellidosPasaporte&quot;).val();
            nombres = $(&quot;#txtNombresPasaporte&quot;).val();
        }
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).hide();
        $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionIngresosConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionOtrosIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtProcedenciaFondos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDepositosNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDepositosMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasRecibidasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasEnviadasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

        ActividadEconomicaRiesgo(codigoClasificacionCredito, resultClasificacionesCreditos => {
            if (resultClasificacionesCreditos.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        PaisNivelRiesgo(codigoPais, resultPaises => {
            if (resultPaises.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        VerificaListasControl(codigo, apellidos, nombres, tipoDocumento, resultListasControl => {
            if (resultListasControl.Anexo &amp;&amp;
                resultListasControl.Anexo.EstaEnConsepEsSindicadoParaNivelRiesgo ||
                resultListasControl.Anexo.EstaEnListaONU ||
                resultListasControl.Anexo.EstaEnOFAC ||
                resultListasControl.Anexo.EstaEnEmpresasFantasma) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
            else {
                EsPep(codigo, resultEsPep => {
                    if (resultEsPep.value[0]) {
                        MostrarAlertaDebidaDiligencia();
                        return;
                    }
                });
            }
        });

     
        if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) || $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
            MostrarAlertaDebidaDiligencia();
        }

    };

    const DebidaDiligenciaAmpliada = (numeroCliente, callback) => {
        const url = &quot;~/odata/DescripcionIngresoFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultDebidaDiligenciaAmpliada => callback(resultDebidaDiligenciaAmpliada)
        });
    };

    const VerificaDebidaDiligenciaAmpliada = numeroCliente => {

        DebidaDiligenciaAmpliada(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDescripcionIngresos&quot;).val(result.value[0].descripcionIngresoSC);
                $(&quot;#txtDescripcionIngresosConyuge&quot;).val(result.value[0].descripcionIngresoConyuge);
                $(&quot;#txtDescripcionOtrosIngresos&quot;).val(result.value[0].descripcionValorOtros);
                $(&quot;#txtProcedenciaFondos&quot;).val(result.value[0].procedenciaDeLosFondos);
                MostrarAlertaDebidaDiligencia();
            }
        });
    };

    const TransaccionalidadMesFormDebidaDiligencia = (numeroCliente, callback) => {
        const url = &quot;~/odata/TransaccionalidadMesFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultTransaccionalidadMesFormDebidaDiligencia => callback(resultTransaccionalidadMesFormDebidaDiligencia)
        });
    };

    const VerificaTransaccionalidadMesFormDebidaDiligencia = numeroCliente => {

        TransaccionalidadMesFormDebidaDiligencia(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDepositosNumeroTransacciones&quot;).val(result.value[0].cantidadDepositos);
                $(&quot;#txtDepositosMonto&quot;).val(result.value[0].montoTotalDepositos);
                $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasRecibidas);
                $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(result.value[0].montoTotalTransferenciasRecibidas);
                $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasEnviadas);
                $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(result.value[0].montoTotalTransferenciasEnviadas);
                $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasRecibidas);
                $(&quot;#txtRemesasRecibidasMonto&quot;).val(result.value[0].montoTotalRemesasRecibidas);
                $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasEnviadas);
                $(&quot;#txtRemesasEnviadasMonto&quot;).val(result.value[0].montoTotalRemesasEnviadas);
            }
        });
    };

    const IngresosSC = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 1) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosConyuge = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 2) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosOtros = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if ((record.numeroVerificador === 1) &amp;&amp; (record.codigoItem === 3 || record.codigoItem === 4 || record.codigoItem === 5 || record.codigoItem === 6)) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const MostrarAlertaDebidaDiligencia = () => {
        if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;)) {
            return;
        }
        $.messager.alert(mensajeTituloFactorAltoRiesgo, mensajeFactorAltoRiesgo, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;);
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).show();
    };




    
        
            INFORMACIÓN REQUERIDA PARA DEBIDA DILIGENCIA AMPLIADA
        
    
    
        
            
            
                
            
            
                
                    
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    TRANSACCIONALIDAD MENSUAL
                    
                
            
            
                
                    
                
            
            
                
                
                
                    N° de Transacciones MENSUALES
                
                
                    Monto
                
            
            
                
                    Depósitos
                
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Enviadas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Enviadas
                
                
                    
                
                
                    
                
            
        
    



                
                    
                        DIRECCIÓN
                    
                
                
                    
                        
                            
                                
                                    País de Residencia:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                            
                                
                                    Dirección Domicilio Exterior
                                    
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    Es migrante:
                                    
                                        
                                        
                                    
                                

                                
                                    Nacionalidad Americana:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                            
                        
                        
                            
                                
                                    
                                        Provincia reside:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        Provincia reside:
                                        
                                    
                                

                                
                                    
                                        Cantón reside:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Cantón reside:
                                        
                                    
                                


                                
                                    
                                        Parroquia reside:
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        Parroquia reside:
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                          
                                        
                                    
                                
                            
                            
                                
                                    
                                        Tipo vivienda:
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        Tipo vivienda:
                                        
                                    
                                
                            
                            
                        
                        
                            
                                ¿Es residente fiscal en Ecuador?: 
                                
                                SI
                                
                                NO
                            
                        
                        
                            
                                
                                    Tributa en el exterior?:
                                    
                                        
                                        
                                    

                                    

                                
                                
                                    País Obligación Tributaria:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria...
                                
                            
                        

                        
                            
                                
                                    Tributa en el exterior 2?:
                                    
                                        
                                        
                                    
                                    
                                
                                
                                    País Obligación Tributaria 2:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria 2...
                                
                            
                        
                    
                
                
                    
                        GEOREFERENCIACION DOMICILIO
                    
                
                
                    
                        
                            
                                
                                
                            
                        
                    
                
                
                    
                        OCUPACIÓN
                    
                
                
                    
                        
                            
                                
                                    
                                        Educación:
                                        
                                            
                                            Sin Estudios
                                            Formación intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                                
                                    
                                        Educación:
                                        
                                    
                                
                            
                            
                                
                                    
                                        Establecimiento:
                                        
                                            
                                        Establecimiento...
                                    
                                
                                
                                    
                                        Profesión SBS:
                                        Arquitectos y afinesCiencias Administrativas y EconómicasCiencias de la educaciónCiencias socialesDerechoIngeniería y Ciencias exactasMédicos, Biólogos, Veterinarios y otros profesionales de la saludPeriodistasPolicías, militares (fuerza pública)Profesión...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Ocupación:
                                        ABACERO                                           ABOGADO                                           ACEITADOR                                         ACOMODADOR DE CINE                                ACROBATA                                          ACTOR                                             ACTRIZ                                            ACTUARIO                                          ACUICULTOR                                        ADMINISTRADOR                                     ADMINISTRADOR AGRICOLA                            ADMINISTRADOR DE COMERCIO                         ADMINISTRADOR DE CORREOS                          ADMINISTRADOR DE EMPRESAS                         ADMINISTRADOR DE FABRICAS                         ADMINISTRADOR DE HOTEL                            ADMINISTRADOR PUBLICO                             ADOBERO                                           AFILADOR                                          AGENTE COMP. NAVIERA                              AGENTE DE ADUANA                                  AGENTE DE BIENES RAICES                           AGENTE DE PUBLICIDAD                              AGENTE DE SEGUROS                                 AGENTE DE TURISMO                                 AGENTE JUDICIAL                                   AGENTE R. COMERCIAL                               AGENTE VIAJERO                                    AGRICULTOR                                        AGRIMESOR                                         AGRONOMO                                          AGUATERO                                          AJUST. DE SINIESTROS                              ALBAÑIL                                           ALFABETIZADOR                                     ALFARERO                                          ALFOMBRERO                                        ALPARGATERO                                       ALPINISTA                                         AMA DE CASA                                       AMA DE LLAVES                                     AMANUENSE                                         ANALISTA                                          ANALISTA DE SISTEMAS                              ANTROPOLOGO                                       APARADOR DE CALZADO                               APICULTOR                                         APLANCHADORA                                      APODERADO                                         APRENDIZ                                          APURADOR                                          ARBITRO                                           ARCHIVERO                                         ARQUEOLOGO                                        ARQUITECTO                                        ARRIERO                                           ARTESANO                                          ARTISTA                                           ASCENSORISTA                                      ASERRADOR                                         ASESOR                                            ASISTENTE                                         ASISTENTE GERENCIA                                ASISTENTE PEDIATRIA                               ASTRONOMO                                         ATLETA                                            AUDITOR                                           AUTOMETRISTA                                      AUTOR                                             AUTOR COMPOSITOR                                  AUXILIAR                                          AUXILIAR DE CONTABILIDAD                          AUXILIAR ENFERMERIA                               AUXILIAR SECRETARIA                               AVALUADOR                                         AVIADOR CIVIL                                     AVIADOR COMERCIAL                                 AVIADOR MILITAR                                   AVIADOR NAVAL                                     AVICULTOR                                         AYUDANTE                                          AZAFATA                                           BACHILLER                                         BACHILLER AGROPECUARIO                            BACHILLER ARTES PLASTICAS                         BACHILLER CIENCIAS EDUCACION                      BACHILLER SECRETARIADO                            BACHILLER TECNICO                                 BACHILLER TECNICO INDUCTRIAL                      BAILARIN                                          BALANCERO                                         BALDOSERO                                         BANANERO                                          BANQUERO                                          BARRENDERO                                        BIBLIOTECARIO/A                                   BIBLIOTECOLOGO                                    BIOLOGO                                           BIOQUIMICO                                        BIOQUIMICO FARMACEUTICO                           BISELADOR                                         BLANQUEADOR                                       BODEGUERO                                         BOLETERO                                          BOMBERO                                           BORDADOR                                          BOTANICO                                          BOTICARIO                                         BOXEADOR                                          BRACERO                                           BREQUERO                                          BUZO                                              CADENERO                                          CAFETERO                                          CAJERO                                            CALCULISTA                                        CALDERERO                                         CALIGRAFO                                         CAMARERO                                          CAMAROGRAFO                                       CANASTERO                                         CANILLITA                                         CANTANTE                                          CANTERO                                           CANTINERO / BAR MAN                               CAPATAZ                                           CARBONERO                                         CARGADOR                                          CARNICERO                                         CARPINTERO                                        CARRETONERO                                       CARROCERO                                         CARTERO                                           CARTOGRAFO                                        CARTONERO                                         CATADOR                                           CAUCHERO                                          CAZADOR                                           CEDACERO                                          CEGARRERO                                         CERAMISTA                                         CERRAJERO                                         CERVECERO                                         CHEFF                                             CHOCOLATERO                                       CHOFER PROFESIONAL                                CINEASTA                                          CIRUJANO                                          CITOLOGO                                          CLASIFICADOR                                      CLASIFICADOR DE BANANO                            COBRADOR DE PASAJE                                COCINERA                                          COLCHONERO                                        COLECTOR                                          COLOCADOR DE VIDRIOS                              COMERCIANTE                                       COMETOLOGO                                        COMISARIO                                         COMISIONISTA                                      CONDUCTOR                                         CONFITERO                                         CONSERJE                                          CONSERJERO SOCIAL                                 CONSTRUCTOR                                       CONTADOR                                          CONTADOR BACHILLER                                CONTADOR BANCARIO                                 CONTRATISTA                                       CONTROLADOR                                       CONTROLADOR TRAFICO AERERO                        COOPERATIVISTA                                    CORREO/BIENES RAICES                              CORRESPONSAL                                      CORTADOR                                          COSEDOR                                           COSTURERA                                         CRIMINOLOGO                                       CRITICO                                           CRONISTA                                          CURTIDOR                                          DACTILOGRAFO                                      DAMA DE COMPANIA                                  DEALER DE CASINO                                  DECORADOR                                         DEM. BELLEZA                                      DEPENDIENTE                                       DEPORTISTA                                        DESCARNADOR                                       DESMOTADOR                                        DESPACHADOR                                       DESTILADOR                                        DETECTIVE                                         DIBUJANTE                                         DIETISTA                                          DIGITADOR                                         DIPLOMATICO                                       DIRECTOR                                          DIRECTOR TECNICO                                  DISEÑADOR                                         DISTRIBUIDOR                                      DOMADOR                                           DORADOR                                           DR. ADMINISTRACION                                DR. BIOQUIMICO Y FARMACEUTICO                     DR. CC. NATURALES                                 DR. CC. POLITICAS                                 DR. CONTABILIDAD                                  DR. ECONOMIA                                      DR. EN AGRONOMIA                                  DR. EN BIOLOGIA                                   DR. EN DERECHO                                    DR. EN DERECHO INTERNACIONAL                      DR. EN EDUCACION                                  DR. EN JURISPRUDENCIA                             DR. EN LINGUISTICA                                DR. EN MATEMATICAS                                DR. EN PSICOLOGIA                                 DR. EN QUIMICA                                    DR. FILOSOFIA Y LETRAS                            DR. MEDICINA                                      DR. MEDICINA VETERINARIA                          DR. NUTRICION HUMANA                              DR. PSICOLOGIA CLINICA                            DR. PSICOLOGIA INDUSTRIAL                         DR. PSICOLOGIA JURIDICA                           DR. QUIMICA FARMACIA                              DR. QUIMICO INDUSTRIAL                            DULCERO                                           EBANISTA                                          ECONOMISTA                                        ECONOMO                                           EDUCADOR PARVULARIO                               EGRESADO/A                                        EJECUTIVO                                         ELECTRICISTA                                      ELECTROTIPISTA                                    EMBALZAMADOR                                      EMBAZADOR                                         EMBELLECEDOR                                      EMBOTELLADOR                                      EMPACADOR                                         EMPALMADOR                                        EMPAQUETADOR                                      EMPLEADA DOMESTICA                                EMPLEADO                                          EMPLEADO BANCARIO                                 EMPLEADO PARTICULAR                               EMPLEADO PRIVADO                                  EMPLEADO PUBLICO                                  EMPLEADOR                                         EMPRESARIO                                        ENCERADOR                                         ENCHAPADOR                                        ENCUADERNADOR                                     ENDEREZADOR                                       ENFERMERO/A                                       ENLADRILLADOR                                     ENLATADOR                                         ENLOSADOR                                         ENTEJADOR                                         ENTRENADOR                                        EQUITADOR                                         ESCOBERO                                          ESCRIBANO                                         ESCRITOR                                          ESCULTOR                                          ESTADISTICO                                       ESTEREOTIPISTA                                    ESTIBADOR                                         ESTILISTA                                         ESTIQUETADOR                                      ESTUDIANTE                                        ESTUQUERO                                         EXPERTO                                           EXPLORADOR                                        FARACEUTICO                                       FERROVIARIO                                       FIERRERO                                          FILOLOGO                                          FISCAL                                            FISCALIZADOR                                      FISICO                                            FISIOTERAPISTA                                    FLORICULTOR                                       FLORISTERI                                        FOGONERO                                          FONDERO                                           FONTANERO                                         FORESTAL                                          FOTOGRABADOR                                      FOTOGRAFO                                         FOTOGRAMETRISTA                                   FOTOMECANICO                                      FUMIGADOR                                         FUNDIDOR EN GENERAL                               FUTBOLISTA                                        GALVANIZADOR                                      GANADERO                                          GASFITERO                                         GEOLOGO                                           GERENTE                                           GINECOLOGO                                        GRABADOR EN GENERAL                               GRAFICO PRENSISTA                                 GUARDA FORESTAL                                   GUARDA ROPAS                                      GUARDIA                                           GUARDIAN                                          GUIA TURISTICO                                    HACHERO                                           HELADERO                                          HERBOLOGO                                         HERRERO                                           HILANDERO                                         HIPNOTIZADOR                                      HISTORIADOR                                       HOJALATERO                                        HORNERO                                           HORTELANO                                         HORTICULTOR                                       HOSTELERO                                         HOTELERO                                          IMPORTADOR                                        IMPRESOR                                          INDUSTRIAL                                        ING. AERONAUTICO                                  ING. AGRICOLA                                     ING. AGRONOMO                                     ING. BURSATIL                                     ING. CIVIL                                        ING. COMERCIAL                                    ING. DE AUDIO                                     ING. DE EMPRESAS                                  ING. DE MINAS                                     ING. DE PETROLEOS                                 ING. DE SISTEMAS                                  ING. DE VUELO                                     ING. ELECTRICO                                    ING. ELECTRICO                                    ING. EN ALIMENTOS                                 ING. EN INFORMATICA                               ING. FORESTAL                                     ING. GEOGRAFO                                     ING. GEOLOGO                                      ING. HIDROGEOLOGIA MINERO                         ING. HIDROLOGO                                    ING. IND. AGROPECUARIA                            ING. INSDUSTRIAL                                  ING. MECANICO                                     ING. METEOROLOGO                                  ING. QUIMICO                                      ING. ZOOTECNISTA                                  INGENIERO                                         INGENIERO NAVAL                                   INGENIERO TEXTIL                                  INSPECTOR                                         INSTRUCTOR                                        INSTRUM. QUIRURGICO                               INTERMEDIARIO                                     INTERPRETE                                        INTROD. GANADO                                    INTRUM. INDUSTRIAL                                INVERSIONISTA                                     INVESTIGADOR PRIVADO                              JABONERO                                          JARDINERO                                         JEFE EN GENERAL                                   JIFERO                                            JOCKEY                                            JUBILADO                                          JUEZ                                              LABORATORISTA                                     LADRILLERO                                        LAMINADOR                                         LANCHERO                                          LAQUEADOR                                         LATONERO                                          LAVANDERO/A                                       LEÑADOR                                           LIBRERO                                           LIC. /ENFERMERIA                                  LIC. ADMINIS. EMPRESAS                            LIC. ADMINIS. PUBLICA                             LIC. CC. COM. SOCIAL                              LIC. CC. EDUCACION                                LIC. CC. INFORMATICA                              LIC. CC. PUB. Y SOC.                              LIC. COMERCIO EXTRANJERO                          LIC. CONTABILIDAD Y AUDITORIA                     LIC. COSTOS INDUSTRIALES                          LIC. EN BANCA                                     LIC. EN ESTADISTICA                               LIC. EN LINGUISTICA                               LIC. EN NUTRICION Y DIETETICA                     LIC. EN SOCIOLOGIA                                LIC. PSICOLOGIA                                   LIC. RECREACION INFANTIL                          LIC. RELACIONES PUBLICAS                          LIC. SERVICIO SOCIAL                              LICENCIADO/A                                      LIMPIABOTAS                                       LIMPIADOR                                         LINGUISTA                                         LINOTIPISTA                                       LITERATO                                          LITOGRAFO                                         LOCUTOR                                           LOTERO                                            MACANERA                                          MADERERO/A                                        MAESTRA CONFECCION INDUSTRIAL                     MAESTRA CORTE CONFECCION                          MAESTRO/A BELLEZA                                 MAESTRO/A ELECT/INDUSTR.                          MAESTRO/A EN ARTES                                MAESTRO/A IMPRESOR                                MAESTRO/A PLANIFICADOR                            MAESTRO/A SASTRERIA                               MAGISTRADO                                        MANICURISTA                                       MANTEQUERO                                        MANTEQUILLADOR                                    MANUFACTURERO                                     MAQUINISTA                                        MARINERO                                          MARINO DE GUERRA                                  MARINO MERCANTE                                   MARMOLERO                                         MASAJISTA                                         MASTER C. FILOSOFICAS                             MASTER CC. EDUCACION                              MASTER CC. HISTORICAS                             MASTER ELECTRONICA                                MASTER EN ECONOMIA                                MASTER EN FISICA                                  MATARIFE                                          MATEMATICO                                        MATRICERO                                         MAYORDOMO                                         MECANICO                                          MECANICO AUTOMOTRIZ                               MECANICO DE PRECISION                             MECANICO DE VUELO                                 MECANICO DENTAL                                   MECANICO INDUSTRIAL                               MECANICO MANTENIMIENTO AVIONES                    MECANICO ORTOPEDICO                               MECANNICO HELICOPTEROS                            MECANOGRAFO                                       MEDICO                                            MEDICO VETERINARIO                                MENSAJERO                                         MESERO                                            METALURGICO                                       METEREOLOGO                                       MILITAR                                           MILITAR EN SERVICIO PASIVO                        MIMIOGRAFISTA                                     MINERO                                            MISIONERO                                         MODELADOR                                         MODELO                                            MODISTA                                           MOLDEADOR                                         MOLINERO                                          MONJA                                             MOTONIVELADOR                                     MOTORISTA                                         MOZO RESTAURANTE                                  MUEBLISTA                                         MUSEOLOGO/S                                       MUSICO                                            NATURALISTA                                       NAVEG. AVIACION                                   NEGOCIANTE                                        NIÑERA                                            NINGUNA                                           NINGUNA                                           NIQUELADOR                                        NIVELADOR                                         NOTARIO                                           OBRERO                                            OBSTETRIZ                                         OCULISTA                                          ODONTOLOGO                                        OFICIAL DE BOMBEROS                               OFICINISTA                                        OPERADOR                                          OPERADOR DE SISTEMAS                              OPERADOR EQUIPO PESADO                            OPERADOR MAQUINA AGRICOLAS                        OPERARIO                                          OPTALMOLOGO                                       OPTICO                                            OPTOMETRISTA                                      ORDENADOR                                         ORFEBRE                                           ORIENTADOR VOCACIONAL PROFESOR                    ORTOPEDICO                                        OTRAS ACTIVIDADES                                 OVICULTOR                                         PAGADOR                                           PAILERO                                           PALEOLOGO                                         PALEONTOLOGO                                      PANADERO                                          PANTALONERO                                       PARTERA                                           PASTELERO                                         PASTOR                                            PATRON COSTANERO                                  PEDICURISTA                                       PEINADOR                                          PELETERO                                          PELUQUERO                                         PEON                                              PEQUEÑO INDUSTRIAL                                PERFORADOR                                        PERIODISTA                                        PERITO                                            PERITO ELECTRICISTA                               PERITO FORESTAL                                   PERITO GEOMENSOR                                  PESCADOR                                          PETROLERO                                         PH. D CC. TECNICAS                                PH. D EN QUIMICA                                  PICADORES                                         PICAPEDRERO                                       PILOTO                                            PILOTO HELICOPTEROS                               PINTOR                                            PINTOR ESCULTOR                                   PIROTECNICO                                       PISCICULTOR                                       PLANCHADOR                                        PLANTADOR                                         PLATERO                                           PLENIPOTENCIARIO                                  PLOMERO                                           POLICIA                                           POLICIA ADUANERO                                  POLICIA JUDICIAL                                  POLICIA MUNICIPAL                                 POLICIA SERVICIO PASIVO                           PORTERO                                           POSILLERO                                         POSTILLON                                         PRACTICO AGRICOLA                                 PRECEPTOR                                         PRENSISTA                                         PRESBITERO                                        PRESTAMISTA                                       PROCURADOR                                        PRODUCTOR                                         PRODUCTOR T.V.                                    PROFESIONAL EN GENERAL                            PROFESOR                                          PROFESOR EN GENERAL                               PROGRAMADOR DE COMPUTADOR                         PROMOTOR  COMERCIO EXTRANJERO                     PROVEEDOR                                         PROYECTISTA                                       PSICOLOGO                                         PSICOLOGO CLINICO                                 PSIQUIATRA                                        PUBLICISTA                                        PULIDOR                                           QUESERO                                           QUIMICO FARMACEUTICO                              QUIROGRAFO                                        QUIROPEDISTA                                      QUMICO                                            RADIODIFUSOR                                      RADIOLOGO                                         RADIOPERADOR                                      RADIOTECNICO                                      RADIOTELEFONISTA                                  RADIOTELEGRAFISTA                                 RECAUDADOR                                        RECAUDADOR R. TELEF.                              RECEPCIONISTA                                     RECORREDOR                                        REDACTOR                                          REGENTE                                           REGISTRADOR                                       RELACIONISTA                                      RELIGIOSO                                         RELOJERO                                          REMACHADOR                                        REMALLADOR                                        REMATADOR                                         RENTISTA                                          REPARADOR                                         REPARTIDOR                                        REPORTERO                                         REPORTERO GRAFICO                                 REPOSTERO                                         REPRESENTANTE                                     REPRESENTANTE DE VENTAS                           REPRESENTANTE OBRAS DE ARTE                       RETIRADO                                          RETOCADOR                                         ROTOGRABADOR                                      ROTULADOR                                         SACERDOTE                                         SACRISTAN                                         SALONERO                                          SASTRE                                            SECRETARIO/A                                      SECRETARIO/A BILINGUE                             SECRETARIO/A EJECUTIVO/A                          SELLADOR                                          SERIGNOFISTA                                      SERIGRAFO                                         SERISCICULTOR                                     SERVICULTOR                                       SIFONERO                                          SINDICO                                           SIRVIENTE                                         SOBRESTANTE                                       SOCIOLOGO                                         SOGUERO                                           SOLDADOR                                          SOMBRERERO                                        SPULTURERO                                        SR. EN OPTOMETRIA                                 SUBASTADOR                                        SUPERVISOR                                        TABACALERO                                        TABERNERO                                         TALABARTERO                                       TALLADOR                                          TAMIGRAFO                                         TAPIZADOR                                         TAQUIGRAFO                                        TAQUIMECANOGRAFO/A                                TAXIDERMISTA                                      TCNL. COMUNICACIONES                              TCNL. CONSTRUCCION CIVIL                          TCNL. COOP. TRANSITO                              TCNL. COSTOS INDUTRIAL.                           TCNL. DISEÑADOR INTERIOR                          TCNL. ELECTROMECANICO                             TCNL. MANTENIMIENTO INDUSTRIAL                    TCNL. TERAP. LENGUAJE                             TEC. INSTRUMENTA. QUIRURGICA                      TEC. MECANICO INDUSTRIAL                          TEC. SUP. ADMINIS. FINCAS                         TEC. SUP. MECANICO AUTOMOTRIZ                     TEC. SUP. NUTRICION ANIMAL                        TEC. SUP. OPTOMETRIA                              TECNICO                                           TECNICO AGRONOMO                                  TECNICO AGROPECUARIO                              TECNICO ANALISTA DE SISTEMAS                      TECNICO AUTOMOTRIZ                                TECNICO CONSTRUCCION                              TECNICO CRIPTOGRAFICO                             TECNICO ELECTRICISTA                              TECNICO ELECTRONICA                               TECNICO EN LECHERIA                               TECNICO EN REFRIGERACION                          TECNICO EN SEGUROS                                TECNICO EN TURISMO                                TECNICO MATRICERO                                 TECNICO OPERADOR DE VUELO                         TECNICO REDES TELEFONICAS                         TECNICO TEXTIL                                    TECNOGOLO EN PETROLEOS                            TECNOLOGO                                         TECNOLOGO ELECTRICO                               TECNOLOGO ELECTRONICO                             TECNOLOGO EN COMPUTACION                          TECNOLOGO EN MINAS                                TECNOLOGO EN RECREA. INFANTIL                     TECNOLOGO INDUSTRIAL                              TECNOLOGO MECANICO                                TECNOLOGO MEDICO                                  TEJEDOR                                           TELEFONISTA                                       TELEGRAFISTA                                      TELEPATA                                          TEÑIDOR                                           TERAPEUTA                                         TERAPISTA EN LEGUAJE                              TERAPISTA OCUPACIONAL                             TERCENISTA                                        TESORERO                                          TINTORERO                                         TIPOGRAFO                                         TOPOLOGO                                          TOQUILLERO                                        TORERO                                            TORNERO                                           TRABAJADOR                                        TRABAJADOR SOCIAL                                 TRACTORISTA                                       TRADUCTOR                                         TRAMOYISTA                                        TRANSMISOR                                        TRIPULANTE                                        VACUNADOR                                         VAQUERO                                           VELADOR                                           VENDEDOR                                          VETERINARIO                                       VIDRIERO                                          VIGILANTE                                         VINICULTOR                                        VISITADOR MEDICO                                  VISITADOR SOCIAL                                  VITICULTOR                                        VIVANDERA                                         VOCEADOR                                          VULCANIZADOR                                      XILOGRAFO                                         YESERO                                            ZAPATERO                                          ZOOLOGO                                           ZOOTECNICO                                        Ocupación...
                                    
                                
                                
                                    
                                        Ocupación:
                                        
                                    
                                
                            
                            
                                
                                    Origen ingresos:
                                    
                                        
                                        Ama de casa
                                        Empleado privado
                                        Empleado público
                                        Independiente
                                        Jubilado pensionista
                                        Remesas exterior 
                                        Rentista 
                                        Ninguno
                                    Ingresos...
                                
                            
                        
                        
                            
                                
                                    
                                        Grupo económico:
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo...
                                    
                                
                                
                                    
                                        Grupo económico:
                                        
                                    
                                

                            
                        
                        
                            
                                
                                    
                                        Clasificación actividad:
                                        
                                            
                                        Actividad...
                                    
                                
                                
                                    
                                        Clasificación actividad:
                                        
                                    
                                
                            
                        
                    
                    
    $(document).ready(() => {
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).empty();
        $.each(codigosArea, (key, value) => $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;));
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
    });
    const TieneNegocioPropio = (ocupacion, origenIngresos) => ocupacion !== &quot;245&quot; &amp;&amp; origenIngresos === &quot;I&quot;;

    const EsNegocioLocal = (codigoPais) => codigoPais === &quot;EC&quot;;

    const MuestraDatosNegocioPropio = (ocupacion, origenIngresos, numeroCliente) => {
        if (TieneNegocioPropio(ocupacion, origenIngresos)) {
            $(&quot;#divNegocioPropio&quot;).show();
            CargaDatosNegocioPropio(numeroCliente).success((result) => {
                if (result.value.length > 0) {
                    const codigoProvincia = result.value[0].codigoProvincia ? result.value[0].codigoProvincia.trim() : 0;
                    const secuencialCanton = result.value[0].secuencialCanton || 0;
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val(result.value[0].secuencial);
                    $(&quot;#txtRucNegocioPropio&quot;).val(result.value[0].ruc);
                    $(&quot;#txtNombreNegocioPropio&quot;).val(result.value[0].nombreNegocio);
                    CargaPaisNegocioPropio(result.value[0].codigoPais);
                    $(&quot;#txtEstadoNegocioPropio&quot;).val(result.value[0].estado);
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val(result.value[0].telefonoExterior);
                    CargaProvinciaNegocioPropio(codigoProvincia);
                    CargaCantonesNegocioPropio(codigoProvincia, secuencialCanton);
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val(result.value[0].telefono);
                    $(&quot;#txtCelularNegocioPropio&quot;).val(result.value[0].celular);
                    $(&quot;#txtDireccionNegocioPropio&quot;).val(result.value[0].direccion);
                    $(&quot;#txtCargoNegocioPropio&quot;).val(result.value[0].cargo);
                }
                else {
                    CargaPaisNegocioPropio(0);
                    CargaProvinciaNegocioPropio(0);
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtRucNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtNombreNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtEstadoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtCelularNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtDireccionNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtCargoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                }
            });
        }
        else {
            $(&quot;#divNegocioPropio&quot;).hide();
        }
    };

    const ValidaProvinciaNegocioPropio = (cb) => {
        if (cb.value) {
            
            //Se ingresan datos en comboBox de Cantones
            const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
            $.ajax({
                url: urlCantones.replace(&quot;{0}&quot;, cb.value),
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: (resultCantones) => {
                    $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultCantones.value,  (_, value) => {
                        $(&quot;#cbCantonNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });
                    $(&quot;#cbCantonNegocioPropio&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    
                }
            });
        }
    };

    const VerificaPaisNegocioPropio = (cb) => {
        if (EsNegocioLocal(cb)) {
            $(&quot;.NegocioLocal&quot;).show();
            $(&quot;.NegocioExtranjero&quot;).hide();
        }
        else {
            $(&quot;.NegocioLocal&quot;).hide();
            $(&quot;.NegocioExtranjero&quot;).show();
        }
    };

    const CargaDatosNegocioPropio = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DatoNegocioPropio?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,ruc,nombreNegocio,codigoPais,estado,telefonoExterior,codigoProvincia,secuencialCanton,telefono,celular,direccion,cargo&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };

    const CargaProvinciaNegocioPropio = (codigo) => {
        
        const urlProvincias = &quot;~/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlProvincias,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultProvincias) => {
                $(&quot; , &quot;'&quot; , &quot;#cbProvinciaNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultProvincias.value, (_, value) => {
                    $(&quot;#cbProvinciaNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbProvinciaNegocioPropio&quot;).val(codigo || 0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });

    };

const CargaCantonesNegocioPropio = (codProvincia, codigoCanton) => {
    if (codProvincia) {
        
        const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvincia),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultCantones) => {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, (_, value) =>{
                    $(&quot;#cbCantonNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonNegocioPropio&quot;).val(codigoCanton||0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}
const CargaPaisNegocioPropio = (codigoPais) => {
        const urlPaisNegocioPropio = &quot;~/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
        
        $.ajax({
            url: urlPaisNegocioPropio,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultPaisTributa) => {
                
                $(&quot; , &quot;'&quot; , &quot;#cbPaisNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultPaisTributa.value, (_, value) =>{
                    $(&quot;#cbPaisNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbPaisNegocioPropio&quot;).val(codigoPais||0).chosen().trigger(&quot;chosen:updated&quot;).trigger(&quot;change&quot;);
            }
        });
}



    
        DATOS NEGOCIO PROPIO
        
            
                
                    
                    
                
            
            
                
                    
                
            
        
        
            
                
                    Pais:
                    
                        
                    Pais...
                
            
            
                
                    
                
            
            
                
                    +593 - ECUADOR
                    
                
            
        
        
            
                
                    Provincia:
                    
                        
                    Provincia...
                
            
            
                
                    Cantón:
                    
                        
                    Cantón...
                
            
            
        
        
            
                
                    02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                    
                
            
            
                
                    
                
            
        
        
            
                
                    
                
            
            
                
                    
                
            
        
    

                    
                        
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                        
                    
                    
                        
                            DATOS EMPRESA
                            
                                
                                    
                                        
                                            
                                            
                                        
                                        Convenio Institucional
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        Pais Empresa:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                        Provincia:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                

                                
                                    
                                        Cantón:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Parroquia:
                                        
                                            
                                        Parroquia...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                

                                
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                            
                        
                    
                    
                        CONVENIO INSTITUCIONALCod N° Cliente RUC Nombre Asesor 
                            
                                
                                    Cod
                                    N° Cliente
                                    RUC
                                    Nombre
                                    Asesor
                                
                            
                        
.datagrid-cell-c1-secuencial{width:32px}
.datagrid-cell-c1-numeroCliente{width:72px}
.datagrid-cell-c1-codigo{width:112px}
.datagrid-cell-c1-nombreUnido{width:282px}
.datagrid-cell-c1-nombre{width:282px}
.datagrid-cell-c9-secuencial{width:32px}
.datagrid-cell-c9-numeroCliente{width:72px}
.datagrid-cell-c9-codigo{width:112px}
.datagrid-cell-c9-nombreUnido{width:282px}
.datagrid-cell-c9-nombre{width:282px}

                    
                
                
                    
                        SITUACIÓN ECONÓMICA
                    
                
                
                    
                        
                            
                                
                                    Es Primer trabajo:
                                    
                                        
                                        
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    País Origen Ingresos:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                        
                        
                            
                                Ingresos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c2-nombreArrendador{width:197px}
.datagrid-cell-c2-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                ActivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c3-nombreArrendador{width:112px}
.datagrid-cell-c3-activos{width:72px}
.datagrid-cell-c3-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                        
                            
                                Gastos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c4-nombreArrendador{width:212px}
.datagrid-cell-c4-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                PasivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c5-nombreArrendador{width:142px}
.datagrid-cell-c5-activos{width:72px}
.datagrid-cell-c5-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                    
                

                
                    
                        REFERENCIAS
                    
                
                
                    
                        
                            
                                
                                    REFERENCIAS BANCARIAS
                                
                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                

                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS PERSONALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS COMERCIALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                    

                

                
                    
                        OTROS
                    
                

                
                    
                        
                            
                                
                                    Propósito relación:
                                    
                                        
                                        AHORROS
                                        CDP
                                        COLOCACIONES
                                        SERVICIOS
                                        TODAS
                                    Propósito relación...
                                    Obligado a llevar Contabilidad:
                                    
                                        
                                        
                                    
                                    Es Gravamen:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Condición firmas:
                                        
                                            
                                            Ninguna
                                            Conjuntas
                                            Indistintas
                                        Condición...
                                    
                                    
                                    

                                
                            
                        
                        
                            
                                
                                    
                                        Representante:
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Apoderado:
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    Tipo de poder:
                                
                                
                                    
                                    Especial
                                    
                                    General
                                    
                                    
                                
                            
                        
                        
    const HabilitaDeclaracionPeps = (chk) => {
        if (chk) {
            $(&quot;.DeclaracionPEPS&quot;).show();
        }
        else {
            $(&quot;.DeclaracionPEPS&quot;).hide();
        }
    };

    const CargaDeclaracionPep = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DeclaracionPep?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,cargo,institucion,fechaNombramiento,fechaCulminacion&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };


    
        Declaración PEPS: ¿Usted ha desempeñado en el último año, funciones o cargos púlicos destacados en el Ecuador o en el extranjero, o realizado funciones prominentes en una orfanización internacional en representación del país?
    
    
        
        
            
            
        
    


    
        
            
            
            
        
    


    
        
            Fecha de nombramiento de designación:
            
        

        
            Fecha de culminación del cargo:
            
        
    


    
        ¿Usted es familiar(Cónyuge o pareja en unión de hecho, y familiares hasta el segundo grado de consanguinidad y primero en afinidad), colaborador directo (Persona que se encuentre asociado(a) o vinculado(a) societariamente o mantiene realaciones empresariales, comerciales o laborales estrechas con una Persona Expuesta Políticamente (PEP))?
    
    
        
            
            
        
    


    
        
            
                PEP:
                
                
            
        
    

                    
                
                
                    
                        
                            
                                
                                
                            
                        

                        
                            
                                
                            
                            
                                
                            
                        
                        
                            
                                
                            
                            
                                
                            
                        
                    
                
            
        
    






    const NuevoClienteDatosBasicos = (identificacion, controlOrigen) => {
        if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
            if (VerificarNumeroCedula(identificacion)) {
                $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;470px&quot; , &quot;'&quot; , &quot; });
                tipoDocumento = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;
            }
            else {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula Incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El Número de Cédula ingresado es incorrecto.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                return;
            }
        }
        else {
            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;PASAPORTE&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
            $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
            $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
            $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
            $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
            $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;50px&quot; , &quot;'&quot; , &quot; });
            tipoDocumento = &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;
        }
        controlOrigenCedula = controlOrigen;
        CargarGrupoEconomico();
        CargaProvincias();
        CargaPaises();
        AbrirVentanaNuevoCliente();
    };











    $(document).ready(function () {

        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog({
            title: &quot; , &quot;'&quot; , &quot;INDICIOS CRS (Estandar Común de Reportes)&quot; , &quot;'&quot; , &quot;,
            position: &quot; , &quot;'&quot; , &quot;center&quot; , &quot;'&quot; , &quot;,
            draggable: true,
            collapsible: false,
            minimizable: false,
            maximizable: false,
            resizable: true,
            closable: false,
            width: &quot; , &quot;'&quot; , &quot;auto&quot; , &quot;'&quot; , &quot;,
            height: 380,
            closed: false,
            cache: false,
            modal: true
        });

        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);

        //controles a agregar verificación
        $(&quot;#cbPaisOrigen&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad1&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad2&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad3&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisResidencia&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#rbResideSI&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisOrigenRecursos&quot;).change(function () { verificarCRSNatural() });

    });

    function CierraDialogoCRSNatural() {
        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);
    }

    function verificarCRSNatural() {
               
        var tipoDocumento = $(&quot; , &quot;'&quot; , &quot;#txtTipoIdentificacion&quot; , &quot;'&quot; , &quot;).val() || $(&quot;#cbTipoDocumento&quot;).val();
        var paisNacimiento = $(&quot;#cbPaisOrigen&quot;).val();
        var nacionalidad1 = $(&quot;#cbNacionalidad1&quot;).val();
        var nacionalidad2 = $(&quot;#cbNacionalidad2&quot;).val();
        var nacionalidad3 = $(&quot;#cbNacionalidad3&quot;).val();
        var paisResidencia = $(&quot;#cbPaisResidencia&quot;).val();
        var paisTrabajo = $(&quot;#cbPaisOrigenRecursos&quot;).val();
        var residenteFiscalEcuador = $(&quot; , &quot;'&quot; , &quot;input[name=radiog_reside]:checked&quot; , &quot;'&quot; , &quot;).val();

        
        if ((residenteFiscalEcuador &amp;&amp; residenteFiscalEcuador == &quot;S&quot;) &amp;&amp; (
            (tipoDocumento &amp;&amp; tipoDocumento.startsWith(&quot;P&quot;)) ||
            (paisNacimiento &amp;&amp; paisNacimiento != &quot;EC&quot;) ||
            (nacionalidad1 &amp;&amp; nacionalidad1 != &quot;ECU&quot;) ||
            (nacionalidad2 &amp;&amp; nacionalidad2 != &quot;ECU&quot;) ||
            (nacionalidad3 &amp;&amp; nacionalidad3 != &quot;ECU&quot;) ||
            (paisResidencia &amp;&amp; paisResidencia != &quot;EC&quot;) ||
            (paisTrabajo &amp;&amp; paisTrabajo != &quot;EC&quot;)))
        {
            $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;open&quot; , &quot;'&quot; , &quot;);
        } 
    }


            
            
            
        
    
    
    
        $ = jQuery.noConflict();

        var codProvinciaEmpresa = &quot;&quot;;
        var codCantonEmpresa = 0;
        var numeroClienteConyugeGenerado = 0;
        var numeroClienteRepresentanteGenerado = 0;
        var numeroClienteApoderadoGenerado = 0;

        var codPais = 0;
        var numeroClienteGenerado;
        var secuencialCodigoClienteGenerado;
        var codigoUsuarioActual = (&quot; , &quot;'&quot; , &quot;CCEDENO&quot; , &quot;'&quot; , &quot;).trim().toUpperCase();
        var fechaSistema;
        var arrIngresos = new Array();
        var arrGastos = new Array();
        var arrActivos = new Array();
        var arrPasivos = new Array();
        var impresionFormularioPendiente;
        var direccionPersonaRegistroCivil;
        var base64StringFoto;
        var base64StringFirma;
        var consultarRegistroCivil = true;
        var IpCliente;
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //MDJR 18/05/2017 funcion mejorada
        var field = $(&quot;#txtEmail&quot;);
        var hiddenField = $(&quot;#txtEmailOculto&quot;);
        var enmascarado;
        var paisGeneraDI;
        var arroba = &quot; , &quot;'&quot; , &quot;@&quot; , &quot;'&quot; , &quot;;
        var ocultar = &quot; , &quot;'&quot; , &quot;*&quot; , &quot;'&quot; , &quot;;
        var esCRSControles = false; //HabilitarControles
        var esCRSDatosEmpresa = false; //HabilitarDatosTrabajo
        var esCRSCiudadNacmientoExt = false; //HabilitarCiudadNacmientoExt
        var esCRSTributaExterior = false; //VerificaTributaExterior
        var offline = false;

        function EnmascararEmail(correo) {
            if (!isValidEmail(correo)) return correo;
            var email = correo.split(arroba);
            return oculta(email[0]) + arroba + email[1];
        }

        function oculta(inicial) {
            for (var i = 1; i &lt; inicial.length - 1; i++) {
                inicial = inicial.substr(0, i) + ocultar + inicial.substr(i + 1);
            }
            enmascarado = true;
            return inicial;
        }




        jQuery(function ($) {
            ////////////////////carga de combos para telefonos/////////////////////////////////

            $(&quot; , &quot;'&quot; , &quot;select.data-list-input&quot; , &quot;'&quot; , &quot;).change(function () {
                var that = this; //esto es eso
                var telefono = $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val();
                var codigo = $(that).val();
                switch (telefono.length) {
                    case 9:
                        $.each(codigosArea, function (key, value) {
                            if (telefono.substring(0, 2) == key) {
                                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo + telefono.substring(2, telefono.length));
                            }
                        });

                        break;
                    case 6:
                    case 7:
                        $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo + telefono);
                        break;
                    default:
                        $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo);
                }
                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).focus();
                $(that).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            });

            //Ingreso de prefijos para numero exterior, establece la seleccion en txtTelefonoExterior
            $(&quot; , &quot;'&quot; , &quot;select.data-list-inputext&quot; , &quot;'&quot; , &quot;).change(function () {
                var that = this; //esto es eso
                var telefonoext = $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).val();
                var codigoext = $(that).val();

                $.each(prefijosExterior, function (key, value) {
                    //if (telefonoext.substring(0, codigoext.length) == key) {
                    $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).val(codigoext );// +telefonoext.substring(codigoext.length, telefonoext.length)
                    //}
                });

                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).focus();
                $(that).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            });

            //Inicializo combos
            $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;TelefonoCom&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;TelefonoCom1&quot; , &quot;'&quot; , &quot;).empty();


            $.each(codigosArea, function (key, value) {
                $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoCom&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoCom1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
            });

            $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoCom&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoCom1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

            //////////////////fin carga de combos para telefonos///////////////////////////////////////////

        });



        function formatValorItemIngreso(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorIngreso&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemIngreso(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatValorItemGasto(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorGasto&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemGasto(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }
        function formatValorItemActivo(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorActivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemActivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }
        function formatValorItemPasivo(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorPasivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemPasivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatIngresoDescripcionActivos(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtDescripcionActivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;text-transform: uppercase;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarDescripcionActivo(this)&quot; maxlength=&quot;100&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatIngresoDescripcionPasivos(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtDescripcionPasivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;text-transform: uppercase; width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarDescripcionPasivo(this)&quot; maxlength=&quot;100&quot; />&quot; , &quot;'&quot; , &quot;;
        }


        function CopiarCargoToDescripcion() {
            $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
        }

        function CambiarValorItemIngreso(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorIngreso&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalIngresos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemGasto(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorGasto&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalGastos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemActivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorActivo&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalActivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemPasivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorPasivo&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalPasivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarDescripcionActivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtDescripcionActivo&quot; , &quot;'&quot; , &quot;)[1]].descripcionActividad = tb.value.trim();
        }

        function CambiarDescripcionPasivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtDescripcionPasivo&quot; , &quot;'&quot; , &quot;)[1]].descripcionActividad = tb.value.trim();
        }

        function ObtenerTotal(lista) {
            var total = 0;
            for (var i = 0; i &lt; lista.length; i++) {
                total += parseFloat(lista[i].activos);
            }
            return total.toFixed(2);
        }

        function BuscarPersonaRegistroCivil() {
            $ = jQuery.noConflict();
            if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtIdentificacion&quot;).val() == null) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; es requerido y máximo de 10 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (isNaN($(&quot;#txtIdentificacion&quot;).val().trim())) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; debe ser un número.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtIdentificacion&quot;).val().trim().length &lt; 10) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; debe tener 10 dígitos.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#txtCodigoDactilar&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCodigoDactilar&quot;).val() == null) &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsMenorDeEdad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Código Dactilar&quot; es requerido.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCodigoDactilar&quot;).val().trim().length &lt; 6 &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsMenorDeEdad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Código Dactilar&quot; debe tener 6 caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else {
                
                var urlDatosRegistroCivil = &quot;osapi/ServiceCliente.svc/ObtenerDatosClienteDeRegistroCivil&quot;;
                $.ajax({
                    url: urlDatosRegistroCivil,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        clave: $(&quot;#txtCodigoDactilar&quot;).val().trim().toUpperCase(),
                        fechaIngreso: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(fechaSistema))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                        //fechaModificacion: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot; , &quot;'&quot; , &quot;#txtFechaExpedicion&quot; , &quot;'&quot; , &quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        offline = false;
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Estado == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
                            $(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
                            $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
                            $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;disabled&quot;, true);
                            $(&quot;#txtCodigoDactilar&quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueA&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueB&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueC&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueD&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#txtNombrePersona&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot;#txtGeneroPersona&quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#txtNombrePersona&quot; , &quot;'&quot; , &quot;).val(resultado.Nombre);
                            $(&quot;#txtEstadoCivilPersona&quot;).val(resultado.EstadoCivil);
                            $(&quot;#txtFechaNacimiento&quot;).val(resultado.FechaNacimiento);
                            $(&quot;#txtFechaExpedicion&quot;).val(&quot;F. Exp: &quot; + resultado.FechaExpedicion); //TODO: VERIFICAR EXISTEN 2 CONTROLES CON FECHA DE EXPEDICION

                            $(&quot;#cbEstadoCivil&quot;).val(resultado.EstadoCivilChar);
                            $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                            ValidarFechaNacimiento(document.getElementById(&quot; , &quot;'&quot; , &quot;txtFechaNacimiento&quot; , &quot;'&quot; , &quot;));
                            $(&quot;#txtFechaExpedicionPersona&quot;).val(resultado.FechaExpedicion);
                            if (resultado.ImageStringFoto != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#imgFotoPersonaMain&quot;).attr(&quot; , &quot;'&quot; , &quot;src&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;data:image/png;base64,&quot; , &quot;'&quot; , &quot; + resultado.ImageStringFoto);
                                base64StringFoto = resultado.ImageStringFoto;
                            }
                            if (resultado.ImageStringFirma != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#imgFirmaPersonaMain&quot;).attr(&quot; , &quot;'&quot; , &quot;src&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;data:image/png;base64,&quot; , &quot;'&quot; , &quot; + resultado.ImageStringFirma);
                                base64StringFirma = resultado.ImageStringFirma;
                            }

                            if (resultado.FechaDefuncion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; resultado.FechaDefuncion != null) {//MDJR 19/05/2017 daba falsos positivos cuando devolvia null
                                $.fn.window.defaults.closable = false;
                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Persona Fallecida&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La persona consultada falleció el &quot; , &quot;'&quot; , &quot; + resultado.FechaDefuncion + &quot; , &quot;'&quot; , &quot;. No se puede crear al cliente.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                                $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
                                $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
                            }

                            var arrayApellidosNombres = resultado.Nombre.split(&quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;);
                            var apellidosPersona = arrayApellidosNombres[0] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                            var nombresPersona;
                            for (var i = 1; i &lt; arrayApellidosNombres.length ; i++) {
                                if (i == 1)
                                    apellidosPersona = apellidosPersona + arrayApellidosNombres[1];
                                else if (i == 2)
                                    nombresPersona = arrayApellidosNombres[2] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                                else
                                    nombresPersona = nombresPersona + arrayApellidosNombres[i] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                            }
                            $(&quot;#txtApellidos&quot;).val(apellidosPersona.trim());
                            $(&quot;#txtNombres&quot;).val(nombresPersona);
                            ValidaEstadoCivil(document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;));
                            if (resultado.EstadoCivilChar == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; || resultado.EstadoCivilChar == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#txtCedulaConyuge&quot;).val(resultado.NuiConyuge);
                                $(&quot;#txtNombreConyuge&quot;).val(resultado.NombreConyuge);
                                nombreConyugeRegistroCivil = resultado.NombreConyuge.trim();
                            }
                            if (resultado.SexoChar == &quot; , &quot;'&quot; , &quot;H&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                            }
                            else {
                                $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                            }
                            $(&quot;#txtSexoPersona&quot;).val(resultado.Sexo);
                            direccionPersonaRegistroCivil = resultado.Direccion;
                            if (resultado.GeneroChar != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; resultado.GeneroChar != null) {
                                $(&quot;#txtGeneroPersona&quot;).show();
                                $(&quot;#txtGeneroPersona&quot;).val(resultado.Genero);
                                if (resultado.GeneroChar == &quot; , &quot;'&quot; , &quot;M&quot; , &quot;'&quot; , &quot;) {
                                    $(&quot;#rbGeneroM&quot;).prop(&quot;checked&quot;, true);
                                }
                                else {
                                    $(&quot;#rbGeneroF&quot;).prop(&quot;checked&quot;, true);
                                }
                            }
                            //evito modificacion de datos

                            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:updated&quot; , &quot;'&quot; , &quot;);

                            $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivil&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivil&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:updated&quot; , &quot;'&quot; , &quot;);

                            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).focus();
                        }
                        else if (verificaRespuestaRC(resultado.Estado, resultado.MensajeConsulta)) {
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.MensajeConsulta, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                        }
                        else
                        {
                           $.messager.confirm(mensajeServicioNoDisponible, mensajeRCNoDisponible, r => {
                               if (r) {
                                   offline = true;
                                   ActivaControlesPasaporte();
                                   $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).show();
                                }
                            });
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que valida y guarda los datos del cliente
        function GuardarDatos(e) {
            $ = jQuery.noConflict();
            //Se validan los campos.

            //*************************Comienza div de Datos********************************.
            if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;&quot; || $(&quot;#cbTipoDocumento&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Tipo documento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; &amp;&amp; $(&quot;#txtIdentificacion&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot;es requerido !&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (consultarRegistroCivil == true &amp;&amp; $(&quot;#txtNombrePersona&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Consulte datos desde Registro Civil!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#txtApellidosPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidosPasaporte&quot;).val().trim().length > maxApellido) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxApellido + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidosPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtApellidos&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidos&quot;).val().trim().length > maxApellido)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxApellido + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNombres&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombres&quot;).val().trim().length > maxNombre)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxNombre + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; ($(&quot;#txtNombresPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombresPasaporte&quot;).val().trim().length > maxNombre)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxNombre + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombresPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; (($(&quot;#txtApellidos&quot;).val().toUpperCase().trim() + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot; + $(&quot;#txtNombres&quot;).val().toUpperCase().trim()) != $(&quot;#txtNombrePersona&quot;).val().toUpperCase().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El nombre ingresado es diferente al que consta en el Registro Civil&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot;&quot; || $(&quot;#cbEstadoCivilPasaporte&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado civil&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivilPasaporte&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;D.I. Conyuge&quot; es requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot;#txtCedulaConyuge&quot;).val().trim() != &quot;&quot;)) {
                
                var urlCedulaConyuge = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&quot;;
                $.ajax({
                    url: urlCedulaConyuge.replace(&quot;{0}&quot;, $(&quot;#txtCedulaConyuge&quot;).val().trim()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        
                        if (result.value.length > 0) {
                            numeroClienteConyuge = result.value[0].numeroCliente;
                            ContinuacionVerificacionIngresoDatos(e);
                        }
                        else {
                            $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                            DatosAbierto();
                            e.preventDefault();
                            $.fn.window.defaults.closable = false;
                            $.messager.confirm(&quot; , &quot;'&quot; , &quot;Confirmación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El conyuge no es cliente. ¿Desea crear uno nuevo?&quot; , &quot;'&quot; , &quot;, function (r) {
                                if (r) {
                                    $(&quot;#txtIdentificacionDatosBasicos&quot;).val($(&quot;#txtCedulaConyuge&quot;).val());
                                    controlOrigenCedula = &quot; , &quot;'&quot; , &quot;CedulaConyuge&quot; , &quot;'&quot; , &quot;;
                                    var identificacion = $(&quot;#txtIdentificacionDatosBasicos&quot;).val().trim();
                                    if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
                                        if (VerificarNumeroCedula(identificacion)) {
                                            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                                            $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                                            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                                            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                                            $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                                            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;470px&quot; , &quot;'&quot; , &quot; });
                                            tipoDocumento = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;
                                        }
                                        else {
                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula Incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El Número de Cédula ingresado es incorrecto.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                                                opcion == 1 ? $(&quot;#txtCondicionFirmas&quot;).focus() : $(&quot;#txtCondicionFirmasNoAhorroMas&quot;).focus();
                                            });
                                            return;
                                        }
                                    }
                                    else {
                                        $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;PASAPORTE&quot; , &quot;'&quot; , &quot;);
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
                                        $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
                                        $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
                                        $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
                                        $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
                                        $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
                                        $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
                                        $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;50px&quot; , &quot;'&quot; , &quot; });
                                        tipoDocumento = &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;
                                        //habilito edicion de nombres, apellidos y fecha nacimiento x ser nuevo
                                        $(&quot;#txtApellidosDatosBasicos&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
                                        $(&quot;#txtNombresDatosBasicos&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
                                        $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimientoDatosBasicos&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
                                    }
                                    //CargaPaises();
                                    //CargarGrupoEconomico();
                                    //CargaProvincias();

                                    AbrirVentanaNuevoCliente();
                                }
                            });
                        }
                    }
                });
            }
            else
                ContinuacionVerificacionIngresoDatos(e);
        }

        function ContinuacionVerificacionIngresoDatos(e) {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;D.I. Conyuge&quot; es requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; $(&quot;#txtFechaNacimiento&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nacimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbSexoMPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el Sexo del cliente.!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#txtFechaNacimientoPasaporte&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nacimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimientoPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtEmail&quot;).val().trim() != &quot;&quot; &amp;&amp; (!isValidEmail($(&quot;#txtEmailOculto&quot;).val().trim()))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Email&quot; NO es una dirección válida!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtEmail&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNumeroCargas&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargas&quot;).val().trim()) > maxNumeroCargas)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de cargas&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNumeroCargas + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargas&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; ($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim()) > maxNumeroCargas)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de cargas&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNumeroCargas + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargasPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (!($(&quot;#cbGrupoEtnico&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Grupo Étnico&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbGrupoEtnico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresosConyuge&quot;).val()) &amp;&amp; ($(&quot;#cbEstadoCivil&quot;).val() == &quot;C&quot; || $(&quot;#cbEstadoCivil&quot;).val() == &quot;U&quot; )) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresosConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresosConyuge&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionOtrosIngresos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionOtrosIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionOtrosIngresos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtProcedenciaFondos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtProcedenciaFondos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtProcedenciaFondos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de depósitos en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDepositosNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de depósitos en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDepositosMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de transferencias recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasRecibidasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de transferencias recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasRecibidasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de transferencias enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasEnviadasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de transferencias enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasEnviadasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de remesas recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasRecibidasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de remesas recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasRecibidasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de remesas enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasEnviadasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de remesas enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasEnviadasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
                //*********************Comienza div de Dirección**********************************.
            else if ($(&quot;#cbPaisOrigen&quot;).val() == &quot;&quot; || $(&quot;#cbPaisOrigen&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País de origen&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigen&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese la ciudad de nacimiento&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val().trim().length &lt; 5) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La longitud mínima de la ciudad de nacimiento es de 5 caracteres&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSTributaExterior &amp;&amp; !($(&quot;#cbPaisDI&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione el país donde se generó el documento de identificación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#cbPaisDI&quot;).focus();  });
            }
            else if ($(&quot;#cbProvinciaReside&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbCantonReside&quot;).val() == &quot;&quot; || $(&quot;#cbCantonReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Canton reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbParroquiaReside&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parroquia reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#txtDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccion&quot;).val().trim().length > maxDireccion) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxDireccion + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtNumCasa&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasa&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasa&quot;).val().trim().length > 10) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;#casa/edificio&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + 3 + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + 20 + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumCasa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtReferenciaDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length > maxRefDireccion) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Referencia&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxRefDireccion + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtReferenciaDireccion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe ingresar al menos un número de teléfono!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbNacionalidad1&quot;).val() == &quot;&quot; || $(&quot;#cbNacionalidad1&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nacionalidad 1&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad1&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;input:radio[name =&quot; , &quot;'&quot; , &quot;radiog_reside&quot; , &quot;'&quot; , &quot;]:checked&quot;).val() == undefined) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;¿Es residente fiscal en Ecuador?&quot; es requerido! en seccion Dirección&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {  });
            }
            else if ($(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de Identificación Tributaria en el Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#chkPaisObligacionTributaria&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; || $(&quot;#chkPaisObligacionTributaria&quot;).val() == null) &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País Obligación Tributaria&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot; , &quot;'&quot; , &quot;option:selected&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).size() == 0 &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País con obligación tributaria&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono2&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe tener &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe comenzar &quot;09&quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe tener &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe comenzar &quot;09&quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoVivienda&quot;).val() == &quot;&quot; || $(&quot;#cbTipoVivienda&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Tipo vivienda&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoVivienda&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //*********************Comienza div de Ocupación**********************************.
            else if ($(&quot;#cbEducacion&quot;).val() == &quot;&quot; || $(&quot;#cbEducacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Educación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEducacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //  else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
            else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; (calcAge($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
                //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Establecimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Ocupación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == null)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Origen ingresos&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Ocupación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbProfesionSBS&quot;).val() == &quot;&quot; || $(&quot;#cbProfesionSBS&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Profesion SBS&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbGrupoEconomico&quot;).val() == &quot;&quot; || $(&quot;#cbGrupoEconomico&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Grupo economico&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbClasificacionActividad&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividad&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Clasificacion actividad&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtNombreEmpleador&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombreEmpleador&quot;).val().trim().length > maxNombreEmpleador) ) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre/Razón social empleador&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNombreEmpleador + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).focus(); });
            }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtNombreNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtNombreNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#cbPaisNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione pais del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbPaisNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#txtEstadoNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado Empresa&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtEstadoNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbProvinciaNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione provincia del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbCantonNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione cantón del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtDireccionNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDireccionNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtCargoNegocioPropio&quot;).val())) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtCargoNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;&quot; &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#txtPaisEstadoEmpresa&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtPaisEstadoEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono Exterior&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null || $(&quot;#cbProvinciaPublico&quot;).val() == &quot;0&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Canton&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbParroquiaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parroquia&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cantón&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot;) &amp;&amp; esCRSDatosEmpresa) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length &lt; 9)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length == 9) &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPublico&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length > 9)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; máximo debe tener 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ////////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().length &lt; minLengthCel)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().substring(0, 2) != &quot;09&quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ///////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtDireccionPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccionPublico&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccionPublico&quot;).val().trim().length > maxDireccionPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxDireccionPublico + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxCargoPublico + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxCargoPublico + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) &amp;&amp; getSelected() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe seleccionar una empresa de convenio institucional!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Descripción Actividad Económica Actual&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTiempoTrabajo&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Tiempo en el trabajo&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTiempoTrabajo&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //*********************Comienza Situacion Economica**********************************.
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;) &amp;&amp;
                $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; ($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == null)) {
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;F. Inicio Trabajo Anterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;) &amp;&amp;
                $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; ($(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == null)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;F. Fin Trabajo Anterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //MDJR 2017/04/07 Ingresos y Egresos deben ser mayor que 0
            else if ($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ((calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El total de Ingresos Mes y Gastos Mes no deben ser cero&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtValorIngreso0&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; ((calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El total de Ingresos Mes y Gastos Mes no deben ser cero&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtValorIngreso0&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Personal 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Es requerido que ingrese un número telefónico convencional o celular&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                /////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parentesco&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Personal 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////2
                /////////////////////////////////////////////////////3
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////3
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Bancaria 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Bancaria 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Comercial 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ////////////////////////////////////////////////////////////////////////

                //Referencia Comercial 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 6) {
                //    $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                //    $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                //    ReferenciasAbierto()
                //    e.preventDefault();
                //    $.fn.window.defaults.closable = false;
                //    $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar mínimo de 6 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
                //}
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //*********************Comienza div de Otros**********************************.
            else if ($(&quot;#cbPropositoRelacion&quot;).val() == &quot;&quot; || $(&quot;#cbPropositoRelacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Proposito relacion&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPropositoRelacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //MDJR 06/06/2017 Por favor se requiere cuando una persona es menor de edad y registra estado civil casada el sistema no requiere ingresar un representante
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cédula&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxRepresentante + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cédula&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxRepresentante + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbPoderE&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbPoderG&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione tipo de poder&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#rbPoderG&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtFechaEmision&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha emisión&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaEmision&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#txtApoderado&quot;).val().trim() == $(&quot;#txtIdentificacion&quot;).val().trim()) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Ingreso inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente no puede ser apoderado de si mismo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                    $(&quot;#txtNombreApoderado&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtFechaEmision&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtFechaCaducidad&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtFechaEmision&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
                    $(&quot; , &quot;'&quot; , &quot;#txtApoderado&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); $(&quot; , &quot;'&quot; , &quot;#txtApoderado&quot; , &quot;'&quot; , &quot;).focus();
                });
            }

            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().trim().length == 0) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código postal del pais de residencia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionDomicilioExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().length &lt; 3) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La longitud mínima del código postal es de 5 caracteres&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoPostal&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtDireccionDomicilioExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección Domicilio Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionDomicilioExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtPaisEstado&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Pais Estado&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtPaisEstado&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#txtNumCasaExterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasaExterior&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasaExterior&quot;).val().trim().length > 10) &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;#casa/edificio exterior&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + 3 + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + 10 + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumCasaExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == null &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Pais Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp;  !($(&quot;#txtCargoDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtCargoDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#txtInstitucionDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Institución&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtInstitucionDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nombramiento de designación&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtFechaNombramientoDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtNombreUnidoPEP&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre Unido PEP&quot; en la sección Otros es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreUnidoPEP&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot;#txtCargoPEP&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; en la sección Otros es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPEP&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else {
                abrirModalOportunidad(listaCaptaciones);
                //Se previene el envio de datos directos de form en submit.
                e.preventDefault();
                var urlValidaIdentificacion = &quot;osapi/ServiceCliente.svc/ValidaIdentificacionExistente&quot;;
                //Se valida si existe un cliente con la misma identificación, en estado activo.
                
                $.ajax({
                    url: urlValidaIdentificacion,
                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        tipo: $(&quot;#cbTipoDocumento&quot;).val()
                    }),
                    dataType: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (result) {
                        //Si la cédula ingresada no existe, se graba al cliente.
                        if (result.Correcto) {
                            grabarClienteNatural();
                        }
                        else {
                            
                            $.fn.window.defaults.closable = false;
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que graba los datos del nuevo cliente natural
        function grabarClienteNatural() {

            var grdListIngresos = $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;);
            var dataListIngresos = $.data(grdListIngresos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListIngresos = dataListIngresos.rows;

            var grdListGastos = $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;);
            var grdListGastos = $.data(grdListGastos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListGastos = grdListGastos.rows;

            var grdListActivos = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataListActivos = $.data(grdListActivos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListActivos = dataListActivos.rows;

            var grdListPasivos = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataListPasivos = $.data(grdListPasivos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListPasivos = dataListPasivos.rows;

            var rowsPaisObligacionTributaria = $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).val();
            var rowsNumeroIdentificacionTributariaExterior = $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior&quot; , &quot;'&quot; , &quot;).val();
            var rowsPaisObligacionTributaria2 = $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria2&quot; , &quot;'&quot; , &quot;).val();
            var rowsNumeroIdentificacionTributariaExterior2 = $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior2&quot; , &quot;'&quot; , &quot;).val();

            paisesObligacionesTributarias = {
                itemsPaisesObligacionesTributariasGrabar: []
            };

            if (rowsPaisObligacionTributaria != null) {
                if (rowsPaisObligacionTributaria.length > 0) {
                    paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                        &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                        &quot;codigoPais&quot;: rowsPaisObligacionTributaria,
                        &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior
                    });
                    if (rowsPaisObligacionTributaria2 != null &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior2&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                        if (rowsPaisObligacionTributaria2.length > 0) {
                            paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                                &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                                &quot;codigoPais&quot;: rowsPaisObligacionTributaria2,
                                &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior2
                            });
                        }
                    }

                }
            }
            else {
                itemsPaisesObligacionesTributariasGrabar: []
            }

            listaItemsEconomicosPatrimoniales = {
                itemsEconomicosPatrimonialesGrabar: []
            };


            if (rowsListIngresos.length > 0) {
                for (var i = 0; i &lt; rowsListIngresos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListIngresos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListIngresos[i].activos),
                        &quot;descripcion&quot;: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                        &quot;numeroVerificador&quot;: 1
                    });
                }
            }

            if (rowsListGastos.length > 0) {
                for (var i = 0; i &lt; rowsListGastos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListGastos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListGastos[i].activos),
                        &quot;descripcion&quot;: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                        &quot;numeroVerificador&quot;: 2
                    });
                }
            }

            if (rowsListActivos.length > 0) {
                for (var i = 0; i &lt; rowsListActivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListActivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListActivos[i].activos),
                        &quot;descripcion&quot;: rowsListActivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 3
                    });
                }
            }

            if (rowsListPasivos.length > 0) {
                for (var i = 0; i &lt; rowsListPasivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListPasivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListPasivos[i].activos),
                        &quot;descripcion&quot;: rowsListPasivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 4
                    });
                }
            }
            if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) {
                $(&quot;#txtApellidos&quot;).val($(&quot;#txtApellidosPasaporte&quot;).val());
                $(&quot;#txtNombres&quot;).val($(&quot;#txtNombresPasaporte&quot;).val());
                $(&quot;#txtFechaNacimiento&quot;).val($(&quot;#txtFechaNacimientoPasaporte&quot;).val());
                if ($(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, false);
                }
                if ($(&quot; , &quot;'&quot; , &quot;#rbSexoMPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, false);
                }
                $(&quot;#txtNumeroCargas&quot;).val($(&quot;#txtNumeroCargasPasaporte&quot;).val());
                var identificaconPasaporte = $(&quot;#txtIdentificacion&quot;).val().trim();
                $(&quot;#txtIdentificacion&quot;).val(identificaconPasaporte.toUpperCase());
            }

            var telefonoReferenciaPersonal_1 = $(&quot;#txtTelefonoPersonal&quot;).val();
            if ($(&quot;#txtTelefonoCelular&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaPersonal_1 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelular&quot;).val();

            var telefonoReferenciaPersonal_2 = $(&quot;#txtTelefonoPersonal1&quot;).val();
            if ($(&quot;#txtTelefonoCelular1&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaPersonal_2 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelular1&quot;).val();

            var telefonoReferenciaComercial_1 = $(&quot;#txtTelefonoCom&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaComercial_1 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularCom&quot;).val();

            var telefonoReferenciaComercial_2 = $(&quot;#txtTelefonoCom1&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom1&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaComercial_2 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularCom1&quot;).val();

            var telefonoEmpresa = $(&quot;#txtTelefonoPublico&quot;).val();
            if ($(&quot;#txtTelefonoCelularEmpresa&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoEmpresa += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularEmpresa&quot;).val();

            var urlNuevoCliente = &quot;osapi/ServiceCliente.svc/GrabarCliente&quot;;
            var urlNuevoDatosConvenio = &quot;osapi/ServiceCliente.svc/GrabarDatosConvenio&quot;;
            var urlNuevoDatosEmpresa = &quot;osapi/ServiceCliente.svc/GrabarDatosEmpresa&quot;;
            var urlNuevoApoderado = &quot;osapi/ServiceCliente.svc/GrabarDatosApoderado&quot;;
            var urlNuevoEstablecimiento = &quot;osapi/ServiceCliente.svc/GrabarDatosEstablecimiento&quot;;

            var generoChar = null;
            if ($(&quot; , &quot;'&quot; , &quot;#rbGeneroM&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;))
                generoChar = $(&quot; , &quot;'&quot; , &quot;#rbGeneroM&quot; , &quot;'&quot; , &quot;).val();
            else if ($(&quot; , &quot;'&quot; , &quot;#rbGeneroF&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;))
                generoChar = $(&quot; , &quot;'&quot; , &quot;#rbGeneroF&quot; , &quot;'&quot; , &quot;).val();

            
            $.ajax({
                url: urlNuevoCliente,
                type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                data: JSON.stringify(
                    {
                        Cliente: {
                            codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                            tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                            direccionDomicilio: $(&quot;#txtDireccion&quot;).val().trim(),
                            telefonoDomicilio: $(&quot;#txtTelefono1&quot;).val().trim(),
                            email: $(&quot;#txtEmailOculto&quot;).val().trim(),
                            paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                            nacionalidad1: $(&quot;#cbNacionalidad1&quot;).val(),
                            nacionalidad2: $(&quot;#cbNacionalidad2&quot;).val(),
                            nacionalidad3: $(&quot;#cbNacionalidad3&quot;).val(),
                            zonaReside: $(&quot;#cbParroquiaReside&quot;).val().split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[1],
                            representantePrincipal: $(&quot;#txtRepresentante&quot;).val().trim(),
                            representanteSecundario: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                            estado: &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;,
                            nombreUnido: $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim(),
                            sectorEconomico: &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;,
                            vinculo: 1,
                            puedeSerSocio: 0,
                            numeroVerificador: 1,
                            codigoUsuarioModifico: codigoUsuarioActual,
                            referencia: $(&quot;#txtReferenciaDireccion&quot;).val().trim(),
                            codigoGrupo: $(&quot;#cbGrupoEconomico&quot;).val().trim(),
                            telefono2: $(&quot;#txtTelefono2&quot;).val().trim(),
                            celular1: $(&quot;#txtCelular1&quot;).val().trim(),
                            celular2: $(&quot;#txtCelular2&quot;).val().trim(),
                            propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                            esMigrante: $(&quot; , &quot;'&quot; , &quot;#chkMigrante&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                            ciudadNacimiento: esCRSCiudadNacmientoExt ? $(&quot;#txtCiudadNacimiento&quot;).val() || null : null,
                            nCasa: $(&quot;#txtNumCasa&quot;).val() || 0,
                            codigoPostal: $(&quot;#txtCodigoPostal&quot;).val(),
                            paisGeneraDI: $(&quot;#cbPaisDI&quot;).val() || null,
                            esResidenteEC: $(&quot;input:radio[name =&quot; , &quot;'&quot; , &quot;radiog_reside&quot; , &quot;'&quot; , &quot;]:checked&quot;).val() == &quot;S&quot; ? true : false,
                            calleSecundaria: $(&quot;#txtCalleSecundaria&quot;).val().trim().toUpperCase(),
                            correoValido: estaValidadoCorreo
                        },
                        EmailAsesor: (localStorage[&quot;emailAsesor&quot;] == undefined || localStorage[&quot;emailAsesor&quot;] == &quot;null&quot; || localStorage[&quot;emailAsesor&quot;] == &quot;oficialseguridad@oscus.coop&quot;) ? codigoUsuarioActual : localStorage[&quot;emailAsesor&quot;],
                        IdCrm: localStorage[&quot;idOportunidadCrm&quot;] == undefined || localStorage[&quot;idOportunidadCrm&quot;] == &quot;null&quot; ? &quot;&quot; : localStorage[&quot;idOportunidadCrm&quot;],
                        ClienteModelo: {
                            clienteNatural: {
                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                nombre: $(&quot;#txtNombres&quot;).val().trim(),
                                apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                                queSexo: $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) ? $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).val() : $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).val(),
                                queGenero: generoChar,
                                estadoCivil: $(&quot;#cbEstadoCivil&quot;).val(),
                                numeroCargas: $(&quot;#txtNumeroCargas&quot;).val().trim(),
                                esDependiente: $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot; ? 0 : 1,
                                nivelEducacion: $(&quot;#cbEducacion&quot;).val(),
                                queVivienda: $(&quot;#cbTipoVivienda&quot;).val(),
                                fechaNacimiento: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNacimiento&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                queProfesion: $(&quot;#cbOcupacion&quot;).val(),
                                esNacional: $(&quot; , &quot;'&quot; , &quot;#chkEsNacional&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                queActividadEconomica: $(&quot;#cbClasificacionActividad&quot;).val().trim(),
                                numeroverificador: 1,
                                esGravamen: $(&quot; , &quot;'&quot; , &quot;#chkGravamen&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                obligadoLlevarContabilidad: $(&quot; , &quot;'&quot; , &quot;#chkLlevarContabilidad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                tipoFirma: &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;, //MDJR 2017/04/13 SIEMPRE N
                                clienteFirma: 0,
                                origenIngresos: $(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; ? &quot;N&quot; : $(&quot;#cbOrigenIngresos&quot;).val(),
                                profesionSBS: $(&quot;#cbProfesionSBS&quot;).val(),
                                tieneApoderado: $(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; ? 0 : 1,
                                paisResidencia: $(&quot;#cbPaisResidencia&quot;).val().trim(),
                                nacionalidadAmericana: $(&quot; , &quot;'&quot; , &quot;#chkNacionalidadAmericana&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                enUnionLibre: $(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                conDisolucionConyugal: $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                paisEstado: esCRSControles ? $(&quot;#txtPaisEstado&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                direccionDomicilioExterior: esCRSControles ? $(&quot;#txtDireccionDomicilioExterior&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                tributaExterior: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                nCasaExterior: esCRSControles ? $(&quot;#txtNumCasaExterior&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroIdentificacionTributariaExterior: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val().toUpperCase() : &quot;&quot;,
                                secuencialGrupoEtnico: $(&quot;#cbGrupoEtnico&quot;).val()
                            },
                            //para calcular el nivel riesgo y revisar actividad cliente
                            cliente: {
                                codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                                tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                                propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                                paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                                nivelRiesgo: 0,
                                codigoUsuarioModifico: codigoUsuarioActual
                            },
                            referenciaComercial: {
                                nombre: $(&quot;#txtNombreCom&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom&quot;).val(),
                                telefono: telefonoReferenciaComercial_1,
                                prioridad: 1,
                                numeroVerificador: 1
                            },
                            referenciaBancaria: {
                                nombreBanco: $(&quot;#txtBanco&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta&quot;).val(),
                                prioridad: 1,
                                tipoCuenta: $(&quot;#cbTipoCuenta&quot;).val() || &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroVerificador: 1
                            },
                            referenciaPersonal: {
                                nombre: $(&quot;#txtNombrePersonal&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal&quot;).val(),
                                telefono: telefonoReferenciaPersonal_1,
                                prioridad: 1,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco&quot;).val()
                            },
                            referenciaComercialNatural: {
                                nombre: $(&quot;#txtNombreCom1&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom1&quot;).val(),
                                telefono: telefonoReferenciaComercial_2,
                                prioridad: 2,
                                numeroVerificador: 1
                            },
                            referenciaBancariaNatural: {
                                nombreBanco: $(&quot;#txtBanco1&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta1&quot;).val(),
                                prioridad: 2,
                                tipoCuenta: $(&quot;#cbTipoCuenta1&quot;).val() || &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroVerificador: 1
                            },
                            referenciaPersonalNatural: {
                                nombre: $(&quot;#txtNombrePersonal1&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal1&quot;).val(),
                                telefono: telefonoReferenciaPersonal_2,
                                prioridad: 2,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco1&quot;).val()
                            },
                            datoCrediticio: {
                                tiempoResidencia: 1,
                                numeroConyuge: numeroClienteConyuge,
                                codigoUsuarioModifico: codigoUsuarioActual,
                                descripcionActividad: $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                tiempoActividad: $(&quot;#txtTiempoTrabajo&quot;).val().trim() == &quot;&quot; ? 0 : $(&quot;#txtTiempoTrabajo&quot;).val().trim(),
                                actividadSecundaria: ($(&quot;#cbClasificacionActividadSecundaria&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividadSecundaria&quot;).val() == null) ? null : $(&quot;#cbClasificacionActividadSecundaria&quot;).val(),
                                fechaInicioTrabajoAnterior: $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                fechaSalidaTrabajoAnterior: $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaFinTrabajoAnterior&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                paisResidencia: $(&quot;#cbPaisOrigenRecursos&quot;).val().trim()
                            },
                            //se usa la clase DatoCrediticio para enviar otros datos
                            datosIngresosEgresos: {
                                ingresos: $(&quot;#txtIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtIngresos&quot;).val() : 0,
                                activos: $(&quot;#txtIngresosAdicionales&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtIngresosAdicionales&quot;).val() : 0,
                                egresos: $(&quot;#txtEgresos&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtEgresos&quot;).val() : 0,
                            },
                            datosPersonaRegistroCivil: {
                                numeroCliente: ($(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) ? $(&quot;#txtNumeroCliente&quot;).val() : 0,
                                fechaExpedicion: ($(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot; , &quot;'&quot; , &quot;#txtFechaExpedicionPersona&quot; , &quot;'&quot; , &quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot; , &quot;'&quot; , &quot;01/01/1990&quot; , &quot;'&quot; , &quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                direccion: direccionPersonaRegistroCivil,
                                usuarioSkype: $(&quot;#txtUsuarioSkype&quot;).val().trim(),
                                usuarioFacebook: $(&quot;#txtUsuarioFacebook&quot;).val().trim(),
                                codigoDactilar: $(&quot;#txtCodigoDactilar&quot;).val().trim(),
                            },
                            pepsClientes: {
                                numeroCliente: $(&quot;#txtNumeroCliente&quot;).val(),
                                esCargoEleccion: $(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                esRelacionPersonaPolitica: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                nombreUnidoPEP: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtNombreUnidoPEP&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtNombreUnidoPEP&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                cargoPEP: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtCargoPEP&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtCargoPEP&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                            },
                            paisesObligacionesTributarias: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar : [],
                            listaItemsEconomicosPatrimoniales: listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar,
                            geoReferenciacionClientes: {
                                latitudDomicilio: modificoGeoDomicilio ? latitudDomicilio : null,
                                longitudDomicilio: modificoGeoDomicilio ? longitudDomicilio : null,
                                usuarioActualiza: codigoUsuarioActual,
                            },
                            Offline: offline,
                            ConsultoRegistroCivil: consultarRegistroCivil,
                            DatoNegocioPropio: (!TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp;  !( $(&quot;#SecuencialDatoNegocioPropio&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDatoNegocioPropio&quot;).val() || 0,
                                ruc: $(&quot;#txtRucNegocioPropio&quot;).val(),
                                nombreNegocio: $(&quot;#txtNombreNegocioPropio&quot;).val(),
                                codigoPais: $(&quot;#cbPaisNegocioPropio&quot;).val(),
                                estado: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;? $(&quot;#txtEstadoNegocioPropio&quot;).val() : null,
                                telefonoExterior: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;?  $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val() : null,
                                codigoProvincia: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbProvinciaNegocioPropio&quot;).val(): null,
                                secuencialCanton: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbCantonNegocioPropio&quot;).val() : null,
                                telefono: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;?  $(&quot;#txtTelefonoNegocioPropio&quot;).val() : null,
                                celular: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#txtCelularNegocioPropio&quot;).val() :null,
                                direccion: $(&quot;#txtDireccionNegocioPropio&quot;).val(),
                                cargo: $(&quot;#txtCargoNegocioPropio&quot;).val(),
                                activo: TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()),
                                codigoUsuario: codigoUsuarioActual
                            },
                            DeclaracionPep:  (!$(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#SecuencialDeclaracionPep&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDeclaracionPep&quot;).val() || 0,
                                cargo: $(&quot;#txtCargoDeclaracionPEPS&quot;).val(),
                                institucion: $(&quot;#txtInstitucionDeclaracionPEPS&quot;).val(),
                                fechaNombramiento: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                fechaCulminacion: $(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val() ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : null,
                                activo: $(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                codigoUsuario: codigoUsuarioActual
                            },
                            descripcionIngresoFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    valorIngresoSC: IngresosSC(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoSC: $(&quot;#txtDescripcionIngresos&quot;).val(),
                                    valorIngresoConyuge: IngresosConyuge(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoConyuge: $(&quot;#txtDescripcionIngresosConyuge&quot;).val(),
                                    valorOtrosIngresos: IngresosOtros(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionValorOtros: $(&quot;#txtDescripcionOtrosIngresos&quot;).val(),
                                    procedenciaDeLosFondos: $(&quot;#txtProcedenciaFondos&quot;).val()
                                } : null,
                            transaccionalidadMesFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    cantidadDepositos: $(&quot;#txtDepositosNumeroTransacciones&quot;).val(),
                                    montoTotalDepositos: $(&quot;#txtDepositosMonto&quot;).val(),
                                    cantidadTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(),
                                    cantidadTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(),
                                    cantidadRemesasRecibidas: $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasRecibidas: $(&quot;#txtRemesasRecibidasMonto&quot;).val(),
                                    cantidadRemesasEnviadas: $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasEnviadas: $(&quot;#txtRemesasEnviadasMonto&quot;).val()
                                } : null
                        }
                }),
                dataType: &quot;json&quot;,
                contentType: &quot;application/json; charset=utf-8&quot;,
                success: function (result) {
                    //Si se ha ingresado correctamente en la tabla clientes, se ingresa en la tabla cliente natural.
                    if (result.Correcto) {
                        numeroClienteGenerado = result.Anexo.NumeroCliente;
                        document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesor&quot; , &quot;'&quot; , &quot;).innerHTML = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[1];
                        document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoAsesor&quot; , &quot;'&quot; , &quot;).value = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[2];
                        document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoOficina&quot; , &quot;'&quot; , &quot;).value = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[3];
                        if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;S&quot;) {
                            secuencialCodigoClienteGenerado = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[0];
                            $(&quot;#txtIdentificacion&quot;).val(secuencialCodigoClienteGenerado);
                        }
                        if (result.Informacion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                            $.fn.window.defaults.closable = false;
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Nota&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () { });
                        }
                                //Si se grabó correctamente el cliente natural, se graban datos de apoderado o de educación.
                                var mensajeResultGrabarClienteNatural = result.Informacion;
                                if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot;) {
                                    $.ajax({
                                        url: urlNuevoApoderado,
                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                        data: JSON.stringify({
                                            numeroCliente: result.Anexo.NumeroCliente,
                                            codigoClienteApoderado: $(&quot;#txtApoderado&quot;).val().trim(),
                                            fechaEmision: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaEmision&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                            fechaCaducidad: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCaducidad&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                            codigoUsuario: codigoUsuarioActual,
                                            tipoPoder: $(&quot; , &quot;'&quot; , &quot;input[name=rbPoder]:checked&quot; , &quot;'&quot; , &quot;).val()
                                        }),
                                        dataType: &quot;json&quot;,
                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                        success: function (result) {
                                            //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                            if (result.Correcto) {
                                                if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                    $.ajax({
                                                        url: urlNuevoDatosConvenio,
                                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                        data: JSON.stringify({
                                                            convenio: {
                                                                secuencialConvenio: getSelected(),
                                                                usuarioIngreso: codigoUsuarioActual,
                                                                usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                estaActivo: 0,
                                                                debitoDeCuentaDeEmpresa: 0,
                                                                acreditaRolACuentaEmpresa: 1,
                                                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                numeroCliente: result.Anexo.NumeroCliente
                                                            },
                                                            datosEmpresa: {
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim().toUpperCase(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim().toUpperCase(),
                                                                telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val() != null ? $(&quot;#txtCargoPublico&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }
                                                        }),
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {
                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                    $.ajax({
                                                        url: urlNuevoDatosEmpresa,
                                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                        data: JSON.stringify({
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }),
                                                        //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {

                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/, false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    ActivarDesactivarBotones();
                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                        impresionFormularioPendiente = true;
                                                    });
                                                }
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                            }
                                        },
                                        error: ajaxError
                                    });
                                }
                                else {
                                    // if ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
                                    if ($(&quot;#cbEstablecimiento&quot;).val() &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
                                        //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                                        $.ajax({
                                            url: urlNuevoEstablecimiento,
                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                            data: JSON.stringify({
                                                codigoEstablecimiento: $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(),
                                                numeroCliente: result.Anexo.NumeroCliente
                                            }),
                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                            dataType: &quot;json&quot;,
                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                            success: function (result) {
                                                //Si correctamente el establecimiento se procede a ingresar datos Empresa
                                                if (result.Correcto) {
                                                    if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                        $.ajax({
                                                            url: urlNuevoDatosConvenio,
                                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                            data: JSON.stringify({
                                                                convenio: {
                                                                    secuencialConvenio: getSelected(),
                                                                    usuarioIngreso: codigoUsuarioActual,
                                                                    usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    estaActivo: 0,
                                                                    debitoDeCuentaDeEmpresa: 0,
                                                                    acreditaRolACuentaEmpresa: 1,
                                                                    codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    numeroCliente: result.Anexo.NumeroCliente
                                                                },
                                                                datosEmpresa: {
                                                                    nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                    direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                    telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                    cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                    pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                    paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                    sueldoMensual: 0,
                                                                    numeroVerificador: 1,
                                                                    secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                    numeroCliente: result.Anexo.NumeroCliente,
                                                                    secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                    telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;

                                                                }
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {
                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                        $.ajax({
                                                            url: urlNuevoDatosEmpresa,
                                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                            data: JSON.stringify({
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {

                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else {
                                                        
                                                        $.fn.window.defaults.closable = false;
                                                        ActivarDesactivarBotones();
                                                        $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                        $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                            VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                            impresionFormularioPendiente = true;
                                                        });
                                                    }
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                }
                                            },
                                            error: ajaxError
                                        });
                                    }
                                    else {
                                        //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                        if (result.Correcto) {
                                            if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                $.ajax({
                                                    url: urlNuevoDatosConvenio,
                                                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                    data: JSON.stringify({
                                                        convenio: {
                                                            secuencialConvenio: getSelected(),
                                                            usuarioIngreso: codigoUsuarioActual,
                                                            usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            estaActivo: 0,
                                                            debitoDeCuentaDeEmpresa: 0,
                                                            acreditaRolACuentaEmpresa: 1,
                                                            codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            numeroCliente: result.Anexo.NumeroCliente
                                                        },
                                                        datosEmpresa: {
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }
                                                    }),
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (resultDatosConvenio) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                $.ajax({
                                                    url: urlNuevoDatosEmpresa,
                                                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                    data: JSON.stringify({
                                                        nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                        direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                        telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                        cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                        sueldoMensual: 0,
                                                        numeroVerificador: 1,
                                                        numeroCliente: result.Anexo.NumeroCliente,
                                                        secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                        secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                        pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                        paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                        telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                    }),
                                                    //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (result) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                ActivarDesactivarBotones();
                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                //$.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Cliente ingresado correctamente!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                    impresionFormularioPendiente = true;
                                                });
                                            }
                                        }
                                        else {
                                            
                                            $.fn.window.defaults.closable = false;
                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                        }
                                    }
                                }
                        //Verificar solicitud de tarjeta de debito EDRS 15/07/2019
                        VerificaTarjetaDebito(result.Anexo.NumeroCliente, true);
                    }
                    else {
                        
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                    }
                    localStorage[&quot; , &quot;'&quot; , &quot;listaOportunidades&quot; , &quot;'&quot; , &quot;] = false;
                    localStorage[&quot;emailAsesor&quot;] = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                    localStorage[&quot;idOportunidadCrm&quot;] = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                },
                error: ajaxError
            });
        }

        function DeshabilitarEdicion() {
            $(&quot;#txtTipoDocumentoSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEstadoCivilSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtPaisSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtProvinciaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbProvinciaReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbProvinciaReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtCantonSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbCantonReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbCantonReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtParroquiaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbParroquiaReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbParroquiaReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEducacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbEducacion&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbEducacion&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtTipoViviendaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoVivienda&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoVivienda&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtOcupacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbOcupacion&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbOcupacion&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtClasificacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtGrupoEconomicoSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            //$(&quot; , &quot;'&quot; , &quot;#divTipoDocumentoSelect&quot; , &quot;'&quot; , &quot;).hide();
            //$(&quot; , &quot;'&quot; , &quot;#divTipoDocumentoText&quot; , &quot;'&quot; , &quot;).show();
            //$(&quot; , &quot;'&quot; , &quot;#divEstadoCivilSelect&quot; , &quot;'&quot; , &quot;).hide();
            //$(&quot; , &quot;'&quot; , &quot;#divEstadoCivilText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divPaisSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divPaisText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divProvinciaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divProvinciaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divCantonSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divCantonText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divParroquiaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divParroquiaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divEducacionSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divEducacionText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divTipoViviendaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divTipoViviendaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divOcupacionSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divOcupacionText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divClasificacionActividadSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divClasificacionActividadText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divGrupoEconomicoSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divGrupoEconomicoText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtDireccion&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtEmail&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtReferencia&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargas&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        }

        function ActivarDesactivarBotones() {
            $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divPrinterDisabled&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divPrinterEnabled&quot; , &quot;'&quot; , &quot;).show();
            DeshabilitarEdicion();
        }


        function ListaControl() {
            var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
            if ($(&quot;#txtApellidos&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtApellidos&quot;).val().trim() != &quot;undefined&quot; &amp;&amp;
                $(&quot;#txtNombres&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombres&quot;).val().trim() != &quot;undefined&quot;) {
                if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
                    if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot;) {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el Nº de Cédula para procesar Lista de Control&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
                        return;
                    }
                }
                $.fn.window.defaults.closable = false;
                var urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
                $.ajax({
                    url: urlListaControl,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                        nombre: $(&quot;#txtNombres&quot;).val().trim(),
                        estadoCivil: $(&quot;#cbTipoDocumento&quot;).val(),
                        nivelEducacion: codigoUsuarioActual
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Correcto) {
                            if (resultado.Anexo.EstaEnConsepEsSindicado || resultado.Anexo.EstaEnConsepEsHomonimo || resultado.Anexo.EstaEnOFAC ||
                                resultado.Anexo.EstaEnProvidenciasJudiciales || resultado.Anexo.EstaEnListaONU || resultado.Anexo.EstaEnEmpresasFantasma) {
                                $.fn.window.defaults.closable = false;
                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Lista Control&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;; });
                            }
                            else {
                                if (resultado.Informacion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) { //Esto se da solo cuando el cliente ingresad esta en RegistrosClientesListaNegra
                                    $.fn.window.defaults.closable = false;
                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Lista Control&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;; });
                                }
                                var apellidosnombreCliente = $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim();
                                var urlNombreRemplazar = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=nombreUnido eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and estado eq &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;&quot;;
                                $.ajax({
                                    url: urlNombreRemplazar.replace(&quot;{0}&quot;, apellidosnombreCliente),
                                    dataType: &quot;json&quot;,
                                    cache: &quot;false&quot;,
                                    success: function (result) {
                                        
                                        if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                                            if (result.value.length >= 1) {
                                                divGrdClientesHomonimos.style.display = &quot;block&quot;;
                                                $(&quot; , &quot;'&quot; , &quot;#grdClientesHomonimos&quot; , &quot;'&quot; , &quot;).datagrid({
                                                    fitColumns: true,
                                                    striped: true,
                                                    nowrap: false,
                                                    sortName: &quot; , &quot;'&quot; , &quot;released&quot; , &quot;'&quot; , &quot;,
                                                    sortOrder: &quot; , &quot;'&quot; , &quot;asc&quot; , &quot;'&quot; , &quot;,
                                                    width: &quot; , &quot;'&quot; , &quot;100%&quot; , &quot;'&quot; , &quot;
                                                });
                                                $(&quot; , &quot;'&quot; , &quot;#grdClientesHomonimos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, result.value);
                                                AbrirVentanaClientesHomonimos();
                                            }
                                        }
                                    },
                                    error: ajaxError
                                });

                            }
                        }
                        else {
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                        }
                    },
                });
            }
        }

        jQuery(function ($) {

            jQuery(document).on(&quot; , &quot;'&quot; , &quot;keyup&quot; , &quot;'&quot; , &quot;, field, function () {
                if (field.val().indexOf(arroba) > 0) {
                    if (!enmascarado) {
                        var email = field.val().split(arroba);
                        field.val(oculta(email[0]) + arroba + email[1]);
                        hiddenField.val(email[0] + arroba + email[1]);
                    }
                    else {
                        if (field.val().split(arroba)[0].length != hiddenField.val().split(arroba)[0].length) {
                            enmascarado = false;
                            field.val(&quot;&quot;);
                            hiddenField.val(&quot;&quot;);
                        }
                        else hiddenField.val(hiddenField.val().split(arroba)[0] + arroba + field.val().split(arroba)[1]);
                    }
                } else if (enmascarado &amp;&amp; field.val().length >= 0) {
                    field.val(&quot;&quot;);
                    hiddenField.val(&quot;&quot;);
                    enmascarado = false;
                }
            });
            ////////////////////////////////////////////// fin enmascara //////////////////////////////////////////////////////////////

            //Función que maneja el evento de click en grid de convenio institucional.
            $(document).ready(function () {
                $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid({
                    onClickRow: function (rowIndex, rowData) {
                        //Se cargan los datos de empresa
                        if (rowData.numeroCliente != null &amp;&amp; rowData.numeroCliente != &quot;&quot;) {
                            var url = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$expand=zonaResideNavigation($select=secuencialCantonNavigation;$expand=secuencialCantonNavigation($select=secuencial,codigoProvincia))&amp;$filter=numeroCliente eq {0}&amp;$select=direccionDomicilio,telefonoDomicilio,celular1,nombreUnido&quot;;
                            
                            $.ajax({
                                url: url.replace(&quot;{0}&quot;, rowData.numeroCliente),
                                dataType: &quot;json&quot;,
                                cache: &quot;false&quot;,
                                success: function (result) {
                                    if (result.value[0] != null &amp;&amp; result.value[0] != undefined &amp;&amp; result.value[0] != &quot;&quot;) {
                                        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(result.value[0].nombreUnido);
                                        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(result.value[0].telefonoDomicilio);
                                        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(result.value[0].celular1);
                                        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(result.value[0].direccionDomicilio);
                                        codProvinciaEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.codigoProvincia.trim()
                                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(codProvinciaEmpresa);
                                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                                        codCantonEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.secuencial;
                                        CargaCantonEmpresa(codProvinciaEmpresa);
                                        
                                    }
                                }
                            });
                        }
                    }
                });
            });
            //Datepicker fecha nacimiento
            $(document).ready(function () {
                $(function () {
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker fecha de emisión
                $(function () {
                    $(&quot;#txtFechaEmision&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        disabled: true
                    });
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker Fecha Inicio Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });


                //Datepicker Fecha Fin Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });
            });

            //Función que controla tooltip de validación.
            $(document).ready(function () {
                //*************** Para tooltip personalizado *******************
                $(&quot; , &quot;'&quot; , &quot;.masterTooltip&quot; , &quot;'&quot; , &quot;).hover(function () {
                    // Hover over code
                    var title = $(this).attr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;);
                    $(this).data(&quot; , &quot;'&quot; , &quot;tipText&quot; , &quot;'&quot; , &quot;, title).removeAttr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;&lt;p class=&quot;tooltip&quot;>&lt;/p>&quot; , &quot;'&quot; , &quot;)
                    .text(title)
                    .appendTo(&quot; , &quot;'&quot; , &quot;body&quot; , &quot;'&quot; , &quot;)
                    .fadeIn(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
                }, function () {
                    // Hover out code
                    $(this).attr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;, $(this).data(&quot; , &quot;'&quot; , &quot;tipText&quot; , &quot;'&quot; , &quot;));
                    $(&quot; , &quot;'&quot; , &quot;.tooltip&quot; , &quot;'&quot; , &quot;).remove();
                }).mousemove(function (e) {
                    var mousex = e.pageX + 30; //Get X coordinates
                    var mousey = e.pageY - 65 //Get Y coordinates
                    $(&quot; , &quot;'&quot; , &quot;.tooltip&quot; , &quot;'&quot; , &quot;)
                    .css({
                        top: mousey,
                        left: mousex,
                        color: &quot; , &quot;'&quot; , &quot;#105D99&quot; , &quot;'&quot; , &quot;,
                        background: &quot; , &quot;'&quot; , &quot;#AEC63C url(&quot;../Images/Info_x24.png&quot;) no-repeat left&quot; , &quot;'&quot; , &quot;,
                        //opacity: &quot; , &quot;'&quot; , &quot;0.9&quot; , &quot;'&quot; , &quot;,
                        //filter: &quot; , &quot;'&quot; , &quot;alpha(opacity = 90)&quot; , &quot;'&quot; , &quot;,
                        borderColor: &quot; , &quot;'&quot; , &quot;transparent&quot; , &quot;'&quot; , &quot;,
                        fontSize: &quot; , &quot;'&quot; , &quot;0.95em&quot; , &quot;'&quot; , &quot;,
                        paddingLeft: &quot; , &quot;'&quot; , &quot;25px&quot; , &quot;'&quot; , &quot;,
                        boxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        MozBoxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        WebkitBoxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        zIndex: &quot; , &quot;'&quot; , &quot;999999&quot; , &quot;'&quot; , &quot;
                    })
                });
            });

            $(document).ready(function () {
                //Se inicia con la lista de clientes oculta.
                var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
                divGrdClientesHomonimos.style.display = &quot;none&quot;;
            });


            //Función que mantiene visible el div de menu
            $(document).ready(function () {
                var $sidebar = $(&quot;#divMenuIz&quot;),
                $window = $(window),
                offset = $sidebar.offset(),
                topPadding = 15;

                $window.scroll(function () {
                    if ($window.scrollTop() > offset.top) {
                        $sidebar.addClass(&quot; , &quot;'&quot; , &quot;fixed&quot; , &quot;'&quot; , &quot;);
                    } else {
                        $sidebar.removeClass(&quot; , &quot;'&quot; , &quot;fixed&quot; , &quot;'&quot; , &quot;);
                    }
                });
            });
            //Acciones que deben ejecutarse al iniciar.
            $(document).ready(function () {

                if (codigoUsuarioActual.indexOf(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;))
                    codigoUsuarioActual = codigoUsuarioActual.replace(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ñ&quot; , &quot;'&quot; , &quot;)
                //Se cambia la altura del menu dinamicamente
                divMenu = document.getElementById(&quot; , &quot;'&quot; , &quot;divMenu&quot; , &quot;'&quot; , &quot;);
                divMenu.style.height = &quot;600px&quot;;
                $(&quot; , &quot;'&quot; , &quot;#divPaisText&quot; , &quot;'&quot; , &quot;).hide();
                //Se personaliza botones de popups.
                $.messager.defaults.ok = &quot; , &quot;'&quot; , &quot;Aceptar&quot; , &quot;'&quot; , &quot;;
                $.messager.defaults.cancel = &quot; , &quot;'&quot; , &quot;Cancelar&quot; , &quot;'&quot; , &quot;;

                $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog({
                    title: &quot; , &quot;'&quot; , &quot;CLIENTES HOMÓNIMOS&quot; , &quot;'&quot; , &quot;,
                    position: &quot; , &quot;'&quot; , &quot;center&quot; , &quot;'&quot; , &quot;,
                    draggable: true,
                    collapsible: false,
                    minimizable: false,
                    maximizable: false,
                    resizable: true,
                    closable: false,
                    width: 650,
                    height: 310,
                    closed: false,
                    cache: false,
                    modal: true
                });
                $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);

                if (&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot; &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot; &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot;) {
                    $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                }


                //Para acordeón.
                $(&quot;#h1Datos&quot;).click(function (e) {

                    if ($(&quot;#divDatosCliente&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Direccion&quot;).click(function (e) {
                    if ($(&quot;#divDireccion&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Ocupacion&quot;).click(function (e) {
                    if ($(&quot;#divOcupacion&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1SituacionEconomica&quot;).click(function (e) {
                    if ($(&quot;#divSituacionEconomica&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Referencias&quot;).click(function (e) {
                    if ($(&quot;#divReferencias&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Otros&quot;).click(function (e) {
                    if ($(&quot;#divOtros&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1GeoDomicilio&quot;).click(function (e) {
                    if ($(&quot;#divGeoDomicilio&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        GeoDomicilio(&quot;/OSCUS.Aplicacion/&quot;);
                    }
                });

                $(&quot;#h1ManoDerecha&quot;).click(function (e) {
                    if ($(&quot;#divManoDerecha&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).hide();
                    }
                    $(&quot;#h1ManoIzquierda&quot;).removeClass(&quot;boldFont&quot;);
                });

                $(&quot;#h1ManoIzquierda&quot;).click(function (e) {
                    if ($(&quot;#divManoIzquierda&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).hide();
                    }
                    $(&quot;#h1ManoDerecha&quot;).removeClass(&quot;boldFont&quot;);
                });

                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();

                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).click(function () {
                    var el = $(this).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;);
                    isVisible = el.is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) ? el.slideUp() : el.slideDown();
                });

                //Se inicia con la sección de datos cliente abierta.
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);

                var urlFechaSistema = &quot;/OSCUS.Aplicacion/odata/Calendarios?$format=json&amp;$top=1&amp;$filter=estaCerrado eq 1&amp;$select=fechaSistema&amp;$orderby=fechaSistema asc&quot;;
                
                $.ajax({
                    url: urlFechaSistema,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultFechaSistema) {
                        if (resultFechaSistema.value[0] != null &amp;&amp; resultFechaSistema.value[0] != &quot;&quot; &amp;&amp; resultFechaSistema.value[0] != undefined)
                            fechaSistema = resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[2] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[1] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[0];
                    }
                });
                //Se da formato a combosBox
                var config = {
                    &quot; , &quot;'&quot; , &quot;.chosen-select&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-deselect&quot; , &quot;'&quot; , &quot;: { allow_single_deselect: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-no-single&quot; , &quot;'&quot; , &quot;: { disable_search: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-no-results&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot; , &quot;'&quot; , &quot;Oops, nothing found!&quot; , &quot;'&quot; , &quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-width&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoDocumento&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;44%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivil&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;55%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivilPasaporte&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;57%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-educacion&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;75%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-establecimiento&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;65%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigenRecursos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;150px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigen&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-nacionalidad&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisobligaciontributaria&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisobligaciontributaria2&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisResidencia&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-provinciaReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-cantonReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parroquiaReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoVivienda&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;200px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-origenIngresos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;65%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-ocupacion&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;74%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-profesionSBS&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;50%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomico&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;81%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividad&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;77%&quot; },

                    &quot; , &quot;'&quot; , &quot;.chosen-select-propositoRelacion&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;20%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-condicionFirmas&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;47%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parentescoVinculo&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;37%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-causalVinculo&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;48%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomicoSecundario&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividadSecundaria&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoCuenta&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoCuenta1&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigenDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; }, //desde aqui para Nuevo Cliente Datos Basicos
                    &quot; , &quot;'&quot; , &quot;.chosen-select-provinciaResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoDocumentoDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;52%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivilDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-educacionDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoViviendaDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomicoDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividadDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-cantonResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parroquiaResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                }

                for (var selector in config) {
                    $(selector).chosen(config[selector]);
                }
                document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).value = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;;
                $(&quot;#cbTipoDocumento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus();

                IpCliente = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                //Se ingresan datos en comboBox de Paises
                var urlPaises = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
                
                $.ajax({
                    url: urlPaises,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultPaises) {
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigen&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigenDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigenRecursos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);//
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisResidencia&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultPaises.value, function (key, value) {
                            $(&quot;#cbPaisOrigen&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisOrigenDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisOrigenRecursos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisResidencia&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisEmpresa&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisDI&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            if (value.esParaisoFiscal == 0) arrPaises.push(value.codigo);
                        });
                        $(&quot;#cbPaisOrigen&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                       // CambiarEsNacional(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;));
                        $(&quot;#cbPaisOrigen&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenRecursos&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisOrigenRecursos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisResidencia&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisResidencia&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarControles(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisResidencia&quot; , &quot;'&quot; , &quot;));
                        HabilitarNacionalidad2(document.getElementById(&quot; , &quot;'&quot; , &quot;cbNacionalidad1&quot; , &quot;'&quot; , &quot;));
                        HabilitarNacionalidad3(document.getElementById(&quot; , &quot;'&quot; , &quot;cbNacionalidad2&quot; , &quot;'&quot; , &quot;));
                        HabilitarTributaExterior(document.getElementById(&quot; , &quot;'&quot; , &quot;chkTributaExterior&quot; , &quot;'&quot; , &quot;));
                        HabilitarTributaExterior2(document.getElementById(&quot; , &quot;'&quot; , &quot;chkTributaExterior2&quot; , &quot;'&quot; , &quot;));
                        $(&quot;#cbPaisEmpresa&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarDatosTrabajo(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisEmpresa&quot; , &quot;'&quot; , &quot;));
                        HabilitarEsRelacionPersonaPolitica(document.getElementById(&quot; , &quot;'&quot; , &quot;chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;));
                        CargaNacionalidad();
                        CargaPaisObligacionTributaria();
                        $(&quot;#cbPaisDI&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de provincias
                var urlProvincias = &quot;/OSCUS.Aplicacion/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlProvincias,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultProvincias) {
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaResideDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultProvincias.value, function (key, value) {
                            $(&quot;#cbProvinciaReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbProvinciaPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbProvinciaResideDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbProvinciaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaResideDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de ocupación
                var url = &quot;/OSCUS.Aplicacion/odata/Profesiones?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbOcupacion&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbOcupacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de grupo económico y grupo económico secundario
                var url = &quot;/OSCUS.Aplicacion/odata/GruposActividadesEconomicas?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomicoSecundario&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomicoDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbGrupoEconomico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbGrupoEconomicoSecundario&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + &quot;N&quot; + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + &quot;NINGUNO&quot; + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de profesión SBS
                var url = &quot;/OSCUS.Aplicacion/odata/ProfesionesSBS?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbProfesionSBS&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
                //}
            });
            CargaListaGrupoEtnico();
        });




        //Funciones de navegación de menu izquierda.
        function fnNavegar(opcion) {
            if ($(&quot; , &quot;'&quot; , &quot;#divPrinterDisabled&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                if (opcion == 3) {
                    if ($(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot;) {
                        $.ajax({
                            url: &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/GrabaVariablesSesion&quot; , &quot;'&quot; , &quot;,
                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                        data: JSON.stringify({
                            codigo: $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                            nombre: $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                            apellido: $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                        }),
                        dataType: &quot;json&quot;,
                        contentType: &quot;application/json; charset=utf-8&quot;,
                        success: function (data) {
                            
                            //Se redirige a pantalla de Datos Generales de Cliente.
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Cotizador?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt($(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim()));
                            },
                        error: ajaxError
                    });
                    }
                    else {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos obligatorios&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe ingresar: identificación, nombre y apellido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                            //Se habilita pestaña de datos.
                            $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                            DatosAbierto();
                            //Se hace focus en campo vacío.
                            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim() == &quot;&quot; ? $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus() : $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim() == &quot;&quot; ? $(&quot;#txtApellidos&quot;).focus() : $(&quot;#txtNombres&quot;).focus();
                        });
                    }
                }
                else {
                    $.fn.window.defaults.closable = false;
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Opción incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero debe guardar la información del cliente!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                }

            }
            else if ($(&quot; , &quot;'&quot; , &quot;#divPrinterEnabled&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                if (opcion == 1) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGenerales?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 2) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosVista?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 3) {
                    if (&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; == &quot; , &quot;'&quot; , &quot;True&quot; , &quot;'&quot; , &quot;) {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite crear sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;);
                return;
            }
            if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No puede ser titular un menor de edad.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                return;
            }
            else if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) > mayoriaEdad &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Precaución&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                return;
            }
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 4) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Prestamos?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 5) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 6) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 7) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Consolidado?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else {
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;No disponible&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Opción no disponible.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { location.reload(true); });
                }
}
}


//Función que verifica la educación y según eso cambia el estado de requerido en Establecimiento.
function VerificaEducacion(cb) {
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(0);
    $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).val(0);

    if (cb.value == &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;G&quot; , &quot;'&quot; , &quot;) {

        $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).val(0);
        if (cb.value != &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).show(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
        }
        else {

            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
        }
        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
    }
    else {
        if ($(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).val() != &quot;&quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            //MDJR Solo Si es menor de edad mostrar establecimiento
            if (calcAge($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).show(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);

            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
            //Se verifica si el comboBox ya está lleno para no volverlo a llenar.
            if (document.getElementById(&quot;cbEstablecimiento&quot;).options.length &lt; 2) {
                
                //DisplayBusy(true);
                //Se ingresan datos en comboBox de establecimiento
                var urlEstablecimiento = &quot;/OSCUS.Aplicacion/odata/Establecimientos?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&amp;$select=codigo,nombre&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlEstablecimiento.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultEstablecimiento) {
                        if (resultEstablecimiento.value.length > 0) {
                            var establecimiento = $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;);
                            establecimiento.empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            for (i = 0; i &lt; resultEstablecimiento.value.length; i++) {
                                establecimiento.append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + resultEstablecimiento.value[i].codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + resultEstablecimiento.value[i].nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            }
                            establecimiento.chosen().trigger(&quot;chosen:updated&quot;);
                        }
                        //DisplayBusy(false);
                        
                    }
                });
            }
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $(&quot;#cbEducacion&quot;).val(0);
            $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $.messager.alert(&quot; , &quot;'&quot; , &quot;Provincia no seleccionada&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero debe seleccionar una provincia de residencia!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;);
            });
        }
    }
}


function ValidaOrigenIngresos(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) {
        //Se borran los datos ingresados siempre que se cambie de opción
        $(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;); // &quot;checked&quot;
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).hide();

        if (cb.value == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
    }
}

//Función que valida la ocupación de un empleado para esquema de datos empresa.
function ValidaOcupacion(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOrigenIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOrigenIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
        //Se borran los datos ingresados siempre que se cambie de opción
        $(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;); // &quot;checked&quot;
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtPaisEstadoEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);


        if (cb.value == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }

        if (cb.value == &quot; , &quot;'&quot; , &quot;370&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;568&quot; , &quot;'&quot; , &quot;) {
            var origenIngresos;
            switch (cb.value) {
                case &quot; , &quot;'&quot; , &quot;370&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S01&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;H&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S02&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;568&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S03&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;;
                    $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
                    break;
                case &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S04&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S05&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;;
                    break;
            }
            $(&quot;#cbGrupoEconomico&quot;).val(codGrupoEconomico);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot;#cbOrigenIngresos&quot;).val(origenIngresos);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;));
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            //if (valorIngresaUsuario) {
            //    $(&quot;#cbGrupoEconomico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //    $(&quot;#cbOrigenIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //}

            $(&quot;#cbGrupoEconomico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot;#cbOrigenIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);


            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;));
        }
}

//Función que carga cantones de datos empresa.
function CargaCantonEmpresa(codProvinciaEmpresa) {
    $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
    if (codProvinciaEmpresa != &quot;&quot; &amp;&amp; codProvinciaEmpresa != &quot;undefined&quot;) {

        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvinciaEmpresa),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonPublico&quot;).val(codCantonEmpresa);
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que controla que no se ingrese de forma manual datos.
function controlIngresoFecha(e) {
    return false;
}

//Función que calcula la edad en formato &quot;dd/mm/yy&quot;
//function calcAge(dateString) {
//    //transformamos de día/mes/año a año/mes/dia
//    var dobConverted = toIsoDate(dateString);
//    var birthday = +new Date(dobConverted);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

function TimeSpanAniosMesesDias(fechaEmision) {
    var anio = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]);
    var mes = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1]);
    var dia = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0]);
    var anioActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]);
    var mesActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1]);
    var diaActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0]);
    var diasFebrero = 28;
    var diasPrestados = 31;
    var aniosCumplidos;
    var mesesCumplidos;
    var diasCumplidos;
    if (anio % 4 == 0) {
        if (anio % 100 == 0) {
            if (anio % 400 == 0)
                diasFebrero = 29
        }
        else
            diasFebrero = 29
    }
    if (mes % 2 == 0)
        diasPrestados = 30;
    if (mes == 8)
        diasPrestados = 31
    if (mes == 2)
        diasPrestados = diasFebrero
    if (diaActual &lt; dia) {
        diasCumplidos = (diaActual + diasPrestados) - dia;
        mes += 1;
    }
    else
        diasCumplidos = diaActual - dia;

    if (mesActual &lt; mes) {
        mesesCumplidos = (mesActual + 12) - mes;
        anio += 1;
    }
    else
        mesesCumplidos = mesActual - mes;
    aniosCumplidos = anioActual - anio;
    var arrTimeSpan = new Array();
    arrTimeSpan.push({ anios: aniosCumplidos, meses: mesesCumplidos, dias: diasCumplidos });
    return arrTimeSpan;
}

//function calcAgeDatosBasicos(dateString) {
//    var birthday = +new Date(dateString);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

////Convierte fecha de dd/mm/yyyy a yyyy/mm/dd
//function toIsoDate(o_date) {
//    var arrDate = o_date.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;);
//    var convDate = arrDate[2] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + arrDate[1] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + arrDate[0];
//    return convDate;
//}

//Función que realiza acciones según la provincia que se seleccione
function ValidaProvincia(cb) {

    $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).val(0);
    $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesor&quot; , &quot;'&quot; , &quot;).innerHTML = &quot;&quot;;
    document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoAsesor&quot; , &quot;'&quot; , &quot;).value = &quot;&quot;;
    document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoOficina&quot; , &quot;'&quot; , &quot;).value = &quot;&quot;;

    $(&quot;#cbEducacion&quot;).val(0);
    $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
    $(&quot;#cbEstablecimiento&quot;).val(0);
    $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
        }

        //Se ingresan datos en comboBox de nacionalidades.
        function CargaNacionalidad() {
            //Se ingresan datos en comboBox de nacionalidades
            var urlNacionalidades = &quot;/OSCUS.Aplicacion/odata/nacionalidad?$format=json&amp;$orderby=DESCRIPCION&quot;;
            
            $.ajax({
                url: urlNacionalidades,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultNacionalidades) {
                    
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad1&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad2&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>Nacionalidad 2..&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad3&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>Nacionalidad 3..&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultNacionalidades.value, function (key, value) {
                        $(&quot;#cbNacionalidad1&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbNacionalidad2&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbNacionalidad3&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });

                    $(&quot;#cbNacionalidad1&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad2&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad3&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        //Se ingresan datos en comboBox paises con obligacion tributaria.
        function CargaPaisObligacionTributaria() {
            //Se ingresan datos en checklistbox de paises tributa
            var urlPaisTributa = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&quot;;
            
            $.ajax({
                url: urlPaisTributa,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultPaisTributa) {
                    
                    $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria2&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultPaisTributa.value, function (key, value) {
                        $(&quot;#chkPaisObligacionTributaria&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#chkPaisObligacionTributaria2&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });
                    $(&quot;#chkPaisObligacionTributaria&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    $(&quot;#chkPaisObligacionTributaria2&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        function HabilitarCiudadNacmientoExt(cb) {
            if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
                esCRSCiudadNacmientoExt = false;
                $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;none&quot; , &quot;'&quot; , &quot;);
            }
            else {
                    ValidacionCRS(cb.value.trim(), function (data) {
                        
                        if (data.value.length > 0) {
                            esCRSCiudadNacmientoExt = true;
                            $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;inline-block&quot; , &quot;'&quot; , &quot;)
                        }
                        else {
                            esCRSCiudadNacmientoExt = false;
                            $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;none&quot; , &quot;'&quot; , &quot;);
                        }
                        });
                }
                VerificaTributaExterior();
       }

function HabilitarControles(cb) {
    if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
        esCRSControles = false;
        $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
        $(&quot;#grupoExterior&quot;).hide();
        $(&quot;#txtPaisEstado&quot;).hide();
        $(&quot;#txtNumCasaExterior&quot;).hide();
        $(&quot;#txtCodigoPostal&quot;).hide();
        $(&quot;.td_extranjero&quot;).hide()
        $(&quot;.td_ecuador&quot;).show();
        $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
        $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
    }
    else {

        ValidacionCRS(cb.value.trim(), function (data) {
            
            if (data.value.length > 0) {
                esCRSControles = true;
                $(&quot;#txtDireccionDomicilioExterior&quot;).show();
                $(&quot;#grupoExterior&quot;).show();
                $(&quot;#txtPaisEstado&quot;).show();
                $(&quot;#txtNumCasaExterior&quot;).show();
                $(&quot;#txtCodigoPostal&quot;).show();
                $(&quot;.td_extranjero&quot;).show();
                $(&quot;.td_ecuador&quot;).hide();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, true).change().attr(&quot;disabled&quot;, true);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;inline-block&quot;);
            }
            else
            {
                esCRSControles = false;
                $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
                $(&quot;#grupoExterior&quot;).hide();
                $(&quot;#txtPaisEstado&quot;).hide();
                $(&quot;#txtNumCasaExterior&quot;).hide();
                $(&quot;#txtCodigoPostal&quot;).hide();
                $(&quot;.td_extranjero&quot;).hide()
                $(&quot;.td_ecuador&quot;).show();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
            }
         });
    }
    ObtenerPrefijosExterior(cb.value);
    VerificaPF()
}

        function HabilitarNacionalidad2(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad2&quot;).show();
            }
            else {
                $(&quot;.nacionalidad2&quot;).hide();
            }
            VerificaTributaExterior();
        }



        function HabilitarNacionalidad3(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad3&quot;).show();
            }
            else {
                $(&quot;.nacionalidad3&quot;).hide();
            }
            VerificaTributaExterior();
        }

        function HabilitarEsRelacionPersonaPolitica(chk) {
            if (chk.checked) {
                $(&quot;.relacionPersonaPolitica&quot;).show();
            }
            else {
                $(&quot;.relacionPersonaPolitica&quot;).hide();
            }
        }

        function HabilitarDatosTrabajo(cb) {
            if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
                esCRSDatosEmpresa = false;
                $(&quot;#cbProvinciaPublico_chosen&quot;).show();
                $(&quot;#cbCantonPublico_chosen&quot;).show();
                $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                $(&quot;.td_paisexterior&quot;).hide();
                $(&quot;.td_paisecuador&quot;).show();
                $(&quot;#txtTelefonoExterior&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            }
            else {
                ValidacionCRS(cb.value.trim(), function (data) {
                    
                    if (data.value.length > 0) {
                        esCRSDatosEmpresa = true;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).show();
                        $(&quot;.td_paisexterior&quot;).show();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoPublico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    }
                    else {
                        esCRSDatosEmpresa = false;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                        $(&quot;.td_paisexterior&quot;).hide();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoExterior&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    }
                });
            }
            ObtenerPrefijosExterior(cb.value);
            VerificaTributaExterior();
        }

        function HabilitarTributaExterior(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).show();
                $(&quot;.preguntatributaexterior2&quot;).show();
                $(&quot;.tributaexterior&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).hide();
                $(&quot;.preguntatributaexterior2&quot;).hide();
                $(&quot;.tributaexterior&quot;).hide();
            }
        }
        function HabilitarTributaExterior2(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).show();
                $(&quot;.tributaexterior2&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).hide();
                $(&quot;.tributaexterior2&quot;).hide();
            }
        }

function VerificaPF() {
    if ($.inArray($(&quot;#cbPaisResidencia&quot;).val().trim(), arrPaises) > -1 ||
        $.inArray($(&quot;#cbPaisOrigen&quot;).val().trim(), arrPaises) > -1) {
        //DESACTIVO GUARDADO
        $.messager.alert(&quot; , &quot;'&quot; , &quot;S/C en paraiso fiscal&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se puede iniciar la Relación Contractual por pertenecer a Paraiso Fiscal&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).hide();
    }
}


//Función que realiza acciones según la provincia que se seleccione (empleado público)
function ValidaProvinciaPublico(cb) {
    $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que realiza acciones según el cantón que se seleccione
function ValidaCanton(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Parroquias
        var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} and activo&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultParroquias) {
                $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultParroquias.value, function (key, value) {
                    $(&quot;#cbParroquiaReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencialGrupoNGN + &quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).val(0);
    }
        }

        //Función que realiza acciones según el cantón que se seleccione en trabajo
        function ValidaCantonPublico(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                
                //Se ingresan datos en comboBox de Parroquias
                var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} &amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultParroquias) {
                        $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultParroquias.value, function (key, value) {
                            $(&quot;#cbParroquiaPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbParroquiaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
            }
            else {
                $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).val(0);
            }
        }

//Función que asigna a un asesor dependiendo de la parroquia escogida en el popup Datos Basicos Cliente Nuevo.
function AsignarAsesorDatosBasicos(cb) {
    document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesorDatosBasicos&quot; , &quot;'&quot; , &quot;).innerHTML = &quot;&quot;;
}

//Función que realiza acciones según el grupo económico que se seleccione
function ValidaGrupoEconomico(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Paises
        var url = &quot;/OSCUS.Aplicacion/odata/ActividadesEconomicas?$format=json&amp;$expand=ActividadesEconomicasNivel4($expand=IndustriasNivelDos($expand=ClasificacionesCreditos))&amp;$filter=codigoRelacionado eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                for (var i = 0; i &lt; result.value.length; i++) {
                    for (var j = 0; j &lt; result.value[i].ActividadesEconomicasNivel4.length; j++) {
                        for (var k = 0; k &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos.length; k++) {
                            for (var l = 0; l &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos.length; l++) {
                                $(&quot;#cbClasificacionActividad&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            }
                        }
                    }
                }
                if (cb.value == &quot; , &quot;'&quot; , &quot;S01&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S02&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S03&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S04&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S05&quot; , &quot;'&quot; , &quot;)
                    $(&quot;#cbClasificacionActividad&quot;).val(cb.value);
                $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}


function ValidaEstadoCivil(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; cb.value != &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || cb.value == &quot; , &quot;'&quot; , &quot;D&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;
        }
        else {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true)
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyuge&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                CargarNombreConyuge(numeroClienteConyuge);
        }
    }
}

function ValidaEstadoCivilPasaporte(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;); //Se limpia para que el momento de volver a elegir la fecha de nacimiento muestre lo respectivo
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; cb.value != &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtCedulaConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || cb.value == &quot; , &quot;'&quot; , &quot;D&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;

        }
        else {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#txtCedulaConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#txtNombreConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //$(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyugePasaporte&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                CargarNombreConyuge(numeroClienteConyuge);
            }
        }
        $(&quot;#cbEstadoCivil&quot;).val(cb.value);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
}

function ActivaDesactivaIdentificacion(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot; , &quot;'&quot; , &quot;#trBloqueB&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueC&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueD&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#colChkMenorDeEdad&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;checked&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#imgBuscarPersonaRegistroCivil&quot; , &quot;'&quot; , &quot;).hide();
        if (cb.value == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#imgBuscarPersonaRegistroCivil&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#trBloquePasaporte&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot;#txtIdentificacion&quot;).focus();
            field = $(&quot;#txtEmail&quot;);
            $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#colChkMenorDeEdad&quot; , &quot;'&quot; , &quot;).show();
            consultarRegistroCivil = true;
        }
        else {
            ActivaControlesPasaporte();
        }


        if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtIdentificacion&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;readonly&quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente luego de grabar el cliente.&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Cédula&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Nombre&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtFechaNacimiento&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        }
        else {
            $(&quot;#txtIdentificacion&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;readonly&quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot;Ingrese: Documento de identidad del cliente&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Documento&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);

            $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        }
        $(&quot;#txtIdentificacion&quot;).focus();
        $(&quot;#txtIdentificacion&quot;).focus();
    }

}

    function ActivaControlesPasaporte() {
        $(&quot; , &quot;'&quot; , &quot;#trBloquePasaporte&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).show();
        field = $(&quot;#txtEmailPasaporte&quot;);
        consultarRegistroCivil = false;
    }


jQuery(function ($) {
    //Funcionalidad de click en boton Cancelar.
    $(&quot;#btnCancelar&quot;).click(function () {
        $.fn.window.defaults.closable = false;
        $.messager.confirm(&quot; , &quot;'&quot; , &quot;Confirmación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Está seguro que desea cancelar la creación de un nuevo cliente?&quot; , &quot;'&quot; , &quot;, function (r) {
            if (r) {
                window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;;
            }
        });
    });
});


//Acciones a ejecutarse al abrir el div de Datos.
function DatosAbierto() {
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Dirección.
function DireccionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Direccion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Ocupación.
function OcupacionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Ocupacion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Situacion Economica.
function SituacionEconomicaAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1SituacionEconomica&quot;).addClass(&quot;boldFont&quot;);
}


//Acciones a ejecutarse al abrir el div de Otros.
function OtrosAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Otros&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Otros.
function ReferenciasAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Referencias&quot;).addClass(&quot;boldFont&quot;);
}

//Funcion que realiza acciones necesarias al dar click en checkbox de convenio institucional
function VerificaConvenio(chk) {
    if (chk.checked) {
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;unselectAll&quot; , &quot;'&quot; , &quot;);

        $(&quot;#divConvenioInstitucional&quot;).show();

        //Se cargan los datos en grid de convenio.
        
        var urlConvenioReemplazar = &quot;/OSCUS.Aplicacion/odata/ConvenioCrediNomina?$format=json&amp;$expand=numeroClienteNavigation($select=codigo,nombreUnido;$expand=asesorNegociosNavigation($select=codigoUsuarioNavigation;$expand=codigoUsuarioNavigation($select=nombre)))&amp;$filter=estaActivo eq 0&amp;$select=secuencial,numeroCliente&amp;$orderby=numeroClienteNavigation/nombreUnido&quot;;
        var arrConvenio = new Array();
        $.ajax({
            url: urlConvenioReemplazar,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                
                if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                    for (var i = 0; i &lt; result.value.length; i++) {
                        arrConvenio.push({ secuencial: result.value[i].secuencial, numeroCliente: result.value[i].numeroCliente, codigo: result.value[i].numeroClienteNavigation.codigo, nombreUnido: result.value[i].numeroClienteNavigation.nombreUnido, nombre: result.value[i].numeroClienteNavigation.asesorNegociosNavigation.codigoUsuarioNavigation.nombre });
                    }
                    $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrConvenio);
                    $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).focus();
                }
                else {
                    //Se muestra mensaje informativo de dato no encontrado.
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Convenio institucional no encontrado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha econtrado ningún convenio institucional!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#divConvenioInstitucional&quot;).hide(); });
                }
            }
        });
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;unselectAll&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Nombre o razón social de empleador&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Dirección&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Teléfono&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Teléfono Exterior&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Celular&quot; , &quot;'&quot; , &quot;);

        $(&quot;#divConvenioInstitucional&quot;).hide();
    }
}

//Función que retorna el valor del item escogido en grid de convenio institucional.
function getSelected() {
    var row = $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;getSelected&quot; , &quot;'&quot; , &quot;);
    if (row) {
        return row.secuencial;
    }
    else {
        return &quot;&quot;;
    }
}

//Función que valida la fecha de nacimiento para controlar ciertos campos.
function ValidarFechaNacimiento(fechaNacimiento) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) { //Para pasaporte primero debe ingresar el estado civil
        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero ingrese el Estado civil&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivilPasaporte&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;);
        return;
    }

    if (calcAge(fechaNacimiento.value) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
        // $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); cuando se actualizaba la fecha de nacimiento se borraban
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Cédula&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

        //$(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); cuando se actualizaba la fecha de nacimiento se borraban
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Nombre&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).hide();

        DesabilitaApoderado();
    }
    else {

        $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        //$(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

        $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);

        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).show();

        HabilitaApoderado();

        //////nueva carga//////
        //abro div de se
        $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
        //cargo datos
        ObtenerItemsEconomicosCliente(0);
        ObtenerItemsPatrimonialesCliente(0);
        //cierro div se
        $(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);
        /////fin nueva carga////

        $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;); //MDJR Solo Si es menor de edad mostrar establecimiento

        //metodo anterior de carga, si se pudre el nuevo descomentar
        //$(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);
        //$(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);//Si, tiene que estar 2 veces.
    }
    $(&quot;#cbEducacion&quot;).val(0).chosen().trigger(&quot;chosen:updated&quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(0).chosen().trigger(&quot;chosen:updated&quot;);
}

//Función que valida la fecha emisión e ingresa automáticamente la fecha caducidad.
function ValidaFechaEmision(fechaEmision) {
    if (fechaEmision.value != &quot;&quot; &amp;&amp; fechaEmision.value != null &amp;&amp; fechaEmision.value != undefined) {
        var tiempoTranscurrido = TimeSpanAniosMesesDias(fechaEmision.value);
        //if (tiempoTranscurrido[0].anios &lt; 2 || (tiempoTranscurrido[0].anios == 2 &amp;&amp; tiempoTranscurrido[0].meses == 0 &amp;&amp; tiempoTranscurrido[0].dias == 0)) {
        if (tiempoTranscurrido[0].anios &lt; 2) {
            var anio = parseInt(fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]) + 2;
            var fechaCaducidad = fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + anio;
            $(&quot; , &quot;'&quot; , &quot;#txtFechaCaducidad&quot; , &quot;'&quot; , &quot;).val(fechaCaducidad);
        }
        else {
            $(&quot;#txtFechaCaducidad&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            var mensajeCaducidad;
            var mensajeAniosCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            var mensajeMesesCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            var mensajeDiasCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].anios >= 2)
                mensajeAniosCaducidad = tiempoTranscurrido[0].anios + &quot; , &quot;'&quot; , &quot; años&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].meses != 0)
                mensajeMesesCaducidad = tiempoTranscurrido[0].meses + &quot; , &quot;'&quot; , &quot; meses&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].dias != 0)
                mensajeDiasCaducidad = tiempoTranscurrido[0].dias + &quot; , &quot;'&quot; , &quot; dias&quot; , &quot;'&quot; , &quot;;
            if (mensajeAniosCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeAniosCaducidad + &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;;
            if (mensajeMesesCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeCaducidad + mensajeMesesCaducidad + &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;;
            if (mensajeDiasCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeCaducidad + mensajeDiasCaducidad;
            $.fn.window.defaults.closable = false;
            $.messager.alert(&quot; , &quot;'&quot; , &quot;Fecha inválida&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Según la fecha ingresada han transcurrido: &quot; , &quot;'&quot; , &quot; + mensajeCaducidad + &quot; , &quot;'&quot; , &quot; y por tanto el poder está caducado. (Tiempo de validez máx. 2 años)&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                $(&quot;#txtFechaEmision&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                $(&quot;#txtFechaEmision&quot;).focus();
            });
            return;
        }

    }
}

var datosCalculoIngresos = {
    ingresos: ko.observable(),
    ingresosAdicionales: ko.observable()
};
datosCalculoIngresos.totalIngresos = ko.dependentObservable(function () {
    return (this.ingresos() - this.ingresosAdicionales()).toFixed(2);
}, datosCalculoIngresos);
ko.applyBindings(datosCalculoIngresos);


function AbrirVentanaClientesHomonimos() {
    $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;open&quot; , &quot;'&quot; , &quot;);
}

function CierraClientesHomonimos() {
    $.fn.window.defaults.closable = false;
    $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);
}




function ValidaIngreso(valorIngresado) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; valorIngresado.value.trim() == &quot;&quot; &amp;&amp; valorIngresado.value.trim() == &quot;undefined&quot;) {
        if (!VerificarNumeroCedula(valorIngresado.value.trim())) {
            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de cédula es incorrecto&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
        }
        else
            ListaControl();
    }

}


function calcularTotalIngresos() {
    if ($(&quot;#txtIngresos&quot;).val() != &quot;&quot; &amp;&amp; $(&quot;#txtIngresosAdicionales&quot;).val() != &quot;&quot;) {
        $(&quot;#txtTotalIngresos&quot;).val(parseFloat(parseFloat($(&quot;#txtIngresos&quot;).val()) + parseFloat($(&quot;#txtIngresosAdicionales&quot;).val())).toFixed(2));
    }
}

function formatNumeroCliente(val, row) {
    var url = &quot;Consolidado?id=&quot;;
    return &quot; , &quot;'&quot; , &quot;&lt;a href=&quot;&quot; , &quot;'&quot; , &quot; + url + encodeStr(Encrypt(row.numeroCliente.toString())) + &quot; , &quot;'&quot; , &quot;&quot;>&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&lt;/a>&quot; , &quot;'&quot; , &quot;;
}

function ImprimirActualizacion() {
    
    var urlRegistraImpresion = &quot;osapi/ServiceCliente.svc/RegistrarImpresionActualizaDatosClientes&quot;;
    $.ajax({
        url: urlRegistraImpresion,
        type: &quot;POST&quot;,
        data: JSON.stringify({
            numeroCliente: numeroClienteGenerado,
            usuarioActualizo: codigoUsuarioActual
        }),
        datatype: &quot;json&quot;,
        contentType: &quot;application/json; charset=utf-8&quot;,
        success: function (resultado) {
            
            $.fn.window.defaults.closable = false;
            if (resultado.Correcto) {
                var identificacion = $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val();

                    $.ajax({
                                    url: &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ImprimeFormularioActualizacionDatos&quot; , &quot;'&quot; , &quot;,
                                    method: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                    contentType: &quot;application/json; charset=utf-8&quot;,
                    data: JSON.stringify({
                        caso: &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;,
                        identificacion: identificacion}),
                    dataType: &quot;text&quot;,
                    success: function (r) {
                        window.open(r);
                    }
                });

            }
            else {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
            }
        },
    });
}

function HabilitarCampos(chk) {
    $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
    if (chk.checked) {
        $(&quot;#cbEstadoCivil&quot;).val(&quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    else {
        $(&quot;#cbEstadoCivil&quot;).val(&quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    ValidaEstadoCivil(document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;));
}

function DeshabilitarConyuge(chk) {
    if (chk.checked) {
        $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
    }
    else {
        $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtCedulaConyuge&quot;).focus();
    }
    numeroClienteConyuge = null;
}

function ObtenerItemsEconomicosCliente(numeroCliente) {
    if (arrIngresos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaIemsEconomicosClientes&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalIngresos = 0;
                    var totalGastos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].tiempoActividad == 1) {
                            totalIngresos += resultado[i].activos;
                            arrIngresos.push(resultado[i]);
                        }
                        else {
                            totalGastos += resultado[i].activos;
                            arrGastos.push(resultado[i]);
                        }
                    }
                    if (arrIngresos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalIngresos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalIngresos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrIngresos);
                    }
                    if (arrGastos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalGastos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalGastos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrGastos);
                    }

                }
            },
        });
    }
}

function ObtenerItemsPatrimonialesCliente(numeroCliente) {
    if (arrActivos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaItemsPatrimonialesCliente&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalActivos = 0;
                    var totalPasivos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].actividadSecundaria == &quot; , &quot;'&quot; , &quot;1&quot; , &quot;'&quot; , &quot;) {
                            totalActivos += resultado[i].activos;
                            arrActivos.push(resultado[i]);
                        }
                        else {
                            totalPasivos += resultado[i].activos;
                            arrPasivos.push(resultado[i]);
                        }
                    }
                    if (arrActivos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalActivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalActivos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrActivos);
                    }
                    if (arrPasivos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalPasivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalPasivos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrPasivos);
                    }
                }
            },
        });
    }
}

function ActivarDesactivarDatosPrimerTrabajo(queProfesion, origenIngresos) {
    //272 -> estudiante, 000 -> ninguna, V->E. Privado, B-> E. publico
    //if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; || (origenIngresos != &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; &amp;&amp; origenIngresos != &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;)) {
    if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
        $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).val(0);
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        //$(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, true);
        if ($(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val() == &quot; , &quot;'&quot; , &quot;01/01/1960&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        }
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha inicio trabajo anterior&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha fin trabajo anterior&quot; , &quot;'&quot; , &quot;);
    }
}

function ActivarFechasInicioFin() {
    if (($(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true)) {
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha inicio trabajo anterior&quot; , &quot;'&quot; , &quot;);


        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha fin trabajo anterior&quot; , &quot;'&quot; , &quot;);
    }
}

function CopiarCargoToDescripcion() {
    $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
}

function CloseWindowRegistroHuellas() {
    $ = jQuery.noConflict();
    if (impresionFormularioPendiente)
        ImprimirActualizacion();
}

function DeshabilitarCodigoDactilar(chk) {
    if (chk.checked) {
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus();
        }


    




                        Clientes
                        Ruta Asesor
                        
                            Simulador CDP
                        
                        
                            Consultar Buro
                        
                        
                        

                        
                            Cerrar sesion
                        
                    NUEVO CLIENTE
    
        
        

        
            
                
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        DATOS CLIENTE HOMÓNIMO
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Estado civil...
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                
                            
                            
                                
                                    
                                        
                                        Instrucción:
                                        
                                            
                                            Sin Estudios
                                            Formación Intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓN DE MADERA.                                                                                                                                                                    SUMINISTRO DE ELECTRICIDAD, GAS, VAPOR Y AIRE ACONDICIONADO.                                                                                                                                            TELECOMUNICACIONES.                                                                                                                                                                                     TRANSPORTE POR VÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo Económico... 
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Actividad Económica...
                                    
                                
                                
                                    
                                        
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                            
                            
                                
                                    
                                        
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        
                                        
                                            
                                        Cantón...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        
                                        
                                    
                                
                            

                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        Asesor:
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                
                            
                        
                    
                
            
        
    
CLIENTES HOMÓNIMOS
    
        
            
                
                    
                        Clientes homónimos encontradosNº Cliente Código Dir. Domicilio Representante 
                            
                                
                                    Nº Cliente
                                    Código
                                    Dir. Domicilio
                                    Representante
                                
                            
                        
.datagrid-cell-c6-numeroCliente{width:52px}
.datagrid-cell-c6-codigo{width:72px}
.datagrid-cell-c6-direccionDomicilio{width:292px}
.datagrid-cell-c6-representantePrincipal{width:72px}

                    
                
            
            
                
                    
                
            
        
    
New Dialog
DI Nombre 
    
        
            DI
            Nombre
         
    

.datagrid-cell-c7-codigo{width:22px}
.datagrid-cell-c7-nombreUnido{width:92px}

Ok INDICIOS CRS (Estandar Común de Reportes)
    
        El socio/cliente presenta indicios de CRS por locual usted debe solicitar evidencia documental como:
        Si el País de nacimiento/Nacionalidad diferente de Ecuador:
        
            Documento de identificación que demuestre la nacionalidad ecuatoriana
            Certificado de renuncia a la nacionalidad
            Abandono de permiso de estado residente
        
        Si el País de residencia diferente de Ecuador/Teléfono de contacto en el exterior
        
            Documento actualizado de servicio básico a nombre del socio/cliente (Luz,agua potable, predio urbano)
            Certificado de residencia expedido por una autoridad u organismo ecuatoriano
            Declaración del impuesto a la renta o formulario 107 en caso de relación de dependencia
        
    
    
        
    
Datos de simulador CDP
                
                    
                    
                    
                
                
                    Procesando...
                
            SimuladorCancelarConsuta buró tarjetas de crédito
                
                    
                    Score
                    
                    Cupo recomendado
                    
                
                
                    Procesando...
                
            ConsultarCancelarSeleccionar oportunidad
                
                    OportunidadesId Tipo persona Oportunidad Tipo Fuente Importe Producto Agencia Propietario Propietario 
                        
                            
                                Id
                                Tipo persona
                                Oportunidad
                                Tipo
                                Fuente
                                Importe
                                Producto
                                Agencia
                                Propietario
                                Propietario
                            
                        
                    
.datagrid-cell-c8-id{width:92px}
.datagrid-cell-c8-Tipo_de_persona{width:77px}
.datagrid-cell-c8-Deal_Name{width:192px}
.datagrid-cell-c8-Type{width:72px}
.datagrid-cell-c8-Lead_Source{width:72px}
.datagrid-cell-c8-Amount{width:72px}
.datagrid-cell-c8-Producto{width:72px}
.datagrid-cell-c8-Agencia{width:52px}
.datagrid-cell-c8-Owner-name{width:72px}
.datagrid-cell-c8-Owner-email{width:72px}

                
                
                    Procesando...
                
            CancelarAnteriorSiguienteEneFebMarAbrMayJunJulAgoSepOctNovDic18231824182518261827182818291830183118321833183418351836183718381839184018411842184318441845184618471848184918501851185218531854185518561857185818591860186118621863186418651866186718681869187018711872187318741875187618771878187918801881188218831884188518861887188818891890189118921893189418951896189718981899190019011902190319041905190619071908190919101911191219131914191519161917191819191920192119221923192419251926192719281929193019311932193319341935193619371938193919401941194219431944194519461947194819491950195119521953195419551956195719581959196019611962196319641965196619671968196919701971197219731974197519761977197819791980198119821983198419851986198719881989199019911992199319941995199619971998199920002001200220032004200520062007200820092010201120122013201420152016201720182019202020212022DoLuMaMiJuViSa      123456789101112131415161718192021222324252627282930      /html[1]/body[1]/div[@class=&quot;panel window messager-window&quot;]/div[@class=&quot;messager-body panel-body panel-body-noborder window-body&quot;]/div[@class=&quot;messager-progress&quot;]/div[@class=&quot;messager-p-bar progressbar&quot;]/div[@class=&quot;progressbar-text&quot;]InformaciónEstamos procesando su solicitud...Estamos procesando su solicitud...&quot;) or . = concat(&quot;
    

        
            
        
    
    
        
            
                
                    Carlos SANTAMARIA SANCHEZ (CCEDENO)
                    Jueves 31 de Marzo de 2022
                
                
                    Menu 
                    
                
                Cerrar sesion
            

        
    
    
        
        
            

    
        
            
                
    //Función que calcula la edad
    function calculaEdad(dateString) {
        var birthday = +new Date(dateString);
        return ~~((Date.now() - birthday) / (31557600000));
    }

    //Funciones de navegación de menu izquierda.
    function fnNavegar(opcion) {
        var tieneRolFraternas;
        var id = getUrlParameter(&quot; , &quot;'&quot; , &quot;id&quot; , &quot;'&quot; , &quot;);
        if (id != null &amp;&amp; id != &quot;&quot; &amp;&amp; id != undefined) {
            
                var urlDatosCliente = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=tipo&quot;;
                $.ajax({
                    url: urlDatosCliente.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultConsultaClientes) {
                        
                        if (opcion == 1) {
                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;)
                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGenerales?id=&quot; , &quot;'&quot; , &quot; + id;
                                else if (resultConsultaClientes.value[0].tipo == &quot;A&quot; || resultConsultaClientes.value[0].tipo == &quot;R&quot;)
                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGeneralesJuridico?id=&quot; , &quot;'&quot; , &quot; + id;
                            }
                        }
                        else if (opcion == 2) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosVista?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 3) {
                            if (codigoUsuarioActual.indexOf(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;))
                                codigoUsuarioActual = codigoUsuarioActual.replace(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ñ&quot; , &quot;'&quot; , &quot;)
                            
                            var urlCodigoRolUsuarioActual = &quot;/OSCUS.Aplicacion/odata/UsuariosRoles?$format=json&amp;$filter=codigoUsuario eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and estaActivo eq 0&amp;$select=codigoRol&quot;;
                                    $.ajax({
                                        url: urlCodigoRolUsuarioActual.replace(&quot;{0}&quot;, codigoUsuarioActual),
                                        dataType: &quot;json&quot;,
                                        cache: &quot;false&quot;,
                                        success: function (resultConsultaCodigoRol) {
                                            
                                            if (resultConsultaCodigoRol.value[0] != null &amp;&amp; resultConsultaCodigoRol.value[0] != &quot;&quot; &amp;&amp; resultConsultaCodigoRol.value[0] != undefined) {
                                                
                                                var urlParametrosInversiones = &quot;/OSCUS.Aplicacion/odata/ParametrosInversiones?$format=json&quot;;
                                                $.ajax({
                                                    url: urlParametrosInversiones,
                                                    dataType: &quot;json&quot;,
                                                    cache: &quot;false&quot;,
                                                    success: function (resultParametrosInversiones) {
                                                        
                                                        if (resultParametrosInversiones.value[0] != null &amp;&amp; resultParametrosInversiones.value[0] != &quot;&quot; &amp;&amp; resultParametrosInversiones.value[0] != undefined) {
                                                            if (resultParametrosInversiones.value[0].rolFraternas.trim() == resultConsultaCodigoRol.value[0].codigoRol.trim())
                                                                tieneRolFraternas = &quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;; //T->True
                                                            else
                                                                tieneRolFraternas = &quot; , &quot;'&quot; , &quot;F&quot; , &quot;'&quot; , &quot;;//T->False
                                                            if (resultConsultaClientes.value[0] != null &amp;&amp; resultConsultaClientes.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientes.value[0] != undefined) {
                                                              if (resultConsultaClientes.value[0].tipo == &quot;C&quot; || resultConsultaClientes.value[0].tipo == &quot;P&quot; || resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                  if (tieneRolFraternas == &quot;T&quot;) {
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite procesar sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                    return;
                                                                }
                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                    
                                                                    var urlDatosClienteNatural = &quot;/OSCUS.Aplicacion/odata/ClientesNaturales?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=fechaNacimiento&quot;;
                                                                    $.ajax({
                                                                        url: urlDatosClienteNatural.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                                                                        dataType: &quot;json&quot;,
                                                                        cache: &quot;false&quot;,
                                                                        success: function (resultConsultaClientesNaturales) {
                                                                            
                                                                            if (resultConsultaClientesNaturales.value[0] != null &amp;&amp; resultConsultaClientesNaturales.value[0] != &quot;&quot; &amp;&amp; resultConsultaClientesNaturales.value[0] != undefined) {
                                                                                var edad = calculaEdad(resultConsultaClientesNaturales.value[0].fechaNacimiento);
                                                                                if (edad &lt; mayoriaEdad) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No puede ser titular un menor de edad.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                                                                                    return;
                                                                                }
                                                                                else {
                                                                                    if (resultConsultaClientes.value[0].tipo == &quot;S&quot;) {
                                                                                        $.fn.window.defaults.closable = false;
                                                                                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Precaución&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                        return;
                                                                                    }
                                                                                    else
                                                                                        window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                                }
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }
                                                              else {
                                                                
                                                                var urlFraternaJurico = &quot;/OSCUS.Aplicacion/odata/ClientesJuridicos?$format=json&amp;$filter=numeroCliente eq {0}&amp;$select=esFraterna&quot;;
                                                                $.ajax({
                                                                    url: urlFraternaJurico.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#txtNumeroCliente&quot; , &quot;'&quot; , &quot;).val()),
                                                                    dataType: &quot;json&quot;,
                                                                    cache: &quot;false&quot;,
                                                                    success: function (resultFraterna) {
                                                                        
                                                                        if (resultFraterna.value[0] != null &amp;&amp; resultFraterna.value[0] != &quot;&quot; &amp;&amp; resultFraterna.value[0] != undefined) {
                                                                            if (resultFraterna.value[0].esFraterna == 0) {
                                                                                if (tieneRolFraternas == &quot;T&quot;)
                                                                                     window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                                else if (tieneRolFraternas == &quot;F&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario NO le permite procesar CDP de Fraternas, éstos solo pueden ser procesados en Tesorería.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                    return;
                                                                                }
                                                                            }
                                                                            else {
                                                                                if (tieneRolFraternas == &quot;T&quot;) {
                                                                                    $.fn.window.defaults.closable = false;
                                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite procesar sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                                                                                    return;

                                                                                }
                                                                                else if (tieneRolFraternas == &quot;F&quot;)
                                                                                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + id;
                                                                            }
                                                                        }

                                                                    }
                                                                });
                                                            }
                                                          }
                                                        }
                                                        localStorage[&quot;rolParaFraterna&quot;] = tieneRolFraternas;
                                                    }
                                                });
                                            }
                                        }
                                    });
                        }
                        else if (opcion == 4) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Prestamos?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 5) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 6) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 7) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Consolidado?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else if (opcion == 8) {
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/AsociarCuentasBCE?id=&quot; , &quot;'&quot; , &quot; + id;
                        }
                        else {
                            alert(&quot;Opción no disponible.&quot;);
                        }
                    }
                });
}
}





    
        
            
            Consolidado
        
        
            
            Datos Generales
        
        
            
            Depósitos a la vista
        
        
            
            Depósitos a plazo
        
        
            
            Préstamos
        
        
            
            Servicios financieros
        
        
            
            Servicios no financieros
        
    



            
        
        
            
                
                    
                        DATOS
                        
                            Asesor:
                            
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        Tipo documento:
                                        
                                            
                                            Cédula
                                            Pasaporte
                                        PasaporteCédulaPasaporte
                                    
                                
                                
                                    
                                        Tipo documento:
                                        
                                    
                                
                            
                            
                                
                                    Es menor de edad:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                
                            
                            
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                

                                
                                    
                                    
                                    
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Soltero(a)
                                    
                                
                                
                                    
                                        Estado civil:
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    En Unión Libre:
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    Con Disolución Conyugal:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                  
                                
                                
                            
                        
                        
                            
                                
                                    
                                        
                                            
                                                
                                                
                                            
                                        
                                        
                                            
                                                
                                                    Estado civil:
                                                    
                                                        
                                                        Soltero(a)
                                                        Casado(a)
                                                        Viudo(a)
                                                        Divorciado(a)
                                                        Unión libre
                                                    Soltero(a)Soltero(a)Casado(a)Viudo(a)Divorciado(a)Unión libre
                                                
                                                
                                                

                                            
                                        
                                        
                                            
                                                
                                                
                                                    Sexo: 
                                                    
                                                    Hombre
                                                    
                                                    Mujer
                                                
                                            
                                        
                                        
                                            
                                                
                                                  
                                                
                                            
                                        
                                    
                                

                            
                        
                        
                            
                                
                                
                                
                            
                        
                        
                            
                                
                                    
                                        País de Nacimiento:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    

                                    
                                        
                                    
                                    
                                        País donde generó D.I.:
                                        
                                            
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís genera DI...
                                    

                                    
                                        
                                            País de nacimiento:
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Nacionalidad 1:
                                        AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 1...
                                    
                                    
                                        Nacionalidad 2:
                                        Nacionalidad 2..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 2..
                                    
                                    
                                        Nacionalidad 3:
                                        Nacionalidad 3..AfganistánÅlandAlbaniaAlemaniaAndorraAngolaAnguilaAntártidaAntigua y BarbudaAntillas NeerlandesasArabia SauditaArgeliaArgentinaArmeniaArubaAustraliaAustriaAzerbaiyánBahamasBahréinBangladeshBarbadosBélgicaBeliceBenínBermudasBielorrusiaBirmaniaBoliviaBosnia y HerzegovinaBotsuanaBrasilBrunéiBulgariaBurkina FasoBurundiButánCabo VerdeCamboyaCamerúnCanadáChadChileChinaChipreCiudad del VaticanoColombiaComorasCorea del NorteCorea del SurCosta de MarfilCosta RicaCroaciaCubaDinamarcaDominicaEcuadorEgiptoEl SalvadorEmiratos Árabes UnidosEritreaEslovaquiaEsloveniaEspaña Estados UnidosEstoniaEtiopíaFilipinasFinlandiaFiyiFranciaGabónGambiaGeorgiaGhanaGibraltarGranadaGreciaGroenlandiaGuadalupeGuamGuatemalaGuayana FrancesaGuernseyGuineaGuinea EcuatorialGuinea-BissauGuyanaHaitíHondurasHong KongHungríaIndiaIndonesiaIránIraqIrlandaIsla BouvetIsla de ManIsla de NavidadIslandiaIslas CaimánIslas CocosIslas CookIslas FeroeIslas Georgias del Sur y Sandwich del SurIslas Heard y McDonaldIslas MalvinasIslas Marianas del NorteIslas MarshallIslas PitcairnIslas SalomónIslas Turcas y CaicosIslas ultramarinas de Estados UnidosIslas Vírgenes BritánicasIslas Vírgenes EstadounidensesIsraelItaliaJamaicaJapónJerseyJordaniaKazajistánKeniaKirguistánKiribatiKuwaitLaosLesotoLetoniaLíbanoLiberiaLibiaLiechtensteinLituaniaLuxemburgoMacaoMacedoniaMadagascarMalasiaMalauiMaldivasMalíMaltaMarruecosMartinicaMauricioMauritaniaMayotteMéxicoMicronesiaMoldaviaMónacoMongoliaMontenegroMontserratMozambiqueNamibiaNauruNepalNicaraguaNígerNigeriaNiueNorfolkNoruegaNueva CaledoniaNueva ZelandaOmánPaíses Bajos (Holanda)PakistánPalaosPanamáPapúa Nueva GuineaParaguayPerúPolinesia FrancesaPoloniaPortugalPuerto RicoQatarReino Unido (Inglaterra)República CentroafricanaRepública ChecaRepública del CongoRepública Democrática del CongoRepública DominicanaReuniónRuandaRumaniaRusiaSahara OccidentalSamoaSamoa AmericanaSan BartoloméSan Cristóbal y NievesSan MarinoSan Pedro y MiquelónSan Vicente y las GranadinasSanta HelenaSanta LucíaSanto Tomé y PríncipeSenegalSerbiaSeychellesSierra LeonaSingapurSiriaSomaliaSri LankaSuazilandiaSudáfricaSudánSueciaSuizaSurinamSvalbard y Jan MayenTailandiaTaiwánTanzaniaTayikistánTerritorio Británico del Océano ÍndicoTerritorios Australes FrancesesTerritorios palestinosTimor OrientalTogoTokelauTongaTrinidad y TobagoTúnezTurkmenistánTurquíaTuvaluUcraniaUgandaUnión EuropeaUnión SoviéticaUruguayUzbekistánVanuatuVenezuelaVietnamWallis y FutunaYemenYibutiZambiaZimbabueNacionalidad 3..
                                    
                                    
                                        Grupo Étnico:
                                        Mestizo/aMontuvio/aDe una nacionalidad o pueblo indígenaMulato/aNegro/aCholo/aAfroecuatoriano/ a AfrodescendienteOtraGrupo Etnico...
                                    
                                
                            
                        
                    
                
                
    const mensajeFactorAltoRiesgo = &quot;El socio presenta Factor de Riesgo Alto, se solicitará información adicional para el Formulario de Debida Diligencia&quot;;
    const mensajeTituloFactorAltoRiesgo = &quot;Factor de Riesgo Alto&quot;;

    $(document).ready(() => {

        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).click(() => {
            if ($(&quot;#divDebidaDiligenciaAmpliada&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                $(this).removeClass(&quot;boldFont&quot;);
            }
            else {
                $(this).addClass(&quot;boldFont&quot;);
            }
        });

        $(&quot;#cbClasificacionActividad&quot;).change((_, params) => ClienteAltoRiesgo(params.selected, $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));
        $(&quot;#cbPaisOrigen&quot;).change((_, params) => ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), params.selected, $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val()));

        $(&quot;#chkEsCargoEleccion&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );

        $(&quot;#chkEsRelacionPersonaPolitica&quot;).change(() => 
            ClienteAltoRiesgo($(&quot;#cbClasificacionActividad&quot;).val(), $(&quot;#cbPaisOrigen&quot;).val(), $(&quot;#txtIdentificacion&quot;).val(), $(&quot;#cbTipoDocumento&quot;).val())
        );
    });

    const DebidaDiligenciaAmpliadaAbierto = () => {
        if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
        }
        if ($(&quot;#h1DatosComplementarios&quot;).hasClass(&quot;boldFont&quot;)) {
            $(&quot;#h1DatosComplementarios&quot;).removeClass(&quot;boldFont&quot;);
        }
        $(&quot;#h1DebidaDiligenciaAmpliada&quot;).addClass(&quot;boldFont&quot;);
    }

    const ActividadEconomicaRiesgo = (codigoClasificacionCredito, callback) => {
        const url = &quot;~/odata/ClasificacionesCreditos?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and mayorIncidencia eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoClasificacionCredito),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const PaisNivelRiesgo = (codigoPais, callback) => {
        const url = &quot;~/odata/Paises?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and nivelRiesgo eq 3&amp;$select=codigo&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPais),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const VerificaListasControl = (codigo, apellidos, nombres, tipoDocumento, callback) => {
        const urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
        $.ajax({
            url: urlListaControl,
            type: &quot;POST&quot;,
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            data: JSON.stringify({
                codigo: codigo,
                apellido: apellidos,
                nombre: nombres,
                estadoCivil: tipoDocumento,
                nivelEducacion: codigoUsuarioActual
            }),
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const EsPep = (codigoPep, callback) => {
        const url = &quot;~/odata/Peps?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$select=id&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, codigoPep),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultListasControl => callback(resultListasControl)
        });
    };

    const ClienteAltoRiesgo = (codigoClasificacionCredito, codigoPais, codigo, tipoDocumento) => {

        let apellidos = $(&quot;#txtApellidos&quot;).val();
        let nombres = $(&quot;#txtNombres&quot;).val();

        if ($(&quot;#cbTipoDocumento&quot;).val() === &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
            apellidos = $(&quot;#txtApellidos&quot;).val();
            nombres = $(&quot;#txtNombres&quot;).val();
        }
        else if ($(&quot;#cbTipoDocumento&quot;).val() === &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;) {
            apellidos = $(&quot;#txtApellidosPasaporte&quot;).val();
            nombres = $(&quot;#txtNombresPasaporte&quot;).val();
        }
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).hide();
        $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionIngresosConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDescripcionOtrosIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtProcedenciaFondos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDepositosNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtDepositosMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasRecibidasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtRemesasEnviadasMonto&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

        ActividadEconomicaRiesgo(codigoClasificacionCredito, resultClasificacionesCreditos => {
            if (resultClasificacionesCreditos.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        PaisNivelRiesgo(codigoPais, resultPaises => {
            if (resultPaises.value[0]) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
        });

        VerificaListasControl(codigo, apellidos, nombres, tipoDocumento, resultListasControl => {
            if (resultListasControl.Anexo &amp;&amp;
                resultListasControl.Anexo.EstaEnConsepEsSindicadoParaNivelRiesgo ||
                resultListasControl.Anexo.EstaEnListaONU ||
                resultListasControl.Anexo.EstaEnOFAC ||
                resultListasControl.Anexo.EstaEnEmpresasFantasma) {
                MostrarAlertaDebidaDiligencia();
                return;
            }
            else {
                EsPep(codigo, resultEsPep => {
                    if (resultEsPep.value[0]) {
                        MostrarAlertaDebidaDiligencia();
                        return;
                    }
                });
            }
        });

     
        if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) || $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
            MostrarAlertaDebidaDiligencia();
        }

    };

    const DebidaDiligenciaAmpliada = (numeroCliente, callback) => {
        const url = &quot;~/odata/DescripcionIngresoFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultDebidaDiligenciaAmpliada => callback(resultDebidaDiligenciaAmpliada)
        });
    };

    const VerificaDebidaDiligenciaAmpliada = numeroCliente => {

        DebidaDiligenciaAmpliada(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDescripcionIngresos&quot;).val(result.value[0].descripcionIngresoSC);
                $(&quot;#txtDescripcionIngresosConyuge&quot;).val(result.value[0].descripcionIngresoConyuge);
                $(&quot;#txtDescripcionOtrosIngresos&quot;).val(result.value[0].descripcionValorOtros);
                $(&quot;#txtProcedenciaFondos&quot;).val(result.value[0].procedenciaDeLosFondos);
                MostrarAlertaDebidaDiligencia();
            }
        });
    };

    const TransaccionalidadMesFormDebidaDiligencia = (numeroCliente, callback) => {
        const url = &quot;~/odata/TransaccionalidadMesFormDebidaDiligencia?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: resultTransaccionalidadMesFormDebidaDiligencia => callback(resultTransaccionalidadMesFormDebidaDiligencia)
        });
    };

    const VerificaTransaccionalidadMesFormDebidaDiligencia = numeroCliente => {

        TransaccionalidadMesFormDebidaDiligencia(numeroCliente, result => {
            if (result.value[0]) {
                $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val(result.value[0].secuencial);
                $(&quot;#txtDepositosNumeroTransacciones&quot;).val(result.value[0].cantidadDepositos);
                $(&quot;#txtDepositosMonto&quot;).val(result.value[0].montoTotalDepositos);
                $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasRecibidas);
                $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(result.value[0].montoTotalTransferenciasRecibidas);
                $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadTransferenciasEnviadas);
                $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(result.value[0].montoTotalTransferenciasEnviadas);
                $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasRecibidas);
                $(&quot;#txtRemesasRecibidasMonto&quot;).val(result.value[0].montoTotalRemesasRecibidas);
                $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(result.value[0].cantidadRemesasEnviadas);
                $(&quot;#txtRemesasEnviadasMonto&quot;).val(result.value[0].montoTotalRemesasEnviadas);
            }
        });
    };

    const IngresosSC = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 1) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosConyuge = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if (record.numeroVerificador === 1 &amp;&amp; record.codigoItem === 2) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const IngresosOtros = listaItemsEconomicosPatrimoniales => {
        return listaItemsEconomicosPatrimoniales.reduce((sum, record) => {
            if ((record.numeroVerificador === 1) &amp;&amp; (record.codigoItem === 3 || record.codigoItem === 4 || record.codigoItem === 5 || record.codigoItem === 6)) {
                return sum + record.valor;
            } else {
                return sum
            };
        }, 0);
    };

    const MostrarAlertaDebidaDiligencia = () => {
        if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;)) {
            return;
        }
        $.messager.alert(mensajeTituloFactorAltoRiesgo, mensajeFactorAltoRiesgo, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;);
        $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).show();
    };




    
        
            INFORMACIÓN REQUERIDA PARA DEBIDA DILIGENCIA AMPLIADA
        
    
    
        
            
            
                
            
            
                
                    
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
            
                
                    TRANSACCIONALIDAD MENSUAL
                    
                
            
            
                
                    
                
            
            
                
                
                
                    N° de Transacciones MENSUALES
                
                
                    Monto
                
            
            
                
                    Depósitos
                
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Transferencias Enviadas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Recibidas
                
                
                    
                
                
                    
                
            
            
                
                    Remesas Enviadas
                
                
                    
                
                
                    
                
            
        
    



                
                    
                        DIRECCIÓN
                    
                
                
                    
                        
                            
                                
                                    País de Residencia:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                            
                                
                                    Dirección Domicilio Exterior
                                    
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    Es migrante:
                                    
                                        
                                        
                                    
                                

                                
                                    Nacionalidad Americana:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                            
                        
                        
                            
                                
                                    
                                        Provincia reside:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        Provincia reside:
                                        
                                    
                                

                                
                                    
                                        Cantón reside:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Cantón reside:
                                        
                                    
                                


                                
                                    
                                        Parroquia reside:
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        Parroquia reside:
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                        
                                        
                                            02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                            
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                          
                                        
                                    
                                
                            
                            
                                
                                    
                                        Tipo vivienda:
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        Tipo vivienda:
                                        
                                    
                                
                            
                            
                        
                        
                            
                                ¿Es residente fiscal en Ecuador?: 
                                
                                SI
                                
                                NO
                            
                        
                        
                            
                                
                                    Tributa en el exterior?:
                                    
                                        
                                        
                                    

                                    

                                
                                
                                    País Obligación Tributaria:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria...
                                
                            
                        

                        
                            
                                
                                    Tributa en el exterior 2?:
                                    
                                        
                                        
                                    
                                    
                                
                                
                                    País Obligación Tributaria 2:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAPaís Obligacion Tributaria 2...
                                
                            
                        
                    
                
                
                    
                        GEOREFERENCIACION DOMICILIO
                    
                
                
                    
                        
                            
                                
                                
                            
                        
                    
                
                
                    
                        OCUPACIÓN
                    
                
                
                    
                        
                            
                                
                                    
                                        Educación:
                                        
                                            
                                            Sin Estudios
                                            Formación intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                                
                                    
                                        Educación:
                                        
                                    
                                
                            
                            
                                
                                    
                                        Establecimiento:
                                        
                                            
                                        Establecimiento...
                                    
                                
                                
                                    
                                        Profesión SBS:
                                        Arquitectos y afinesCiencias Administrativas y EconómicasCiencias de la educaciónCiencias socialesDerechoIngeniería y Ciencias exactasMédicos, Biólogos, Veterinarios y otros profesionales de la saludPeriodistasPolicías, militares (fuerza pública)Profesión...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Ocupación:
                                        ABACERO                                           ABOGADO                                           ACEITADOR                                         ACOMODADOR DE CINE                                ACROBATA                                          ACTOR                                             ACTRIZ                                            ACTUARIO                                          ACUICULTOR                                        ADMINISTRADOR                                     ADMINISTRADOR AGRICOLA                            ADMINISTRADOR DE COMERCIO                         ADMINISTRADOR DE CORREOS                          ADMINISTRADOR DE EMPRESAS                         ADMINISTRADOR DE FABRICAS                         ADMINISTRADOR DE HOTEL                            ADMINISTRADOR PUBLICO                             ADOBERO                                           AFILADOR                                          AGENTE COMP. NAVIERA                              AGENTE DE ADUANA                                  AGENTE DE BIENES RAICES                           AGENTE DE PUBLICIDAD                              AGENTE DE SEGUROS                                 AGENTE DE TURISMO                                 AGENTE JUDICIAL                                   AGENTE R. COMERCIAL                               AGENTE VIAJERO                                    AGRICULTOR                                        AGRIMESOR                                         AGRONOMO                                          AGUATERO                                          AJUST. DE SINIESTROS                              ALBAÑIL                                           ALFABETIZADOR                                     ALFARERO                                          ALFOMBRERO                                        ALPARGATERO                                       ALPINISTA                                         AMA DE CASA                                       AMA DE LLAVES                                     AMANUENSE                                         ANALISTA                                          ANALISTA DE SISTEMAS                              ANTROPOLOGO                                       APARADOR DE CALZADO                               APICULTOR                                         APLANCHADORA                                      APODERADO                                         APRENDIZ                                          APURADOR                                          ARBITRO                                           ARCHIVERO                                         ARQUEOLOGO                                        ARQUITECTO                                        ARRIERO                                           ARTESANO                                          ARTISTA                                           ASCENSORISTA                                      ASERRADOR                                         ASESOR                                            ASISTENTE                                         ASISTENTE GERENCIA                                ASISTENTE PEDIATRIA                               ASTRONOMO                                         ATLETA                                            AUDITOR                                           AUTOMETRISTA                                      AUTOR                                             AUTOR COMPOSITOR                                  AUXILIAR                                          AUXILIAR DE CONTABILIDAD                          AUXILIAR ENFERMERIA                               AUXILIAR SECRETARIA                               AVALUADOR                                         AVIADOR CIVIL                                     AVIADOR COMERCIAL                                 AVIADOR MILITAR                                   AVIADOR NAVAL                                     AVICULTOR                                         AYUDANTE                                          AZAFATA                                           BACHILLER                                         BACHILLER AGROPECUARIO                            BACHILLER ARTES PLASTICAS                         BACHILLER CIENCIAS EDUCACION                      BACHILLER SECRETARIADO                            BACHILLER TECNICO                                 BACHILLER TECNICO INDUCTRIAL                      BAILARIN                                          BALANCERO                                         BALDOSERO                                         BANANERO                                          BANQUERO                                          BARRENDERO                                        BIBLIOTECARIO/A                                   BIBLIOTECOLOGO                                    BIOLOGO                                           BIOQUIMICO                                        BIOQUIMICO FARMACEUTICO                           BISELADOR                                         BLANQUEADOR                                       BODEGUERO                                         BOLETERO                                          BOMBERO                                           BORDADOR                                          BOTANICO                                          BOTICARIO                                         BOXEADOR                                          BRACERO                                           BREQUERO                                          BUZO                                              CADENERO                                          CAFETERO                                          CAJERO                                            CALCULISTA                                        CALDERERO                                         CALIGRAFO                                         CAMARERO                                          CAMAROGRAFO                                       CANASTERO                                         CANILLITA                                         CANTANTE                                          CANTERO                                           CANTINERO / BAR MAN                               CAPATAZ                                           CARBONERO                                         CARGADOR                                          CARNICERO                                         CARPINTERO                                        CARRETONERO                                       CARROCERO                                         CARTERO                                           CARTOGRAFO                                        CARTONERO                                         CATADOR                                           CAUCHERO                                          CAZADOR                                           CEDACERO                                          CEGARRERO                                         CERAMISTA                                         CERRAJERO                                         CERVECERO                                         CHEFF                                             CHOCOLATERO                                       CHOFER PROFESIONAL                                CINEASTA                                          CIRUJANO                                          CITOLOGO                                          CLASIFICADOR                                      CLASIFICADOR DE BANANO                            COBRADOR DE PASAJE                                COCINERA                                          COLCHONERO                                        COLECTOR                                          COLOCADOR DE VIDRIOS                              COMERCIANTE                                       COMETOLOGO                                        COMISARIO                                         COMISIONISTA                                      CONDUCTOR                                         CONFITERO                                         CONSERJE                                          CONSERJERO SOCIAL                                 CONSTRUCTOR                                       CONTADOR                                          CONTADOR BACHILLER                                CONTADOR BANCARIO                                 CONTRATISTA                                       CONTROLADOR                                       CONTROLADOR TRAFICO AERERO                        COOPERATIVISTA                                    CORREO/BIENES RAICES                              CORRESPONSAL                                      CORTADOR                                          COSEDOR                                           COSTURERA                                         CRIMINOLOGO                                       CRITICO                                           CRONISTA                                          CURTIDOR                                          DACTILOGRAFO                                      DAMA DE COMPANIA                                  DEALER DE CASINO                                  DECORADOR                                         DEM. BELLEZA                                      DEPENDIENTE                                       DEPORTISTA                                        DESCARNADOR                                       DESMOTADOR                                        DESPACHADOR                                       DESTILADOR                                        DETECTIVE                                         DIBUJANTE                                         DIETISTA                                          DIGITADOR                                         DIPLOMATICO                                       DIRECTOR                                          DIRECTOR TECNICO                                  DISEÑADOR                                         DISTRIBUIDOR                                      DOMADOR                                           DORADOR                                           DR. ADMINISTRACION                                DR. BIOQUIMICO Y FARMACEUTICO                     DR. CC. NATURALES                                 DR. CC. POLITICAS                                 DR. CONTABILIDAD                                  DR. ECONOMIA                                      DR. EN AGRONOMIA                                  DR. EN BIOLOGIA                                   DR. EN DERECHO                                    DR. EN DERECHO INTERNACIONAL                      DR. EN EDUCACION                                  DR. EN JURISPRUDENCIA                             DR. EN LINGUISTICA                                DR. EN MATEMATICAS                                DR. EN PSICOLOGIA                                 DR. EN QUIMICA                                    DR. FILOSOFIA Y LETRAS                            DR. MEDICINA                                      DR. MEDICINA VETERINARIA                          DR. NUTRICION HUMANA                              DR. PSICOLOGIA CLINICA                            DR. PSICOLOGIA INDUSTRIAL                         DR. PSICOLOGIA JURIDICA                           DR. QUIMICA FARMACIA                              DR. QUIMICO INDUSTRIAL                            DULCERO                                           EBANISTA                                          ECONOMISTA                                        ECONOMO                                           EDUCADOR PARVULARIO                               EGRESADO/A                                        EJECUTIVO                                         ELECTRICISTA                                      ELECTROTIPISTA                                    EMBALZAMADOR                                      EMBAZADOR                                         EMBELLECEDOR                                      EMBOTELLADOR                                      EMPACADOR                                         EMPALMADOR                                        EMPAQUETADOR                                      EMPLEADA DOMESTICA                                EMPLEADO                                          EMPLEADO BANCARIO                                 EMPLEADO PARTICULAR                               EMPLEADO PRIVADO                                  EMPLEADO PUBLICO                                  EMPLEADOR                                         EMPRESARIO                                        ENCERADOR                                         ENCHAPADOR                                        ENCUADERNADOR                                     ENDEREZADOR                                       ENFERMERO/A                                       ENLADRILLADOR                                     ENLATADOR                                         ENLOSADOR                                         ENTEJADOR                                         ENTRENADOR                                        EQUITADOR                                         ESCOBERO                                          ESCRIBANO                                         ESCRITOR                                          ESCULTOR                                          ESTADISTICO                                       ESTEREOTIPISTA                                    ESTIBADOR                                         ESTILISTA                                         ESTIQUETADOR                                      ESTUDIANTE                                        ESTUQUERO                                         EXPERTO                                           EXPLORADOR                                        FARACEUTICO                                       FERROVIARIO                                       FIERRERO                                          FILOLOGO                                          FISCAL                                            FISCALIZADOR                                      FISICO                                            FISIOTERAPISTA                                    FLORICULTOR                                       FLORISTERI                                        FOGONERO                                          FONDERO                                           FONTANERO                                         FORESTAL                                          FOTOGRABADOR                                      FOTOGRAFO                                         FOTOGRAMETRISTA                                   FOTOMECANICO                                      FUMIGADOR                                         FUNDIDOR EN GENERAL                               FUTBOLISTA                                        GALVANIZADOR                                      GANADERO                                          GASFITERO                                         GEOLOGO                                           GERENTE                                           GINECOLOGO                                        GRABADOR EN GENERAL                               GRAFICO PRENSISTA                                 GUARDA FORESTAL                                   GUARDA ROPAS                                      GUARDIA                                           GUARDIAN                                          GUIA TURISTICO                                    HACHERO                                           HELADERO                                          HERBOLOGO                                         HERRERO                                           HILANDERO                                         HIPNOTIZADOR                                      HISTORIADOR                                       HOJALATERO                                        HORNERO                                           HORTELANO                                         HORTICULTOR                                       HOSTELERO                                         HOTELERO                                          IMPORTADOR                                        IMPRESOR                                          INDUSTRIAL                                        ING. AERONAUTICO                                  ING. AGRICOLA                                     ING. AGRONOMO                                     ING. BURSATIL                                     ING. CIVIL                                        ING. COMERCIAL                                    ING. DE AUDIO                                     ING. DE EMPRESAS                                  ING. DE MINAS                                     ING. DE PETROLEOS                                 ING. DE SISTEMAS                                  ING. DE VUELO                                     ING. ELECTRICO                                    ING. ELECTRICO                                    ING. EN ALIMENTOS                                 ING. EN INFORMATICA                               ING. FORESTAL                                     ING. GEOGRAFO                                     ING. GEOLOGO                                      ING. HIDROGEOLOGIA MINERO                         ING. HIDROLOGO                                    ING. IND. AGROPECUARIA                            ING. INSDUSTRIAL                                  ING. MECANICO                                     ING. METEOROLOGO                                  ING. QUIMICO                                      ING. ZOOTECNISTA                                  INGENIERO                                         INGENIERO NAVAL                                   INGENIERO TEXTIL                                  INSPECTOR                                         INSTRUCTOR                                        INSTRUM. QUIRURGICO                               INTERMEDIARIO                                     INTERPRETE                                        INTROD. GANADO                                    INTRUM. INDUSTRIAL                                INVERSIONISTA                                     INVESTIGADOR PRIVADO                              JABONERO                                          JARDINERO                                         JEFE EN GENERAL                                   JIFERO                                            JOCKEY                                            JUBILADO                                          JUEZ                                              LABORATORISTA                                     LADRILLERO                                        LAMINADOR                                         LANCHERO                                          LAQUEADOR                                         LATONERO                                          LAVANDERO/A                                       LEÑADOR                                           LIBRERO                                           LIC. /ENFERMERIA                                  LIC. ADMINIS. EMPRESAS                            LIC. ADMINIS. PUBLICA                             LIC. CC. COM. SOCIAL                              LIC. CC. EDUCACION                                LIC. CC. INFORMATICA                              LIC. CC. PUB. Y SOC.                              LIC. COMERCIO EXTRANJERO                          LIC. CONTABILIDAD Y AUDITORIA                     LIC. COSTOS INDUSTRIALES                          LIC. EN BANCA                                     LIC. EN ESTADISTICA                               LIC. EN LINGUISTICA                               LIC. EN NUTRICION Y DIETETICA                     LIC. EN SOCIOLOGIA                                LIC. PSICOLOGIA                                   LIC. RECREACION INFANTIL                          LIC. RELACIONES PUBLICAS                          LIC. SERVICIO SOCIAL                              LICENCIADO/A                                      LIMPIABOTAS                                       LIMPIADOR                                         LINGUISTA                                         LINOTIPISTA                                       LITERATO                                          LITOGRAFO                                         LOCUTOR                                           LOTERO                                            MACANERA                                          MADERERO/A                                        MAESTRA CONFECCION INDUSTRIAL                     MAESTRA CORTE CONFECCION                          MAESTRO/A BELLEZA                                 MAESTRO/A ELECT/INDUSTR.                          MAESTRO/A EN ARTES                                MAESTRO/A IMPRESOR                                MAESTRO/A PLANIFICADOR                            MAESTRO/A SASTRERIA                               MAGISTRADO                                        MANICURISTA                                       MANTEQUERO                                        MANTEQUILLADOR                                    MANUFACTURERO                                     MAQUINISTA                                        MARINERO                                          MARINO DE GUERRA                                  MARINO MERCANTE                                   MARMOLERO                                         MASAJISTA                                         MASTER C. FILOSOFICAS                             MASTER CC. EDUCACION                              MASTER CC. HISTORICAS                             MASTER ELECTRONICA                                MASTER EN ECONOMIA                                MASTER EN FISICA                                  MATARIFE                                          MATEMATICO                                        MATRICERO                                         MAYORDOMO                                         MECANICO                                          MECANICO AUTOMOTRIZ                               MECANICO DE PRECISION                             MECANICO DE VUELO                                 MECANICO DENTAL                                   MECANICO INDUSTRIAL                               MECANICO MANTENIMIENTO AVIONES                    MECANICO ORTOPEDICO                               MECANNICO HELICOPTEROS                            MECANOGRAFO                                       MEDICO                                            MEDICO VETERINARIO                                MENSAJERO                                         MESERO                                            METALURGICO                                       METEREOLOGO                                       MILITAR                                           MILITAR EN SERVICIO PASIVO                        MIMIOGRAFISTA                                     MINERO                                            MISIONERO                                         MODELADOR                                         MODELO                                            MODISTA                                           MOLDEADOR                                         MOLINERO                                          MONJA                                             MOTONIVELADOR                                     MOTORISTA                                         MOZO RESTAURANTE                                  MUEBLISTA                                         MUSEOLOGO/S                                       MUSICO                                            NATURALISTA                                       NAVEG. AVIACION                                   NEGOCIANTE                                        NIÑERA                                            NINGUNA                                           NINGUNA                                           NIQUELADOR                                        NIVELADOR                                         NOTARIO                                           OBRERO                                            OBSTETRIZ                                         OCULISTA                                          ODONTOLOGO                                        OFICIAL DE BOMBEROS                               OFICINISTA                                        OPERADOR                                          OPERADOR DE SISTEMAS                              OPERADOR EQUIPO PESADO                            OPERADOR MAQUINA AGRICOLAS                        OPERARIO                                          OPTALMOLOGO                                       OPTICO                                            OPTOMETRISTA                                      ORDENADOR                                         ORFEBRE                                           ORIENTADOR VOCACIONAL PROFESOR                    ORTOPEDICO                                        OTRAS ACTIVIDADES                                 OVICULTOR                                         PAGADOR                                           PAILERO                                           PALEOLOGO                                         PALEONTOLOGO                                      PANADERO                                          PANTALONERO                                       PARTERA                                           PASTELERO                                         PASTOR                                            PATRON COSTANERO                                  PEDICURISTA                                       PEINADOR                                          PELETERO                                          PELUQUERO                                         PEON                                              PEQUEÑO INDUSTRIAL                                PERFORADOR                                        PERIODISTA                                        PERITO                                            PERITO ELECTRICISTA                               PERITO FORESTAL                                   PERITO GEOMENSOR                                  PESCADOR                                          PETROLERO                                         PH. D CC. TECNICAS                                PH. D EN QUIMICA                                  PICADORES                                         PICAPEDRERO                                       PILOTO                                            PILOTO HELICOPTEROS                               PINTOR                                            PINTOR ESCULTOR                                   PIROTECNICO                                       PISCICULTOR                                       PLANCHADOR                                        PLANTADOR                                         PLATERO                                           PLENIPOTENCIARIO                                  PLOMERO                                           POLICIA                                           POLICIA ADUANERO                                  POLICIA JUDICIAL                                  POLICIA MUNICIPAL                                 POLICIA SERVICIO PASIVO                           PORTERO                                           POSILLERO                                         POSTILLON                                         PRACTICO AGRICOLA                                 PRECEPTOR                                         PRENSISTA                                         PRESBITERO                                        PRESTAMISTA                                       PROCURADOR                                        PRODUCTOR                                         PRODUCTOR T.V.                                    PROFESIONAL EN GENERAL                            PROFESOR                                          PROFESOR EN GENERAL                               PROGRAMADOR DE COMPUTADOR                         PROMOTOR  COMERCIO EXTRANJERO                     PROVEEDOR                                         PROYECTISTA                                       PSICOLOGO                                         PSICOLOGO CLINICO                                 PSIQUIATRA                                        PUBLICISTA                                        PULIDOR                                           QUESERO                                           QUIMICO FARMACEUTICO                              QUIROGRAFO                                        QUIROPEDISTA                                      QUMICO                                            RADIODIFUSOR                                      RADIOLOGO                                         RADIOPERADOR                                      RADIOTECNICO                                      RADIOTELEFONISTA                                  RADIOTELEGRAFISTA                                 RECAUDADOR                                        RECAUDADOR R. TELEF.                              RECEPCIONISTA                                     RECORREDOR                                        REDACTOR                                          REGENTE                                           REGISTRADOR                                       RELACIONISTA                                      RELIGIOSO                                         RELOJERO                                          REMACHADOR                                        REMALLADOR                                        REMATADOR                                         RENTISTA                                          REPARADOR                                         REPARTIDOR                                        REPORTERO                                         REPORTERO GRAFICO                                 REPOSTERO                                         REPRESENTANTE                                     REPRESENTANTE DE VENTAS                           REPRESENTANTE OBRAS DE ARTE                       RETIRADO                                          RETOCADOR                                         ROTOGRABADOR                                      ROTULADOR                                         SACERDOTE                                         SACRISTAN                                         SALONERO                                          SASTRE                                            SECRETARIO/A                                      SECRETARIO/A BILINGUE                             SECRETARIO/A EJECUTIVO/A                          SELLADOR                                          SERIGNOFISTA                                      SERIGRAFO                                         SERISCICULTOR                                     SERVICULTOR                                       SIFONERO                                          SINDICO                                           SIRVIENTE                                         SOBRESTANTE                                       SOCIOLOGO                                         SOGUERO                                           SOLDADOR                                          SOMBRERERO                                        SPULTURERO                                        SR. EN OPTOMETRIA                                 SUBASTADOR                                        SUPERVISOR                                        TABACALERO                                        TABERNERO                                         TALABARTERO                                       TALLADOR                                          TAMIGRAFO                                         TAPIZADOR                                         TAQUIGRAFO                                        TAQUIMECANOGRAFO/A                                TAXIDERMISTA                                      TCNL. COMUNICACIONES                              TCNL. CONSTRUCCION CIVIL                          TCNL. COOP. TRANSITO                              TCNL. COSTOS INDUTRIAL.                           TCNL. DISEÑADOR INTERIOR                          TCNL. ELECTROMECANICO                             TCNL. MANTENIMIENTO INDUSTRIAL                    TCNL. TERAP. LENGUAJE                             TEC. INSTRUMENTA. QUIRURGICA                      TEC. MECANICO INDUSTRIAL                          TEC. SUP. ADMINIS. FINCAS                         TEC. SUP. MECANICO AUTOMOTRIZ                     TEC. SUP. NUTRICION ANIMAL                        TEC. SUP. OPTOMETRIA                              TECNICO                                           TECNICO AGRONOMO                                  TECNICO AGROPECUARIO                              TECNICO ANALISTA DE SISTEMAS                      TECNICO AUTOMOTRIZ                                TECNICO CONSTRUCCION                              TECNICO CRIPTOGRAFICO                             TECNICO ELECTRICISTA                              TECNICO ELECTRONICA                               TECNICO EN LECHERIA                               TECNICO EN REFRIGERACION                          TECNICO EN SEGUROS                                TECNICO EN TURISMO                                TECNICO MATRICERO                                 TECNICO OPERADOR DE VUELO                         TECNICO REDES TELEFONICAS                         TECNICO TEXTIL                                    TECNOGOLO EN PETROLEOS                            TECNOLOGO                                         TECNOLOGO ELECTRICO                               TECNOLOGO ELECTRONICO                             TECNOLOGO EN COMPUTACION                          TECNOLOGO EN MINAS                                TECNOLOGO EN RECREA. INFANTIL                     TECNOLOGO INDUSTRIAL                              TECNOLOGO MECANICO                                TECNOLOGO MEDICO                                  TEJEDOR                                           TELEFONISTA                                       TELEGRAFISTA                                      TELEPATA                                          TEÑIDOR                                           TERAPEUTA                                         TERAPISTA EN LEGUAJE                              TERAPISTA OCUPACIONAL                             TERCENISTA                                        TESORERO                                          TINTORERO                                         TIPOGRAFO                                         TOPOLOGO                                          TOQUILLERO                                        TORERO                                            TORNERO                                           TRABAJADOR                                        TRABAJADOR SOCIAL                                 TRACTORISTA                                       TRADUCTOR                                         TRAMOYISTA                                        TRANSMISOR                                        TRIPULANTE                                        VACUNADOR                                         VAQUERO                                           VELADOR                                           VENDEDOR                                          VETERINARIO                                       VIDRIERO                                          VIGILANTE                                         VINICULTOR                                        VISITADOR MEDICO                                  VISITADOR SOCIAL                                  VITICULTOR                                        VIVANDERA                                         VOCEADOR                                          VULCANIZADOR                                      XILOGRAFO                                         YESERO                                            ZAPATERO                                          ZOOLOGO                                           ZOOTECNICO                                        Ocupación...
                                    
                                
                                
                                    
                                        Ocupación:
                                        
                                    
                                
                            
                            
                                
                                    Origen ingresos:
                                    
                                        
                                        Ama de casa
                                        Empleado privado
                                        Empleado público
                                        Independiente
                                        Jubilado pensionista
                                        Remesas exterior 
                                        Rentista 
                                        Ninguno
                                    Ingresos...
                                
                            
                        
                        
                            
                                
                                    
                                        Grupo económico:
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo...
                                    
                                
                                
                                    
                                        Grupo económico:
                                        
                                    
                                

                            
                        
                        
                            
                                
                                    
                                        Clasificación actividad:
                                        
                                            
                                        Actividad...
                                    
                                
                                
                                    
                                        Clasificación actividad:
                                        
                                    
                                
                            
                        
                    
                    
    $(document).ready(() => {
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).empty();
        $.each(codigosArea, (key, value) => $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;));
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublicoNegocioPropio&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
    });
    const TieneNegocioPropio = (ocupacion, origenIngresos) => ocupacion !== &quot;245&quot; &amp;&amp; origenIngresos === &quot;I&quot;;

    const EsNegocioLocal = (codigoPais) => codigoPais === &quot;EC&quot;;

    const MuestraDatosNegocioPropio = (ocupacion, origenIngresos, numeroCliente) => {
        if (TieneNegocioPropio(ocupacion, origenIngresos)) {
            $(&quot;#divNegocioPropio&quot;).show();
            CargaDatosNegocioPropio(numeroCliente).success((result) => {
                if (result.value.length > 0) {
                    const codigoProvincia = result.value[0].codigoProvincia ? result.value[0].codigoProvincia.trim() : 0;
                    const secuencialCanton = result.value[0].secuencialCanton || 0;
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val(result.value[0].secuencial);
                    $(&quot;#txtRucNegocioPropio&quot;).val(result.value[0].ruc);
                    $(&quot;#txtNombreNegocioPropio&quot;).val(result.value[0].nombreNegocio);
                    CargaPaisNegocioPropio(result.value[0].codigoPais);
                    $(&quot;#txtEstadoNegocioPropio&quot;).val(result.value[0].estado);
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val(result.value[0].telefonoExterior);
                    CargaProvinciaNegocioPropio(codigoProvincia);
                    CargaCantonesNegocioPropio(codigoProvincia, secuencialCanton);
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val(result.value[0].telefono);
                    $(&quot;#txtCelularNegocioPropio&quot;).val(result.value[0].celular);
                    $(&quot;#txtDireccionNegocioPropio&quot;).val(result.value[0].direccion);
                    $(&quot;#txtCargoNegocioPropio&quot;).val(result.value[0].cargo);
                }
                else {
                    CargaPaisNegocioPropio(0);
                    CargaProvinciaNegocioPropio(0);
                    $(&quot;#SecuencialDatoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtRucNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtNombreNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtEstadoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtTelefonoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtCelularNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtDireccionNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtCargoNegocioPropio&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                }
            });
        }
        else {
            $(&quot;#divNegocioPropio&quot;).hide();
        }
    };

    const ValidaProvinciaNegocioPropio = (cb) => {
        if (cb.value) {
            
            //Se ingresan datos en comboBox de Cantones
            const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
            $.ajax({
                url: urlCantones.replace(&quot;{0}&quot;, cb.value),
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: (resultCantones) => {
                    $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultCantones.value,  (_, value) => {
                        $(&quot;#cbCantonNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });
                    $(&quot;#cbCantonNegocioPropio&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    
                }
            });
        }
    };

    const VerificaPaisNegocioPropio = (cb) => {
        if (EsNegocioLocal(cb)) {
            $(&quot;.NegocioLocal&quot;).show();
            $(&quot;.NegocioExtranjero&quot;).hide();
        }
        else {
            $(&quot;.NegocioLocal&quot;).hide();
            $(&quot;.NegocioExtranjero&quot;).show();
        }
    };

    const CargaDatosNegocioPropio = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DatoNegocioPropio?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,ruc,nombreNegocio,codigoPais,estado,telefonoExterior,codigoProvincia,secuencialCanton,telefono,celular,direccion,cargo&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };

    const CargaProvinciaNegocioPropio = (codigo) => {
        
        const urlProvincias = &quot;~/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlProvincias,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultProvincias) => {
                $(&quot; , &quot;'&quot; , &quot;#cbProvinciaNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultProvincias.value, (_, value) => {
                    $(&quot;#cbProvinciaNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbProvinciaNegocioPropio&quot;).val(codigo || 0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });

    };

const CargaCantonesNegocioPropio = (codProvincia, codigoCanton) => {
    if (codProvincia) {
        
        const urlCantones = &quot;~/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvincia),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultCantones) => {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, (_, value) =>{
                    $(&quot;#cbCantonNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonNegocioPropio&quot;).val(codigoCanton||0).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}
const CargaPaisNegocioPropio = (codigoPais) => {
        const urlPaisNegocioPropio = &quot;~/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
        
        $.ajax({
            url: urlPaisNegocioPropio,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: (resultPaisTributa) => {
                
                $(&quot; , &quot;'&quot; , &quot;#cbPaisNegocioPropio&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultPaisTributa.value, (_, value) =>{
                    $(&quot;#cbPaisNegocioPropio&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbPaisNegocioPropio&quot;).val(codigoPais||0).chosen().trigger(&quot;chosen:updated&quot;).trigger(&quot;change&quot;);
            }
        });
}



    
        DATOS NEGOCIO PROPIO
        
            
                
                    
                    
                
            
            
                
                    
                
            
        
        
            
                
                    Pais:
                    
                        
                    Pais...
                
            
            
                
                    
                
            
            
                
                    +593 - ECUADOR
                    
                
            
        
        
            
                
                    Provincia:
                    
                        
                    Provincia...
                
            
            
                
                    Cantón:
                    
                        
                    Cantón...
                
            
            
        
        
            
                
                    02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                    
                
            
            
                
                    
                
            
        
        
            
                
                    
                
            
            
                
                    
                
            
        
    

                    
                        
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                        
                    
                    
                        
                            DATOS EMPRESA
                            
                                
                                    
                                        
                                            
                                            
                                        
                                        Convenio Institucional
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                
                                
                                    
                                        Pais Empresa:
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                        Provincia:
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                

                                
                                    
                                        Cantón:
                                        
                                            
                                        Cantón...
                                    
                                
                                
                                    
                                        Parroquia:
                                        
                                            
                                        Parroquia...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                

                                
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                                
                            
                        
                    
                    
                        CONVENIO INSTITUCIONALCod N° Cliente RUC Nombre Asesor 
                            
                                
                                    Cod
                                    N° Cliente
                                    RUC
                                    Nombre
                                    Asesor
                                
                            
                        
.datagrid-cell-c1-secuencial{width:32px}
.datagrid-cell-c1-numeroCliente{width:72px}
.datagrid-cell-c1-codigo{width:112px}
.datagrid-cell-c1-nombreUnido{width:282px}
.datagrid-cell-c1-nombre{width:282px}
.datagrid-cell-c9-secuencial{width:32px}
.datagrid-cell-c9-numeroCliente{width:72px}
.datagrid-cell-c9-codigo{width:112px}
.datagrid-cell-c9-nombreUnido{width:282px}
.datagrid-cell-c9-nombre{width:282px}

                    
                
                
                    
                        SITUACIÓN ECONÓMICA
                    
                
                
                    
                        
                            
                                
                                    Es Primer trabajo:
                                    
                                        
                                        
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    País Origen Ingresos:
                                    AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                
                            
                        
                        
                            
                                Ingresos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c2-nombreArrendador{width:197px}
.datagrid-cell-c2-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                ActivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c3-nombreArrendador{width:112px}
.datagrid-cell-c3-activos{width:72px}
.datagrid-cell-c3-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                        
                            
                                Gastos MesDescripción Valor 
                                    
                                        
                                            Descripción
                                            Valor
                                        
                                    
                                
.datagrid-cell-c4-nombreArrendador{width:212px}
.datagrid-cell-c4-activos{width:72px}

                                
                                    TOTAL:
                                    
                                
                            
                            
                                PasivosDescripción Valor Descripción 
                                    
                                        
                                            Descripción
                                            Valor
                                            Descripción
                                        
                                    
                                
.datagrid-cell-c5-nombreArrendador{width:142px}
.datagrid-cell-c5-activos{width:72px}
.datagrid-cell-c5-descripcionActividad{width:292px}

                                
                                    TOTAL:
                                    
                                
                            
                        
                    
                

                
                    
                        REFERENCIAS
                    
                
                
                    
                        
                            
                                
                                    REFERENCIAS BANCARIAS
                                
                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                

                            
                        
                        
                            
                                
                                
                                
                                    
                                        
                                        AHORROS
                                        CORRIENTE
                                        NINGUNO
                                    Tipo Cuenta...
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS PERSONALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    REFERENCIAS COMERCIALES
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                    
                                    
                                    
                                        02 - Pichincha, Sto. Domingo03 - Bolivar, Chimborazo, Cotopaxi, Tungurahua, Pastaza04 - Guayas, Santa Elena05 - Galápagos, Los Ríos, Manabí06 - Carchi, Esmeraldas, Imbabura, Napo, Orellana, Sucumbios07 - Azuay, Cañar, El Oro, Loja, Morona, Zamora
                                        
                                    
                                    
                                
                            
                        
                    

                

                
                    
                        OTROS
                    
                

                
                    
                        
                            
                                
                                    Propósito relación:
                                    
                                        
                                        AHORROS
                                        CDP
                                        COLOCACIONES
                                        SERVICIOS
                                        TODAS
                                    Propósito relación...
                                    Obligado a llevar Contabilidad:
                                    
                                        
                                        
                                    
                                    Es Gravamen:
                                    
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Condición firmas:
                                        
                                            
                                            Ninguna
                                            Conjuntas
                                            Indistintas
                                        Condición...
                                    
                                    
                                    

                                
                            
                        
                        
                            
                                
                                    
                                        Representante:
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Apoderado:
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    Tipo de poder:
                                
                                
                                    
                                    Especial
                                    
                                    General
                                    
                                    
                                
                            
                        
                        
    const HabilitaDeclaracionPeps = (chk) => {
        if (chk) {
            $(&quot;.DeclaracionPEPS&quot;).show();
        }
        else {
            $(&quot;.DeclaracionPEPS&quot;).hide();
        }
    };

    const CargaDeclaracionPep = (numeroCliente) => {
        const urlDatosNegocioPropio = &quot;~/odata/DeclaracionPep?$format=json&amp;$filter=numeroCliente eq {0} and activo eq true&amp;$select=secuencial,cargo,institucion,fechaNombramiento,fechaCulminacion&amp;$orderby=secuencial&quot;;
        return $.ajax({
            url: urlDatosNegocioPropio.replace(&quot;{0}&quot;, numeroCliente),
            dataType: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;
        });
    };


    
        Declaración PEPS: ¿Usted ha desempeñado en el último año, funciones o cargos púlicos destacados en el Ecuador o en el extranjero, o realizado funciones prominentes en una orfanización internacional en representación del país?
    
    
        
        
            
            
        
    


    
        
            
            
            
        
    


    
        
            Fecha de nombramiento de designación:
            
        

        
            Fecha de culminación del cargo:
            
        
    


    
        ¿Usted es familiar(Cónyuge o pareja en unión de hecho, y familiares hasta el segundo grado de consanguinidad y primero en afinidad), colaborador directo (Persona que se encuentre asociado(a) o vinculado(a) societariamente o mantiene realaciones empresariales, comerciales o laborales estrechas con una Persona Expuesta Políticamente (PEP))?
    
    
        
            
            
        
    


    
        
            
                PEP:
                
                
            
        
    

                    
                
                
                    
                        
                            
                                
                                
                            
                        

                        
                            
                                
                            
                            
                                
                            
                        
                        
                            
                                
                            
                            
                                
                            
                        
                    
                
            
        
    






    const NuevoClienteDatosBasicos = (identificacion, controlOrigen) => {
        if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
            if (VerificarNumeroCedula(identificacion)) {
                $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;470px&quot; , &quot;'&quot; , &quot; });
                tipoDocumento = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;
            }
            else {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula Incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El Número de Cédula ingresado es incorrecto.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                return;
            }
        }
        else {
            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;PASAPORTE&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
            $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
            $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
            $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
            $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
            $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;50px&quot; , &quot;'&quot; , &quot; });
            tipoDocumento = &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;
        }
        controlOrigenCedula = controlOrigen;
        CargarGrupoEconomico();
        CargaProvincias();
        CargaPaises();
        AbrirVentanaNuevoCliente();
    };











    $(document).ready(function () {

        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog({
            title: &quot; , &quot;'&quot; , &quot;INDICIOS CRS (Estandar Común de Reportes)&quot; , &quot;'&quot; , &quot;,
            position: &quot; , &quot;'&quot; , &quot;center&quot; , &quot;'&quot; , &quot;,
            draggable: true,
            collapsible: false,
            minimizable: false,
            maximizable: false,
            resizable: true,
            closable: false,
            width: &quot; , &quot;'&quot; , &quot;auto&quot; , &quot;'&quot; , &quot;,
            height: 380,
            closed: false,
            cache: false,
            modal: true
        });

        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);

        //controles a agregar verificación
        $(&quot;#cbPaisOrigen&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad1&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad2&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbNacionalidad3&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisResidencia&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#rbResideSI&quot;).change(function () { verificarCRSNatural() });
        $(&quot;#cbPaisOrigenRecursos&quot;).change(function () { verificarCRSNatural() });

    });

    function CierraDialogoCRSNatural() {
        $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);
    }

    function verificarCRSNatural() {
               
        var tipoDocumento = $(&quot; , &quot;'&quot; , &quot;#txtTipoIdentificacion&quot; , &quot;'&quot; , &quot;).val() || $(&quot;#cbTipoDocumento&quot;).val();
        var paisNacimiento = $(&quot;#cbPaisOrigen&quot;).val();
        var nacionalidad1 = $(&quot;#cbNacionalidad1&quot;).val();
        var nacionalidad2 = $(&quot;#cbNacionalidad2&quot;).val();
        var nacionalidad3 = $(&quot;#cbNacionalidad3&quot;).val();
        var paisResidencia = $(&quot;#cbPaisResidencia&quot;).val();
        var paisTrabajo = $(&quot;#cbPaisOrigenRecursos&quot;).val();
        var residenteFiscalEcuador = $(&quot; , &quot;'&quot; , &quot;input[name=radiog_reside]:checked&quot; , &quot;'&quot; , &quot;).val();

        
        if ((residenteFiscalEcuador &amp;&amp; residenteFiscalEcuador == &quot;S&quot;) &amp;&amp; (
            (tipoDocumento &amp;&amp; tipoDocumento.startsWith(&quot;P&quot;)) ||
            (paisNacimiento &amp;&amp; paisNacimiento != &quot;EC&quot;) ||
            (nacionalidad1 &amp;&amp; nacionalidad1 != &quot;ECU&quot;) ||
            (nacionalidad2 &amp;&amp; nacionalidad2 != &quot;ECU&quot;) ||
            (nacionalidad3 &amp;&amp; nacionalidad3 != &quot;ECU&quot;) ||
            (paisResidencia &amp;&amp; paisResidencia != &quot;EC&quot;) ||
            (paisTrabajo &amp;&amp; paisTrabajo != &quot;EC&quot;)))
        {
            $(&quot; , &quot;'&quot; , &quot;#dlgMensajeCRSNatural&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;open&quot; , &quot;'&quot; , &quot;);
        } 
    }


            
            
            
        
    
    
    
        $ = jQuery.noConflict();

        var codProvinciaEmpresa = &quot;&quot;;
        var codCantonEmpresa = 0;
        var numeroClienteConyugeGenerado = 0;
        var numeroClienteRepresentanteGenerado = 0;
        var numeroClienteApoderadoGenerado = 0;

        var codPais = 0;
        var numeroClienteGenerado;
        var secuencialCodigoClienteGenerado;
        var codigoUsuarioActual = (&quot; , &quot;'&quot; , &quot;CCEDENO&quot; , &quot;'&quot; , &quot;).trim().toUpperCase();
        var fechaSistema;
        var arrIngresos = new Array();
        var arrGastos = new Array();
        var arrActivos = new Array();
        var arrPasivos = new Array();
        var impresionFormularioPendiente;
        var direccionPersonaRegistroCivil;
        var base64StringFoto;
        var base64StringFirma;
        var consultarRegistroCivil = true;
        var IpCliente;
        ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        //MDJR 18/05/2017 funcion mejorada
        var field = $(&quot;#txtEmail&quot;);
        var hiddenField = $(&quot;#txtEmailOculto&quot;);
        var enmascarado;
        var paisGeneraDI;
        var arroba = &quot; , &quot;'&quot; , &quot;@&quot; , &quot;'&quot; , &quot;;
        var ocultar = &quot; , &quot;'&quot; , &quot;*&quot; , &quot;'&quot; , &quot;;
        var esCRSControles = false; //HabilitarControles
        var esCRSDatosEmpresa = false; //HabilitarDatosTrabajo
        var esCRSCiudadNacmientoExt = false; //HabilitarCiudadNacmientoExt
        var esCRSTributaExterior = false; //VerificaTributaExterior
        var offline = false;

        function EnmascararEmail(correo) {
            if (!isValidEmail(correo)) return correo;
            var email = correo.split(arroba);
            return oculta(email[0]) + arroba + email[1];
        }

        function oculta(inicial) {
            for (var i = 1; i &lt; inicial.length - 1; i++) {
                inicial = inicial.substr(0, i) + ocultar + inicial.substr(i + 1);
            }
            enmascarado = true;
            return inicial;
        }




        jQuery(function ($) {
            ////////////////////carga de combos para telefonos/////////////////////////////////

            $(&quot; , &quot;'&quot; , &quot;select.data-list-input&quot; , &quot;'&quot; , &quot;).change(function () {
                var that = this; //esto es eso
                var telefono = $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val();
                var codigo = $(that).val();
                switch (telefono.length) {
                    case 9:
                        $.each(codigosArea, function (key, value) {
                            if (telefono.substring(0, 2) == key) {
                                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo + telefono.substring(2, telefono.length));
                            }
                        });

                        break;
                    case 6:
                    case 7:
                        $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo + telefono);
                        break;
                    default:
                        $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).val(codigo);
                }
                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-input&quot; , &quot;'&quot; , &quot;).focus();
                $(that).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            });

            //Ingreso de prefijos para numero exterior, establece la seleccion en txtTelefonoExterior
            $(&quot; , &quot;'&quot; , &quot;select.data-list-inputext&quot; , &quot;'&quot; , &quot;).change(function () {
                var that = this; //esto es eso
                var telefonoext = $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).val();
                var codigoext = $(that).val();

                $.each(prefijosExterior, function (key, value) {
                    //if (telefonoext.substring(0, codigoext.length) == key) {
                    $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).val(codigoext );// +telefonoext.substring(codigoext.length, telefonoext.length)
                    //}
                });

                $(that).siblings(&quot; , &quot;'&quot; , &quot;input.data-list-inputext&quot; , &quot;'&quot; , &quot;).focus();
                $(that).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            });

            //Inicializo combos
            $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;TelefonoCom&quot; , &quot;'&quot; , &quot;).empty();
            $(&quot; , &quot;'&quot; , &quot;TelefonoCom1&quot; , &quot;'&quot; , &quot;).empty();


            $.each(codigosArea, function (key, value) {
                $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoCom&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $(&quot; , &quot;'&quot; , &quot;#TelefonoCom1&quot; , &quot;'&quot; , &quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + key + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
            });

            $(&quot; , &quot;'&quot; , &quot;#telefono1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#telefono2&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoPersonal1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoCom&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#TelefonoCom1&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

            //////////////////fin carga de combos para telefonos///////////////////////////////////////////

        });



        function formatValorItemIngreso(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorIngreso&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemIngreso(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatValorItemGasto(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorGasto&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemGasto(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }
        function formatValorItemActivo(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorActivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemActivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }
        function formatValorItemPasivo(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtValorPasivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarValorItemPasivo(this)&quot; onkeypress=&quot;return ValidateDecimalNumbers(event, this)&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatIngresoDescripcionActivos(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtDescripcionActivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;text-transform: uppercase;width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarDescripcionActivo(this)&quot; maxlength=&quot;100&quot; />&quot; , &quot;'&quot; , &quot;;
        }

        function formatIngresoDescripcionPasivos(val, row, index) {
            return &quot; , &quot;'&quot; , &quot;&lt;input id=&quot;txtDescripcionPasivo&quot; , &quot;'&quot; , &quot; + index + &quot; , &quot;'&quot; , &quot;&quot; style=&quot;text-transform: uppercase; width:90%&quot; type=&quot;text&quot; value=&quot;&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&quot; onchange=&quot;CambiarDescripcionPasivo(this)&quot; maxlength=&quot;100&quot; />&quot; , &quot;'&quot; , &quot;;
        }


        function CopiarCargoToDescripcion() {
            $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
        }

        function CambiarValorItemIngreso(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorIngreso&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalIngresos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemGasto(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorGasto&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalGastos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemActivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorActivo&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalActivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarValorItemPasivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtValorPasivo&quot; , &quot;'&quot; , &quot;)[1]].activos = tb.value == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? &quot;0&quot; : tb.value;
            $(&quot; , &quot;'&quot; , &quot;#txtTotalPasivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + ObtenerTotal(rowsItems));
        }

        function CambiarDescripcionActivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtDescripcionActivo&quot; , &quot;'&quot; , &quot;)[1]].descripcionActividad = tb.value.trim();
        }

        function CambiarDescripcionPasivo(tb) {
            var grid = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataItems = $.data(grid[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsItems = dataItems.rows;
            rowsItems[tb.id.split(&quot; , &quot;'&quot; , &quot;txtDescripcionPasivo&quot; , &quot;'&quot; , &quot;)[1]].descripcionActividad = tb.value.trim();
        }

        function ObtenerTotal(lista) {
            var total = 0;
            for (var i = 0; i &lt; lista.length; i++) {
                total += parseFloat(lista[i].activos);
            }
            return total.toFixed(2);
        }

        function BuscarPersonaRegistroCivil() {
            $ = jQuery.noConflict();
            if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtIdentificacion&quot;).val() == null) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; es requerido y máximo de 10 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (isNaN($(&quot;#txtIdentificacion&quot;).val().trim())) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; debe ser un número.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtIdentificacion&quot;).val().trim().length &lt; 10) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot; debe tener 10 dígitos.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#txtCodigoDactilar&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCodigoDactilar&quot;).val() == null) &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsMenorDeEdad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Código Dactilar&quot; es requerido.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCodigoDactilar&quot;).val().trim().length &lt; 6 &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsMenorDeEdad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Código Dactilar&quot; debe tener 6 caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else {
                
                var urlDatosRegistroCivil = &quot;osapi/ServiceCliente.svc/ObtenerDatosClienteDeRegistroCivil&quot;;
                $.ajax({
                    url: urlDatosRegistroCivil,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        clave: $(&quot;#txtCodigoDactilar&quot;).val().trim().toUpperCase(),
                        fechaIngreso: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(fechaSistema))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                        //fechaModificacion: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot; , &quot;'&quot; , &quot;#txtFechaExpedicion&quot; , &quot;'&quot; , &quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        offline = false;
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Estado == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
                            $(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
                            $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
                            $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;disabled&quot;, true);
                            $(&quot;#txtCodigoDactilar&quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueA&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueB&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueC&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueD&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#txtNombrePersona&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).show();
                            $(&quot;#txtGeneroPersona&quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#txtNombrePersona&quot; , &quot;'&quot; , &quot;).val(resultado.Nombre);
                            $(&quot;#txtEstadoCivilPersona&quot;).val(resultado.EstadoCivil);
                            $(&quot;#txtFechaNacimiento&quot;).val(resultado.FechaNacimiento);
                            $(&quot;#txtFechaExpedicion&quot;).val(&quot;F. Exp: &quot; + resultado.FechaExpedicion); //TODO: VERIFICAR EXISTEN 2 CONTROLES CON FECHA DE EXPEDICION

                            $(&quot;#cbEstadoCivil&quot;).val(resultado.EstadoCivilChar);
                            $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                            ValidarFechaNacimiento(document.getElementById(&quot; , &quot;'&quot; , &quot;txtFechaNacimiento&quot; , &quot;'&quot; , &quot;));
                            $(&quot;#txtFechaExpedicionPersona&quot;).val(resultado.FechaExpedicion);
                            if (resultado.ImageStringFoto != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#imgFotoPersonaMain&quot;).attr(&quot; , &quot;'&quot; , &quot;src&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;data:image/png;base64,&quot; , &quot;'&quot; , &quot; + resultado.ImageStringFoto);
                                base64StringFoto = resultado.ImageStringFoto;
                            }
                            if (resultado.ImageStringFirma != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#imgFirmaPersonaMain&quot;).attr(&quot; , &quot;'&quot; , &quot;src&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;data:image/png;base64,&quot; , &quot;'&quot; , &quot; + resultado.ImageStringFirma);
                                base64StringFirma = resultado.ImageStringFirma;
                            }

                            if (resultado.FechaDefuncion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; resultado.FechaDefuncion != null) {//MDJR 19/05/2017 daba falsos positivos cuando devolvia null
                                $.fn.window.defaults.closable = false;
                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Persona Fallecida&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La persona consultada falleció el &quot; , &quot;'&quot; , &quot; + resultado.FechaDefuncion + &quot; , &quot;'&quot; , &quot;. No se puede crear al cliente.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                                $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
                                $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
                            }

                            var arrayApellidosNombres = resultado.Nombre.split(&quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;);
                            var apellidosPersona = arrayApellidosNombres[0] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                            var nombresPersona;
                            for (var i = 1; i &lt; arrayApellidosNombres.length ; i++) {
                                if (i == 1)
                                    apellidosPersona = apellidosPersona + arrayApellidosNombres[1];
                                else if (i == 2)
                                    nombresPersona = arrayApellidosNombres[2] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                                else
                                    nombresPersona = nombresPersona + arrayApellidosNombres[i] + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot;;
                            }
                            $(&quot;#txtApellidos&quot;).val(apellidosPersona.trim());
                            $(&quot;#txtNombres&quot;).val(nombresPersona);
                            ValidaEstadoCivil(document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;));
                            if (resultado.EstadoCivilChar == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; || resultado.EstadoCivilChar == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#txtCedulaConyuge&quot;).val(resultado.NuiConyuge);
                                $(&quot;#txtNombreConyuge&quot;).val(resultado.NombreConyuge);
                                nombreConyugeRegistroCivil = resultado.NombreConyuge.trim();
                            }
                            if (resultado.SexoChar == &quot; , &quot;'&quot; , &quot;H&quot; , &quot;'&quot; , &quot;) {
                                $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                            }
                            else {
                                $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                            }
                            $(&quot;#txtSexoPersona&quot;).val(resultado.Sexo);
                            direccionPersonaRegistroCivil = resultado.Direccion;
                            if (resultado.GeneroChar != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; resultado.GeneroChar != null) {
                                $(&quot;#txtGeneroPersona&quot;).show();
                                $(&quot;#txtGeneroPersona&quot;).val(resultado.Genero);
                                if (resultado.GeneroChar == &quot; , &quot;'&quot; , &quot;M&quot; , &quot;'&quot; , &quot;) {
                                    $(&quot;#rbGeneroM&quot;).prop(&quot;checked&quot;, true);
                                }
                                else {
                                    $(&quot;#rbGeneroF&quot;).prop(&quot;checked&quot;, true);
                                }
                            }
                            //evito modificacion de datos

                            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:updated&quot; , &quot;'&quot; , &quot;);

                            $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivil&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivil&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:updated&quot; , &quot;'&quot; , &quot;);

                            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).prop(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);
                            $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, true);

                            $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).focus();
                        }
                        else if (verificaRespuestaRC(resultado.Estado, resultado.MensajeConsulta)) {
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.MensajeConsulta, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                        }
                        else
                        {
                           $.messager.confirm(mensajeServicioNoDisponible, mensajeRCNoDisponible, r => {
                               if (r) {
                                   offline = true;
                                   ActivaControlesPasaporte();
                                   $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).show();
                                }
                            });
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que valida y guarda los datos del cliente
        function GuardarDatos(e) {
            $ = jQuery.noConflict();
            //Se validan los campos.

            //*************************Comienza div de Datos********************************.
            if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;&quot; || $(&quot;#cbTipoDocumento&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Tipo documento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoDocumento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; &amp;&amp; $(&quot;#txtIdentificacion&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Documento&quot;es requerido !&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (consultarRegistroCivil == true &amp;&amp; $(&quot;#txtNombrePersona&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Consulte datos desde Registro Civil!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#txtApellidosPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidosPasaporte&quot;).val().trim().length > maxApellido) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxApellido + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidosPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtApellidos&quot;).val().trim() == &quot;&quot; || $(&quot;#txtApellidos&quot;).val().trim().length > maxApellido)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Apellidos&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxApellido + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNombres&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombres&quot;).val().trim().length > maxNombre)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxNombre + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; ($(&quot;#txtNombresPasaporte&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombresPasaporte&quot;).val().trim().length > maxNombre)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombres&quot; es requerido y debe tener una longitud máxima de &quot; , &quot;'&quot; , &quot; + maxNombre + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombresPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; (($(&quot;#txtApellidos&quot;).val().toUpperCase().trim() + &quot; , &quot;'&quot; , &quot; &quot; , &quot;'&quot; , &quot; + $(&quot;#txtNombres&quot;).val().toUpperCase().trim()) != $(&quot;#txtNombrePersona&quot;).val().toUpperCase().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El nombre ingresado es diferente al que consta en el Registro Civil&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot;&quot; || $(&quot;#cbEstadoCivilPasaporte&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado civil&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivilPasaporte&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;D.I. Conyuge&quot; es requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot;#txtCedulaConyuge&quot;).val().trim() != &quot;&quot;)) {
                
                var urlCedulaConyuge = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=codigo eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&quot;;
                $.ajax({
                    url: urlCedulaConyuge.replace(&quot;{0}&quot;, $(&quot;#txtCedulaConyuge&quot;).val().trim()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        
                        if (result.value.length > 0) {
                            numeroClienteConyuge = result.value[0].numeroCliente;
                            ContinuacionVerificacionIngresoDatos(e);
                        }
                        else {
                            $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                            DatosAbierto();
                            e.preventDefault();
                            $.fn.window.defaults.closable = false;
                            $.messager.confirm(&quot; , &quot;'&quot; , &quot;Confirmación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El conyuge no es cliente. ¿Desea crear uno nuevo?&quot; , &quot;'&quot; , &quot;, function (r) {
                                if (r) {
                                    $(&quot;#txtIdentificacionDatosBasicos&quot;).val($(&quot;#txtCedulaConyuge&quot;).val());
                                    controlOrigenCedula = &quot; , &quot;'&quot; , &quot;CedulaConyuge&quot; , &quot;'&quot; , &quot;;
                                    var identificacion = $(&quot;#txtIdentificacionDatosBasicos&quot;).val().trim();
                                    if (!isNaN(identificacion) &amp;&amp; identificacion.length == 10) {
                                        if (VerificarNumeroCedula(identificacion)) {
                                            $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).show();
                                            $(&quot;#imgBuscarPersonaRegistroCivil&quot;).show();
                                            $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).hide();
                                            $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                            $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).hide();
                                            $(&quot;#txtIdentificacionNuevoCliente&quot;).hide();
                                            $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;470px&quot; , &quot;'&quot; , &quot; });
                                            tipoDocumento = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;
                                        }
                                        else {
                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula Incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El Número de Cédula ingresado es incorrecto.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                                                opcion == 1 ? $(&quot;#txtCondicionFirmas&quot;).focus() : $(&quot;#txtCondicionFirmasNoAhorroMas&quot;).focus();
                                            });
                                            return;
                                        }
                                    }
                                    else {
                                        $(&quot;#txtIdentificacionDatosBasicos&quot;).val(identificacion);
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;PASAPORTE&quot; , &quot;'&quot; , &quot;);
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).val(identificacion);
                                        $(&quot;#MostrarCamposBusquedaRegistroCivil&quot;).hide();
                                        $(&quot;#MostrarOcultarDatosPersonaNombreImagenes&quot;).hide();
                                        $(&quot;#MostrarOcultarOtrosDatosPersona&quot;).hide();
                                        $(&quot;#MostrarOcultarApellidosNombresGrabar&quot;).show();
                                        $(&quot;#MostrarOcultarOtrosDatosGrabar&quot;).show();
                                        $(&quot;#txtTipoIdentificacionDatosBasicos&quot;).show();
                                        $(&quot;#txtIdentificacionNuevoCliente&quot;).show();
                                        $(&quot;#MostrarOcultarDatosComunGrabar&quot;).show();
                                        $(&quot;#divDatosPersonaRegistroCivil&quot;).css({ &quot; , &quot;'&quot; , &quot;width&quot; , &quot;'&quot; , &quot;: &quot; , &quot;'&quot; , &quot;50px&quot; , &quot;'&quot; , &quot; });
                                        tipoDocumento = &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot;
                                        //habilito edicion de nombres, apellidos y fecha nacimiento x ser nuevo
                                        $(&quot;#txtApellidosDatosBasicos&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
                                        $(&quot;#txtNombresDatosBasicos&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
                                        $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimientoDatosBasicos&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
                                    }
                                    //CargaPaises();
                                    //CargarGrupoEconomico();
                                    //CargaProvincias();

                                    AbrirVentanaNuevoCliente();
                                }
                            });
                        }
                    }
                });
            }
            else
                ContinuacionVerificacionIngresoDatos(e);
        }

        function ContinuacionVerificacionIngresoDatos(e) {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; $(&quot;#txtCedulaConyuge&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtNombreConyuge&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos requeridos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;D.I. Conyuge&quot; es requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; $(&quot;#txtFechaNacimiento&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nacimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbSexoMPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el Sexo del cliente.!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; $(&quot;#txtFechaNacimientoPasaporte&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nacimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimientoPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtEmail&quot;).val().trim() != &quot;&quot; &amp;&amp; (!isValidEmail($(&quot;#txtEmailOculto&quot;).val().trim()))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Email&quot; NO es una dirección válida!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtEmail&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; ($(&quot;#txtNumeroCargas&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargas&quot;).val().trim()) > maxNumeroCargas)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de cargas&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNumeroCargas + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargas&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; ($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim() == &quot;&quot; || parseInt($(&quot;#txtNumeroCargasPasaporte&quot;).val().trim()) > maxNumeroCargas)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de cargas&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNumeroCargas + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargasPasaporte&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (!($(&quot;#cbGrupoEtnico&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Grupo Étnico&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbGrupoEtnico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionIngresosConyuge&quot;).val()) &amp;&amp; ($(&quot;#cbEstadoCivil&quot;).val() == &quot;C&quot; || $(&quot;#cbEstadoCivil&quot;).val() == &quot;U&quot; )) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresosConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionIngresosConyuge&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDescripcionOtrosIngresos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtDescripcionOtrosIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionOtrosIngresos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtProcedenciaFondos&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#txtProcedenciaFondos&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;placeholder&quot; , &quot;'&quot; , &quot;) + &quot; , &quot;'&quot; , &quot; en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text() +&quot; , &quot;'&quot; , &quot; es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtProcedenciaFondos&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de depósitos en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDepositosNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtDepositosMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de depósitos en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDepositosMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de transferencias recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasRecibidasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasRecibidasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de transferencias recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasRecibidasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de transferencias enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasEnviadasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtTransferenciasEnviadasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de transferencias enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtTransferenciasEnviadasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de remesas recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasRecibidasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasRecibidasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de remesas recibidas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasRecibidasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el número de remesas enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasEnviadasNumeroTransacciones&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) &amp;&amp; !($(&quot;#txtRemesasEnviadasMonto&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).show();
                DebidaDiligenciaAmpliadaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el monto de remesas enviadas en &quot; , &quot;'&quot; , &quot; + $(&quot; , &quot;'&quot; , &quot;#h1DebidaDiligenciaAmpliada&quot; , &quot;'&quot; , &quot;).text(), &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtRemesasEnviadasMonto&quot; , &quot;'&quot; , &quot;).focus();  });
            }
                //*********************Comienza div de Dirección**********************************.
            else if ($(&quot;#cbPaisOrigen&quot;).val() == &quot;&quot; || $(&quot;#cbPaisOrigen&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País de origen&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigen&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DatosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese la ciudad de nacimiento&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSCiudadNacmientoExt &amp;&amp; $(&quot;#txtCiudadNacimiento&quot;).val().trim().length &lt; 5) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La longitud mínima de la ciudad de nacimiento es de 5 caracteres&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#txtCiudadNacimiento&quot;).focus();  });
            }
            else if (esCRSTributaExterior &amp;&amp; !($(&quot;#cbPaisDI&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione el país donde se generó el documento de identificación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#cbPaisDI&quot;).focus();  });
            }
            else if ($(&quot;#cbProvinciaReside&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbCantonReside&quot;).val() == &quot;&quot; || $(&quot;#cbCantonReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Canton reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbParroquiaReside&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaReside&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parroquia reside&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#txtDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccion&quot;).val().trim().length > maxDireccion) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxDireccion + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtNumCasa&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasa&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasa&quot;).val().trim().length > 10) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;#casa/edificio&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + 3 + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + 20 + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumCasa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtReferenciaDireccion&quot;).val().trim() == &quot;&quot; || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtReferenciaDireccion&quot;).val().trim().length > maxRefDireccion) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Referencia&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxRefDireccion + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtReferenciaDireccion&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe ingresar al menos un número de teléfono!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbNacionalidad1&quot;).val() == &quot;&quot; || $(&quot;#cbNacionalidad1&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nacionalidad 1&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad1&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;input:radio[name =&quot; , &quot;'&quot; , &quot;radiog_reside&quot; , &quot;'&quot; , &quot;]:checked&quot;).val() == undefined) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;¿Es residente fiscal en Ecuador?&quot; es requerido! en seccion Dirección&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {  });
            }
            else if ($(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Número de Identificación Tributaria en el Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#chkPaisObligacionTributaria&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; || $(&quot;#chkPaisObligacionTributaria&quot;).val() == null) &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País Obligación Tributaria&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot; , &quot;'&quot; , &quot;option:selected&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).size() == 0 &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País con obligación tributaria&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefono2&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if ($(&quot;#txtTelefono2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefono2&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe tener &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe comenzar &quot;09&quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe tener &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtCelular2&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCelular2&quot;).val().trim().substring(0, 2) != &quot;09&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Celular requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de celular debe comenzar &quot;09&quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoVivienda&quot;).val() == &quot;&quot; || $(&quot;#cbTipoVivienda&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Tipo vivienda&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoVivienda&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //*********************Comienza div de Ocupación**********************************.
            else if ($(&quot;#cbEducacion&quot;).val() == &quot;&quot; || $(&quot;#cbEducacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Educación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEducacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //  else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
            else if (($(&quot;#cbEstablecimiento&quot;).val() == &quot;&quot; || $(&quot;#cbEstablecimiento&quot;).val() == null) &amp;&amp; (calcAge($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
                //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Establecimiento&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Ocupación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == null)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Origen ingresos&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbOcupacion&quot;).val() == &quot;&quot; || $(&quot;#cbOcupacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Ocupación&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbProfesionSBS&quot;).val() == &quot;&quot; || $(&quot;#cbProfesionSBS&quot;).val() == null) &amp;&amp; ($(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEducacion&quot;).val() != &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Profesion SBS&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbGrupoEconomico&quot;).val() == &quot;&quot; || $(&quot;#cbGrupoEconomico&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Grupo economico&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if ($(&quot;#cbClasificacionActividad&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividad&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Clasificacion actividad&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtNombreEmpleador&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNombreEmpleador&quot;).val().trim().length > maxNombreEmpleador) ) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre/Razón social empleador&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxNombreEmpleador + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).focus(); });
            }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtNombreNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtNombreNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#cbPaisNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione pais del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbPaisNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#txtEstadoNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado Empresa&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtEstadoNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbProvinciaNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione provincia del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; EsNegocioLocal($(&quot;#cbPaisNegocioPropio&quot;).val()) &amp;&amp; !($(&quot;#cbCantonNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione cantón del negocio propio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#cbCantonNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtDireccionNegocioPropio&quot;).val()) ) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtDireccionNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
           else if (TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp; !($(&quot;#txtCargoNegocioPropio&quot;).val())) {
                 $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                 $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                 OcupacionAbierto();
                 e.preventDefault();
                 $.fn.window.defaults.closable = false;
                 $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo negocio&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtCargoNegocioPropio&quot; , &quot;'&quot; , &quot;).focus(); });
           }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;&quot; &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;País Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#txtPaisEstadoEmpresa&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Estado Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtPaisEstadoEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val() == &quot;&quot; &amp;&amp; esCRSDatosEmpresa &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono Exterior&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null || $(&quot;#cbProvinciaPublico&quot;).val() == &quot;0&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Canton&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbParroquiaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbParroquiaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parroquia&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbCantonPublico&quot;).val() == &quot;&quot; || $(&quot;#cbCantonPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cantón&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim() == &quot;&quot;) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoExterior&quot;).val().trim() == &quot;&quot;) &amp;&amp; esCRSDatosEmpresa) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length &lt; 9)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length == 9) &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPublico&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoPublico&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPublico&quot;).val().trim().length > 9)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; máximo debe tener 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ////////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().length &lt; minLengthCel)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularEmpresa&quot;).val().trim().substring(0, 2) != &quot;09&quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ///////////////////////////////////////////////////////////////1
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtDireccionPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtDireccionPublico&quot;).val().trim().length &lt; minLengthDir || $(&quot;#txtDireccionPublico&quot;).val().trim().length > maxDireccionPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + minLengthDir + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + maxDireccionPublico + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxCargoPublico + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) &amp;&amp; ($(&quot;#txtCargoPublico&quot;).val().trim() == &quot;&quot; || $(&quot;#txtCargoPublico&quot;).val().trim().length > maxCargoPublico)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxCargoPublico + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) &amp;&amp; getSelected() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe seleccionar una empresa de convenio institucional!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Descripción Actividad Económica Actual&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTiempoTrabajo&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Tiempo en el trabajo&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTiempoTrabajo&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //*********************Comienza Situacion Economica**********************************.
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;) &amp;&amp;
                $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; ($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == null)) {
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;F. Inicio Trabajo Anterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#cbOrigenIngresos&quot;).val() == &quot;V&quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;) &amp;&amp;
                $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false &amp;&amp; ($(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == null)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;F. Fin Trabajo Anterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //MDJR 2017/04/07 Ingresos y Egresos deben ser mayor que 0
            else if ($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ((calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El total de Ingresos Mes y Gastos Mes no deben ser cero&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtValorIngreso0&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; ((calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) &amp;&amp; parseInt($(&quot;#txtTotalIngresos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0 ||
                parseInt($(&quot;#txtTotalGastos&quot;).val().trim().replace(/[^0-9\.]+/g, &quot;&quot;)) &lt;= 0)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
                SituacionEconomicaAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El total de Ingresos Mes y Gastos Mes no deben ser cero&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtValorIngreso0&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Personal 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Es requerido que ingrese un número telefónico convencional o celular&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                /////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener máximo 9 dígitos!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar &quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Parentesco&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Personal 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //////////////////////////////////////////////////////////////////////////1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtParentesco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////2
                /////////////////////////////////////////////////////3
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombrePersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombrePersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionPersonal1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtParentesco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Personales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////3
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoPersonal1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoPersonal1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPersonal1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelular1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelular1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelular1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Bancaria 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta&quot;).val() == null || $(&quot;#cbTipoCuenta&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Bancaria 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() == &quot;&quot; || $(&quot;#cbTipoCuenta1&quot;).val() == null || $(&quot;#cbTipoCuenta1&quot;).val() == &quot;N&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbTipoCuenta&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtBanco1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtBanco1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#cbTipoCuenta1&quot;).val() != &quot;N&quot; &amp;&amp; $(&quot;#cbTipoCuenta1&quot;).val() != &quot;&quot;) &amp;&amp; $(&quot;#txtCuenta1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Bancarias&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCuenta1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //Referencia Comercial 1
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                ////////////////////////////////////////////////////////////////////////

                //Referencia Comercial 2
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() == &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtNombreCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; ($(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; || $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot;) &amp;&amp; $(&quot;#txtDireccionCom1&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Datos Incompletos en Referencias Comerciales&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                //else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 6) {
                //    $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                //    $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                //    ReferenciasAbierto()
                //    e.preventDefault();
                //    $.fn.window.defaults.closable = false;
                //    $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar mínimo de 6 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
                //}
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length &lt; 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de teléfono debe tener 9 dígitos incluido el código de provincia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length == 9 &amp;&amp; !validaTelefono($(&quot;#txtTelefonoCom1&quot;).val().trim())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Teléfono inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código de provincia correspondiente&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////0
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCom1&quot;).val().trim().length > 9) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Teléfono&quot; debe constar máximo de 9 dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
                /////////////////////////////////////////////////////////////////////////////////////////////
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim().length &lt; minLengthCel) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe constar de&quot; , &quot;'&quot; , &quot; + minLengthCel + &quot; , &quot;'&quot; , &quot; dígitos&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) &amp;&amp; $(&quot;#txtTelefonoCelularCom1&quot;).val().trim() != &quot;&quot; &amp;&amp; ($(&quot;#txtTelefonoCelularCom1&quot;).val().trim().substring(0, 2) != &quot;09&quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).show();
                ReferenciasAbierto()
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Celular&quot; debe comenzar &quot;09&quot;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularCom1&quot; , &quot;'&quot; , &quot;).focus(); });
            }

                //*********************Comienza div de Otros**********************************.
            else if ($(&quot;#cbPropositoRelacion&quot;).val() == &quot;&quot; || $(&quot;#cbPropositoRelacion&quot;).val() == null) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Proposito relacion&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPropositoRelacion&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
            }
                //MDJR 06/06/2017 Por favor se requiere cuando una persona es menor de edad y registra estado civil casada el sistema no requiere ingresar un representante
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; !offline &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cédula&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxRepresentante + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if (($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; ($(&quot;#txtRepresentante&quot;).val().trim() == &quot;&quot; || $(&quot;#txtRepresentante&quot;).val().trim().length > maxRepresentante)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cédula&quot; es requerido y no debe exceder &quot; , &quot;'&quot; , &quot; + maxRepresentante + &quot; , &quot;'&quot; , &quot; caracteres!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).focus(); });
            }

            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbPoderE&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !$(&quot; , &quot;'&quot; , &quot;#rbPoderG&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Seleccione tipo de poder&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#rbPoderG&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtFechaEmision&quot;).val().trim() == &quot;&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha emisión&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtFechaEmision&quot; , &quot;'&quot; , &quot;).focus(); });
            }
            else if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#txtApoderado&quot;).val().trim() == $(&quot;#txtIdentificacion&quot;).val().trim()) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Ingreso inválido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente no puede ser apoderado de si mismo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                    $(&quot;#txtNombreApoderado&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtFechaEmision&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot;#txtFechaCaducidad&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtFechaEmision&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
                    $(&quot; , &quot;'&quot; , &quot;#txtApoderado&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); $(&quot; , &quot;'&quot; , &quot;#txtApoderado&quot; , &quot;'&quot; , &quot;).focus();
                });
            }

            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().trim().length == 0) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el código postal del pais de residencia&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionDomicilioExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (esCRSControles &amp;&amp; $(&quot;#txtCodigoPostal&quot;).val().length &lt; 3) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;La longitud mínima del código postal es de 5 caracteres&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCodigoPostal&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtDireccionDomicilioExterior&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Dirección Domicilio Exterior&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtDireccionDomicilioExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtPaisEstado&quot;).val().trim() == &quot;&quot; &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Pais Estado&quot; es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtPaisEstado&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#txtNumCasaExterior&quot;).val().trim() == &quot;&quot; || $(&quot;#txtNumCasaExterior&quot;).val().trim().length &lt; 3 || $(&quot;#txtNumCasaExterior&quot;).val().trim().length > 10) &amp;&amp; esCRSControles) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;#casa/edificio exterior&quot; es requerido, debe tener al menos &quot; , &quot;'&quot; , &quot; + 3 + &quot; , &quot;'&quot; , &quot; caracteres y máximo &quot; , &quot;'&quot; , &quot; + 10 + &quot; , &quot;'&quot; , &quot;!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNumCasaExterior&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; ($(&quot;#cbProvinciaPublico&quot;).val() == &quot;&quot; || $(&quot;#cbProvinciaPublico&quot;).val() == null) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == &quot;EC&quot;) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Provincia&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false) &amp;&amp; $(&quot;#cbPaisEmpresa&quot;).val() == null &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;))) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOcupacion&quot; , &quot;'&quot; , &quot;).show();
                $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
                //CargaProvinciasEmpresa();
                OcupacionAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Pais Empresa&quot; en Datos Empresa es requerido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp;  !($(&quot;#txtCargoDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtCargoDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#txtInstitucionDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Institución&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtInstitucionDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val())) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Fecha de nombramiento de designación&quot; en la Declaración PEPS es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, () => { $(&quot; , &quot;'&quot; , &quot;#txtFechaNombramientoDeclaracionPEPS&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else if ($(&quot;#txtNombreUnidoPEP&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Nombre Unido PEP&quot; en la sección Otros es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtNombreUnidoPEP&quot; , &quot;'&quot; , &quot;).focus();  });
            }

            else if ($(&quot;#txtCargoPEP&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divOtros&quot; , &quot;'&quot; , &quot;).show();
                OtrosAbierto();
                e.preventDefault();
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El campo &quot;Cargo&quot; en la sección Otros es obligatorio&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtCargoPEP&quot; , &quot;'&quot; , &quot;).focus();  });
            }
            else {
                abrirModalOportunidad(listaCaptaciones);
                //Se previene el envio de datos directos de form en submit.
                e.preventDefault();
                var urlValidaIdentificacion = &quot;osapi/ServiceCliente.svc/ValidaIdentificacionExistente&quot;;
                //Se valida si existe un cliente con la misma identificación, en estado activo.
                
                $.ajax({
                    url: urlValidaIdentificacion,
                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        tipo: $(&quot;#cbTipoDocumento&quot;).val()
                    }),
                    dataType: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (result) {
                        //Si la cédula ingresada no existe, se graba al cliente.
                        if (result.Correcto) {
                            grabarClienteNatural();
                        }
                        else {
                            
                            $.fn.window.defaults.closable = false;
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                        }
                    },
                    error: ajaxError
                });
            }
        }

        //Función que graba los datos del nuevo cliente natural
        function grabarClienteNatural() {

            var grdListIngresos = $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;);
            var dataListIngresos = $.data(grdListIngresos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListIngresos = dataListIngresos.rows;

            var grdListGastos = $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;);
            var grdListGastos = $.data(grdListGastos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListGastos = grdListGastos.rows;

            var grdListActivos = $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;);
            var dataListActivos = $.data(grdListActivos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListActivos = dataListActivos.rows;

            var grdListPasivos = $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;);
            var dataListPasivos = $.data(grdListPasivos[0], &quot; , &quot;'&quot; , &quot;datagrid&quot; , &quot;'&quot; , &quot;).data;
            var rowsListPasivos = dataListPasivos.rows;

            var rowsPaisObligacionTributaria = $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).val();
            var rowsNumeroIdentificacionTributariaExterior = $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior&quot; , &quot;'&quot; , &quot;).val();
            var rowsPaisObligacionTributaria2 = $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria2&quot; , &quot;'&quot; , &quot;).val();
            var rowsNumeroIdentificacionTributariaExterior2 = $(&quot; , &quot;'&quot; , &quot;#txtNumeroIdentificacionTributariaExterior2&quot; , &quot;'&quot; , &quot;).val();

            paisesObligacionesTributarias = {
                itemsPaisesObligacionesTributariasGrabar: []
            };

            if (rowsPaisObligacionTributaria != null) {
                if (rowsPaisObligacionTributaria.length > 0) {
                    paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                        &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                        &quot;codigoPais&quot;: rowsPaisObligacionTributaria,
                        &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior
                    });
                    if (rowsPaisObligacionTributaria2 != null &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior2&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                        if (rowsPaisObligacionTributaria2.length > 0) {
                            paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar.push({
                                &quot;numeroCliente&quot;: $(&quot;#txtNumeroCliente&quot;).val(),
                                &quot;codigoPais&quot;: rowsPaisObligacionTributaria2,
                                &quot;numeroIdentificacionTributariaExterior&quot;: rowsNumeroIdentificacionTributariaExterior2
                            });
                        }
                    }

                }
            }
            else {
                itemsPaisesObligacionesTributariasGrabar: []
            }

            listaItemsEconomicosPatrimoniales = {
                itemsEconomicosPatrimonialesGrabar: []
            };


            if (rowsListIngresos.length > 0) {
                for (var i = 0; i &lt; rowsListIngresos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListIngresos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListIngresos[i].activos),
                        &quot;descripcion&quot;: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                        &quot;numeroVerificador&quot;: 1
                    });
                }
            }

            if (rowsListGastos.length > 0) {
                for (var i = 0; i &lt; rowsListGastos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListGastos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListGastos[i].activos),
                        &quot;descripcion&quot;: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                        &quot;numeroVerificador&quot;: 2
                    });
                }
            }

            if (rowsListActivos.length > 0) {
                for (var i = 0; i &lt; rowsListActivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListActivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListActivos[i].activos),
                        &quot;descripcion&quot;: rowsListActivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 3
                    });
                }
            }

            if (rowsListPasivos.length > 0) {
                for (var i = 0; i &lt; rowsListPasivos.length; i++) {
                    listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar.push({
                        &quot;codigoItem&quot;: rowsListPasivos[i].tiempoResidencia,
                        &quot;valor&quot;: parseFloat(rowsListPasivos[i].activos),
                        &quot;descripcion&quot;: rowsListPasivos[i].descripcionActividad,
                        &quot;numeroVerificador&quot;: 4
                    });
                }
            }
            if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || offline) {
                $(&quot;#txtApellidos&quot;).val($(&quot;#txtApellidosPasaporte&quot;).val());
                $(&quot;#txtNombres&quot;).val($(&quot;#txtNombresPasaporte&quot;).val());
                $(&quot;#txtFechaNacimiento&quot;).val($(&quot;#txtFechaNacimientoPasaporte&quot;).val());
                if ($(&quot; , &quot;'&quot; , &quot;#rbSexoHPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, false);
                }
                if ($(&quot; , &quot;'&quot; , &quot;#rbSexoMPasaporte&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                    $(&quot;#rbSexoM&quot;).prop(&quot;checked&quot;, true);
                    $(&quot;#rbSexoH&quot;).prop(&quot;checked&quot;, false);
                }
                $(&quot;#txtNumeroCargas&quot;).val($(&quot;#txtNumeroCargasPasaporte&quot;).val());
                var identificaconPasaporte = $(&quot;#txtIdentificacion&quot;).val().trim();
                $(&quot;#txtIdentificacion&quot;).val(identificaconPasaporte.toUpperCase());
            }

            var telefonoReferenciaPersonal_1 = $(&quot;#txtTelefonoPersonal&quot;).val();
            if ($(&quot;#txtTelefonoCelular&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaPersonal_1 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelular&quot;).val();

            var telefonoReferenciaPersonal_2 = $(&quot;#txtTelefonoPersonal1&quot;).val();
            if ($(&quot;#txtTelefonoCelular1&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaPersonal_2 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelular1&quot;).val();

            var telefonoReferenciaComercial_1 = $(&quot;#txtTelefonoCom&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaComercial_1 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularCom&quot;).val();

            var telefonoReferenciaComercial_2 = $(&quot;#txtTelefonoCom1&quot;).val();
            if ($(&quot;#txtTelefonoCelularCom1&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoReferenciaComercial_2 += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularCom1&quot;).val();

            var telefonoEmpresa = $(&quot;#txtTelefonoPublico&quot;).val();
            if ($(&quot;#txtTelefonoCelularEmpresa&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                telefonoEmpresa += &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + $(&quot;#txtTelefonoCelularEmpresa&quot;).val();

            var urlNuevoCliente = &quot;osapi/ServiceCliente.svc/GrabarCliente&quot;;
            var urlNuevoDatosConvenio = &quot;osapi/ServiceCliente.svc/GrabarDatosConvenio&quot;;
            var urlNuevoDatosEmpresa = &quot;osapi/ServiceCliente.svc/GrabarDatosEmpresa&quot;;
            var urlNuevoApoderado = &quot;osapi/ServiceCliente.svc/GrabarDatosApoderado&quot;;
            var urlNuevoEstablecimiento = &quot;osapi/ServiceCliente.svc/GrabarDatosEstablecimiento&quot;;

            var generoChar = null;
            if ($(&quot; , &quot;'&quot; , &quot;#rbGeneroM&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;))
                generoChar = $(&quot; , &quot;'&quot; , &quot;#rbGeneroM&quot; , &quot;'&quot; , &quot;).val();
            else if ($(&quot; , &quot;'&quot; , &quot;#rbGeneroF&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;))
                generoChar = $(&quot; , &quot;'&quot; , &quot;#rbGeneroF&quot; , &quot;'&quot; , &quot;).val();

            
            $.ajax({
                url: urlNuevoCliente,
                type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                data: JSON.stringify(
                    {
                        Cliente: {
                            codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                            tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                            direccionDomicilio: $(&quot;#txtDireccion&quot;).val().trim(),
                            telefonoDomicilio: $(&quot;#txtTelefono1&quot;).val().trim(),
                            email: $(&quot;#txtEmailOculto&quot;).val().trim(),
                            paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                            nacionalidad1: $(&quot;#cbNacionalidad1&quot;).val(),
                            nacionalidad2: $(&quot;#cbNacionalidad2&quot;).val(),
                            nacionalidad3: $(&quot;#cbNacionalidad3&quot;).val(),
                            zonaReside: $(&quot;#cbParroquiaReside&quot;).val().split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[1],
                            representantePrincipal: $(&quot;#txtRepresentante&quot;).val().trim(),
                            representanteSecundario: &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                            estado: &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;,
                            nombreUnido: $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim(),
                            sectorEconomico: &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;,
                            vinculo: 1,
                            puedeSerSocio: 0,
                            numeroVerificador: 1,
                            codigoUsuarioModifico: codigoUsuarioActual,
                            referencia: $(&quot;#txtReferenciaDireccion&quot;).val().trim(),
                            codigoGrupo: $(&quot;#cbGrupoEconomico&quot;).val().trim(),
                            telefono2: $(&quot;#txtTelefono2&quot;).val().trim(),
                            celular1: $(&quot;#txtCelular1&quot;).val().trim(),
                            celular2: $(&quot;#txtCelular2&quot;).val().trim(),
                            propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                            esMigrante: $(&quot; , &quot;'&quot; , &quot;#chkMigrante&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                            ciudadNacimiento: esCRSCiudadNacmientoExt ? $(&quot;#txtCiudadNacimiento&quot;).val() || null : null,
                            nCasa: $(&quot;#txtNumCasa&quot;).val() || 0,
                            codigoPostal: $(&quot;#txtCodigoPostal&quot;).val(),
                            paisGeneraDI: $(&quot;#cbPaisDI&quot;).val() || null,
                            esResidenteEC: $(&quot;input:radio[name =&quot; , &quot;'&quot; , &quot;radiog_reside&quot; , &quot;'&quot; , &quot;]:checked&quot;).val() == &quot;S&quot; ? true : false,
                            calleSecundaria: $(&quot;#txtCalleSecundaria&quot;).val().trim().toUpperCase(),
                            correoValido: estaValidadoCorreo
                        },
                        EmailAsesor: (localStorage[&quot;emailAsesor&quot;] == undefined || localStorage[&quot;emailAsesor&quot;] == &quot;null&quot; || localStorage[&quot;emailAsesor&quot;] == &quot;oficialseguridad@oscus.coop&quot;) ? codigoUsuarioActual : localStorage[&quot;emailAsesor&quot;],
                        IdCrm: localStorage[&quot;idOportunidadCrm&quot;] == undefined || localStorage[&quot;idOportunidadCrm&quot;] == &quot;null&quot; ? &quot;&quot; : localStorage[&quot;idOportunidadCrm&quot;],
                        ClienteModelo: {
                            clienteNatural: {
                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                nombre: $(&quot;#txtNombres&quot;).val().trim(),
                                apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                                queSexo: $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) ? $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).val() : $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).val(),
                                queGenero: generoChar,
                                estadoCivil: $(&quot;#cbEstadoCivil&quot;).val(),
                                numeroCargas: $(&quot;#txtNumeroCargas&quot;).val().trim(),
                                esDependiente: $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot; ? 0 : 1,
                                nivelEducacion: $(&quot;#cbEducacion&quot;).val(),
                                queVivienda: $(&quot;#cbTipoVivienda&quot;).val(),
                                fechaNacimiento: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNacimiento&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                queProfesion: $(&quot;#cbOcupacion&quot;).val(),
                                esNacional: $(&quot; , &quot;'&quot; , &quot;#chkEsNacional&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                queActividadEconomica: $(&quot;#cbClasificacionActividad&quot;).val().trim(),
                                numeroverificador: 1,
                                esGravamen: $(&quot; , &quot;'&quot; , &quot;#chkGravamen&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                obligadoLlevarContabilidad: $(&quot; , &quot;'&quot; , &quot;#chkLlevarContabilidad&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 0 : 1,
                                tipoFirma: &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;, //MDJR 2017/04/13 SIEMPRE N
                                clienteFirma: 0,
                                origenIngresos: $(&quot;#cbOrigenIngresos&quot;).val() == &quot;&quot; ? &quot;N&quot; : $(&quot;#cbOrigenIngresos&quot;).val(),
                                profesionSBS: $(&quot;#cbProfesionSBS&quot;).val(),
                                tieneApoderado: $(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot; ? 0 : 1,
                                paisResidencia: $(&quot;#cbPaisResidencia&quot;).val().trim(),
                                nacionalidadAmericana: $(&quot; , &quot;'&quot; , &quot;#chkNacionalidadAmericana&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                enUnionLibre: $(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                conDisolucionConyugal: $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                paisEstado: esCRSControles ? $(&quot;#txtPaisEstado&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                direccionDomicilioExterior: esCRSControles ? $(&quot;#txtDireccionDomicilioExterior&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                tributaExterior: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                nCasaExterior: esCRSControles ? $(&quot;#txtNumCasaExterior&quot;).val().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroIdentificacionTributariaExterior: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).val().toUpperCase() : &quot;&quot;,
                                secuencialGrupoEtnico: $(&quot;#cbGrupoEtnico&quot;).val()
                            },
                            //para calcular el nivel riesgo y revisar actividad cliente
                            cliente: {
                                codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                                tipo: $(&quot;#cbTipoDocumento&quot;).val(),
                                propositoRelacion: $(&quot;#cbPropositoRelacion&quot;).val(),
                                paisOrigen: $(&quot;#cbPaisOrigen&quot;).val(),
                                nivelRiesgo: 0,
                                codigoUsuarioModifico: codigoUsuarioActual
                            },
                            referenciaComercial: {
                                nombre: $(&quot;#txtNombreCom&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom&quot;).val(),
                                telefono: telefonoReferenciaComercial_1,
                                prioridad: 1,
                                numeroVerificador: 1
                            },
                            referenciaBancaria: {
                                nombreBanco: $(&quot;#txtBanco&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta&quot;).val(),
                                prioridad: 1,
                                tipoCuenta: $(&quot;#cbTipoCuenta&quot;).val() || &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroVerificador: 1
                            },
                            referenciaPersonal: {
                                nombre: $(&quot;#txtNombrePersonal&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal&quot;).val(),
                                telefono: telefonoReferenciaPersonal_1,
                                prioridad: 1,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco&quot;).val()
                            },
                            referenciaComercialNatural: {
                                nombre: $(&quot;#txtNombreCom1&quot;).val(),
                                direccion: $(&quot;#txtDireccionCom1&quot;).val(),
                                telefono: telefonoReferenciaComercial_2,
                                prioridad: 2,
                                numeroVerificador: 1
                            },
                            referenciaBancariaNatural: {
                                nombreBanco: $(&quot;#txtBanco1&quot;).val(),
                                numeroCuenta: $(&quot;#txtCuenta1&quot;).val(),
                                prioridad: 2,
                                tipoCuenta: $(&quot;#cbTipoCuenta1&quot;).val() || &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                numeroVerificador: 1
                            },
                            referenciaPersonalNatural: {
                                nombre: $(&quot;#txtNombrePersonal1&quot;).val(),
                                direccion: $(&quot;#txtDireccionPersonal1&quot;).val(),
                                telefono: telefonoReferenciaPersonal_2,
                                prioridad: 2,
                                numeroVerificador: 1,
                                parentesco: $(&quot;#txtParentesco1&quot;).val()
                            },
                            datoCrediticio: {
                                tiempoResidencia: 1,
                                numeroConyuge: numeroClienteConyuge,
                                codigoUsuarioModifico: codigoUsuarioActual,
                                descripcionActividad: $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                tiempoActividad: $(&quot;#txtTiempoTrabajo&quot;).val().trim() == &quot;&quot; ? 0 : $(&quot;#txtTiempoTrabajo&quot;).val().trim(),
                                actividadSecundaria: ($(&quot;#cbClasificacionActividadSecundaria&quot;).val() == &quot;&quot; || $(&quot;#cbClasificacionActividadSecundaria&quot;).val() == null) ? null : $(&quot;#cbClasificacionActividadSecundaria&quot;).val(),
                                fechaInicioTrabajoAnterior: $(&quot;#txtFechaInicioTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaInicioTrabajoAnterior&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                fechaSalidaTrabajoAnterior: $(&quot;#txtFechaFinTrabajoAnterior&quot;).val().trim() == &quot;&quot; ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot;01/01/1960&quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaFinTrabajoAnterior&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                paisResidencia: $(&quot;#cbPaisOrigenRecursos&quot;).val().trim()
                            },
                            //se usa la clase DatoCrediticio para enviar otros datos
                            datosIngresosEgresos: {
                                ingresos: $(&quot;#txtIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtIngresos&quot;).val() : 0,
                                activos: $(&quot;#txtIngresosAdicionales&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtIngresosAdicionales&quot;).val() : 0,
                                egresos: $(&quot;#txtEgresos&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtEgresos&quot;).val() : 0,
                            },
                            datosPersonaRegistroCivil: {
                                numeroCliente: ($(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) ? $(&quot;#txtNumeroCliente&quot;).val() : 0,
                                fechaExpedicion: ($(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot; , &quot;'&quot; , &quot;#txtFechaExpedicionPersona&quot; , &quot;'&quot; , &quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate(&quot; , &quot;'&quot; , &quot;01/01/1990&quot; , &quot;'&quot; , &quot;))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                direccion: direccionPersonaRegistroCivil,
                                usuarioSkype: $(&quot;#txtUsuarioSkype&quot;).val().trim(),
                                usuarioFacebook: $(&quot;#txtUsuarioFacebook&quot;).val().trim(),
                                codigoDactilar: $(&quot;#txtCodigoDactilar&quot;).val().trim(),
                            },
                            pepsClientes: {
                                numeroCliente: $(&quot;#txtNumeroCliente&quot;).val(),
                                esCargoEleccion: $(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                esRelacionPersonaPolitica: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? 1 : 0,
                                nombreUnidoPEP: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtNombreUnidoPEP&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtNombreUnidoPEP&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                cargoPEP: $(&quot; , &quot;'&quot; , &quot;#chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? $(&quot;#txtCargoPEP&quot;).val() != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtCargoPEP&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                            },
                            paisesObligacionesTributarias: $(&quot; , &quot;'&quot; , &quot;#chkTributaExterior&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true ? paisesObligacionesTributarias.itemsPaisesObligacionesTributariasGrabar : [],
                            listaItemsEconomicosPatrimoniales: listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar,
                            geoReferenciacionClientes: {
                                latitudDomicilio: modificoGeoDomicilio ? latitudDomicilio : null,
                                longitudDomicilio: modificoGeoDomicilio ? longitudDomicilio : null,
                                usuarioActualiza: codigoUsuarioActual,
                            },
                            Offline: offline,
                            ConsultoRegistroCivil: consultarRegistroCivil,
                            DatoNegocioPropio: (!TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()) &amp;&amp;  !( $(&quot;#SecuencialDatoNegocioPropio&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDatoNegocioPropio&quot;).val() || 0,
                                ruc: $(&quot;#txtRucNegocioPropio&quot;).val(),
                                nombreNegocio: $(&quot;#txtNombreNegocioPropio&quot;).val(),
                                codigoPais: $(&quot;#cbPaisNegocioPropio&quot;).val(),
                                estado: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;? $(&quot;#txtEstadoNegocioPropio&quot;).val() : null,
                                telefonoExterior: $(&quot;#cbPaisNegocioPropio&quot;).val() != &quot;EC&quot;?  $(&quot;#txtTelefonoExteriorNegocioPropio&quot;).val() : null,
                                codigoProvincia: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbProvinciaNegocioPropio&quot;).val(): null,
                                secuencialCanton: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#cbCantonNegocioPropio&quot;).val() : null,
                                telefono: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;?  $(&quot;#txtTelefonoNegocioPropio&quot;).val() : null,
                                celular: $(&quot;#cbPaisNegocioPropio&quot;).val() == &quot;EC&quot;? $(&quot;#txtCelularNegocioPropio&quot;).val() :null,
                                direccion: $(&quot;#txtDireccionNegocioPropio&quot;).val(),
                                cargo: $(&quot;#txtCargoNegocioPropio&quot;).val(),
                                activo: TieneNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val()),
                                codigoUsuario: codigoUsuarioActual
                            },
                            DeclaracionPep:  (!$(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) &amp;&amp; !($(&quot;#SecuencialDeclaracionPep&quot;).val()))? null: {
                                secuencial: $(&quot;#SecuencialDeclaracionPep&quot;).val() || 0,
                                cargo: $(&quot;#txtCargoDeclaracionPEPS&quot;).val(),
                                institucion: $(&quot;#txtInstitucionDeclaracionPEPS&quot;).val(),
                                fechaNombramiento: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaNombramientoDeclaracionPEPS&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                fechaCulminacion: $(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val() ? &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCulminacionDeclaracionPEPS&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot; : null,
                                activo: $(&quot; , &quot;'&quot; , &quot;#chkEsCargoEleccion&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;),
                                codigoUsuario: codigoUsuarioActual
                            },
                            descripcionIngresoFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialDebidaDiligenciaAmpliada&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    valorIngresoSC: IngresosSC(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoSC: $(&quot;#txtDescripcionIngresos&quot;).val(),
                                    valorIngresoConyuge: IngresosConyuge(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionIngresoConyuge: $(&quot;#txtDescripcionIngresosConyuge&quot;).val(),
                                    valorOtrosIngresos: IngresosOtros(listaItemsEconomicosPatrimoniales.itemsEconomicosPatrimonialesGrabar),
                                    descripcionValorOtros: $(&quot;#txtDescripcionOtrosIngresos&quot;).val(),
                                    procedenciaDeLosFondos: $(&quot;#txtProcedenciaFondos&quot;).val()
                                } : null,
                            transaccionalidadMesFormDebidaDiligencia: $(&quot;#divModuloDebidaDiligenciaAmpliada&quot;).is(&quot;:visible&quot;) ?
                                {
                                    secuencial: $(&quot;#secuencialTransaccionalidadMesFormDebidaDiligencia&quot;).val() || 0,
                                    usuarioIngresa: codigoUsuarioActual,
                                    cantidadDepositos: $(&quot;#txtDepositosNumeroTransacciones&quot;).val(),
                                    montoTotalDepositos: $(&quot;#txtDepositosMonto&quot;).val(),
                                    cantidadTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasRecibidas: $(&quot;#txtTransferenciasRecibidasMonto&quot;).val(),
                                    cantidadTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalTransferenciasEnviadas: $(&quot;#txtTransferenciasEnviadasMonto&quot;).val(),
                                    cantidadRemesasRecibidas: $(&quot;#txtRemesasRecibidasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasRecibidas: $(&quot;#txtRemesasRecibidasMonto&quot;).val(),
                                    cantidadRemesasEnviadas: $(&quot;#txtRemesasEnviadasNumeroTransacciones&quot;).val(),
                                    montoTotalRemesasEnviadas: $(&quot;#txtRemesasEnviadasMonto&quot;).val()
                                } : null
                        }
                }),
                dataType: &quot;json&quot;,
                contentType: &quot;application/json; charset=utf-8&quot;,
                success: function (result) {
                    //Si se ha ingresado correctamente en la tabla clientes, se ingresa en la tabla cliente natural.
                    if (result.Correcto) {
                        numeroClienteGenerado = result.Anexo.NumeroCliente;
                        document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesor&quot; , &quot;'&quot; , &quot;).innerHTML = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[1];
                        document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoAsesor&quot; , &quot;'&quot; , &quot;).value = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[2];
                        document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoOficina&quot; , &quot;'&quot; , &quot;).value = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[3];
                        if ($(&quot;#cbTipoDocumento&quot;).val() == &quot;S&quot;) {
                            secuencialCodigoClienteGenerado = result.Anexo.SecuencialCliente.split(&quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot;)[0];
                            $(&quot;#txtIdentificacion&quot;).val(secuencialCodigoClienteGenerado);
                        }
                        if (result.Informacion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                            $.fn.window.defaults.closable = false;
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Nota&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () { });
                        }
                                //Si se grabó correctamente el cliente natural, se graban datos de apoderado o de educación.
                                var mensajeResultGrabarClienteNatural = result.Informacion;
                                if ($(&quot;#txtApoderado&quot;).val().trim() != &quot;&quot;) {
                                    $.ajax({
                                        url: urlNuevoApoderado,
                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                        data: JSON.stringify({
                                            numeroCliente: result.Anexo.NumeroCliente,
                                            codigoClienteApoderado: $(&quot;#txtApoderado&quot;).val().trim(),
                                            fechaEmision: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaEmision&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                            fechaCaducidad: &quot; , &quot;'&quot; , &quot;/Date(&quot; , &quot;'&quot; , &quot; + (parseFloat(Date.parse(toIsoDate($(&quot;#txtFechaCaducidad&quot;).val()))) - 18000000) + &quot; , &quot;'&quot; , &quot;)/&quot; , &quot;'&quot; , &quot;,
                                            codigoUsuario: codigoUsuarioActual,
                                            tipoPoder: $(&quot; , &quot;'&quot; , &quot;input[name=rbPoder]:checked&quot; , &quot;'&quot; , &quot;).val()
                                        }),
                                        dataType: &quot;json&quot;,
                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                        success: function (result) {
                                            //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                            if (result.Correcto) {
                                                if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                    $.ajax({
                                                        url: urlNuevoDatosConvenio,
                                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                        data: JSON.stringify({
                                                            convenio: {
                                                                secuencialConvenio: getSelected(),
                                                                usuarioIngreso: codigoUsuarioActual,
                                                                usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                estaActivo: 0,
                                                                debitoDeCuentaDeEmpresa: 0,
                                                                acreditaRolACuentaEmpresa: 1,
                                                                codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                numeroCliente: result.Anexo.NumeroCliente
                                                            },
                                                            datosEmpresa: {
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim().toUpperCase(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim().toUpperCase(),
                                                                telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val() != null ? $(&quot;#txtCargoPublico&quot;).val().trim().toUpperCase() : &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;,
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null  ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }
                                                        }),
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {
                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                    $.ajax({
                                                        url: urlNuevoDatosEmpresa,
                                                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                        data: JSON.stringify({
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }),
                                                        //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                        dataType: &quot;json&quot;,
                                                        contentType: &quot;application/json; charset=utf-8&quot;,
                                                        success: function (result) {

                                                            //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                            if (result.Correcto) {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                ActivarDesactivarBotones();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/, false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                            else {
                                                                
                                                                $.fn.window.defaults.closable = false;
                                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () {
                                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                    impresionFormularioPendiente = true;
                                                                });
                                                            }
                                                        },
                                                        error: ajaxError
                                                    });
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    ActivarDesactivarBotones();
                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                        impresionFormularioPendiente = true;
                                                    });
                                                }
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                            }
                                        },
                                        error: ajaxError
                                    });
                                }
                                else {
                                    // if ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
                                    if ($(&quot;#cbEstablecimiento&quot;).val() &amp;&amp; ($(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; || $(&quot;#cbEducacion&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;)) {
                                        //MDJR 19/05/2017 Si es mayor de edad no es obligatorio el establecimiento
                                        $.ajax({
                                            url: urlNuevoEstablecimiento,
                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                            data: JSON.stringify({
                                                codigoEstablecimiento: $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(),
                                                numeroCliente: result.Anexo.NumeroCliente
                                            }),
                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                            dataType: &quot;json&quot;,
                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                            success: function (result) {
                                                //Si correctamente el establecimiento se procede a ingresar datos Empresa
                                                if (result.Correcto) {
                                                    if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                        $.ajax({
                                                            url: urlNuevoDatosConvenio,
                                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                            data: JSON.stringify({
                                                                convenio: {
                                                                    secuencialConvenio: getSelected(),
                                                                    usuarioIngreso: codigoUsuarioActual,
                                                                    usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    estaActivo: 0,
                                                                    debitoDeCuentaDeEmpresa: 0,
                                                                    acreditaRolACuentaEmpresa: 1,
                                                                    codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                                    numeroCliente: result.Anexo.NumeroCliente
                                                                },
                                                                datosEmpresa: {
                                                                    nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                    direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                    telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                    cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                    pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                    paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                    sueldoMensual: 0,
                                                                    numeroVerificador: 1,
                                                                    secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                    numeroCliente: result.Anexo.NumeroCliente,
                                                                    secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null, // $(&quot;#cbParroquiaPublico&quot;).val(),
                                                                    telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;

                                                                }
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {
                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                        $.ajax({
                                                            url: urlNuevoDatosEmpresa,
                                                            type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                            data: JSON.stringify({
                                                                nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                                direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                                telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                                cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                                sueldoMensual: 0,
                                                                numeroVerificador: 1,
                                                                numeroCliente: result.Anexo.NumeroCliente,
                                                                secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                                secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                                pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                                paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                                telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                            }),
                                                            //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                            dataType: &quot;json&quot;,
                                                            contentType: &quot;application/json; charset=utf-8&quot;,
                                                            success: function (result) {

                                                                //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                                if (result.Correcto) {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    ActivarDesactivarBotones();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                                    $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                        VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                        impresionFormularioPendiente = true;
                                                                    });
                                                                }
                                                                else {
                                                                    
                                                                    $.fn.window.defaults.closable = false;
                                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                                }
                                                            },
                                                            error: ajaxError
                                                        });
                                                    }
                                                    else {
                                                        
                                                        $.fn.window.defaults.closable = false;
                                                        ActivarDesactivarBotones();
                                                        $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                        $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                            VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                            impresionFormularioPendiente = true;
                                                        });
                                                    }
                                                }
                                                else {
                                                    
                                                    $.fn.window.defaults.closable = false;
                                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                }
                                            },
                                            error: ajaxError
                                        });
                                    }
                                    else {
                                        //Si todo se ha ingresado correctamente se ingresan datos de empresa.
                                        if (result.Correcto) {
                                            if ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true) {
                                                $.ajax({
                                                    url: urlNuevoDatosConvenio,
                                                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                    data: JSON.stringify({
                                                        convenio: {
                                                            secuencialConvenio: getSelected(),
                                                            usuarioIngreso: codigoUsuarioActual,
                                                            usuarioInactiva: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            estaActivo: 0,
                                                            debitoDeCuentaDeEmpresa: 0,
                                                            acreditaRolACuentaEmpresa: 1,
                                                            codigo: $(&quot;#cbTipoDocumento&quot;).val() != &quot;S&quot; ? $(&quot;#txtIdentificacion&quot;).val().trim() : secuencialCodigoClienteGenerado,
                                                            numeroCliente: result.Anexo.NumeroCliente
                                                        },
                                                        datosEmpresa: {
                                                            nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                            direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                            telefono: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? telefonoEmpresa : 0 : 0,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                            cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                            pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                            paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                            sueldoMensual: 0,
                                                            numeroVerificador: 1,
                                                            secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                            numeroCliente: result.Anexo.NumeroCliente,
                                                            secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                            telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                        }
                                                    }),
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (resultDatosConvenio) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else if (($(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOrigenIngresos&quot;).val() == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || $(&quot;#cbOcupacion&quot;).val() == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) &amp;&amp; ($(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == false)) {
                                                $.ajax({
                                                    url: urlNuevoDatosEmpresa,
                                                    type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                                    data: JSON.stringify({
                                                        nombre: $(&quot;#txtNombreEmpleador&quot;).val().trim(),
                                                        direccion: $(&quot;#txtDireccionPublico&quot;).val().trim(),
                                                        telefono: telefonoEmpresa,//$(&quot;#txtTelefonoPublico&quot;).val().trim(),
                                                        cargo: $(&quot;#txtCargoPublico&quot;).val().trim(),
                                                        sueldoMensual: 0,
                                                        numeroVerificador: 1,
                                                        numeroCliente: result.Anexo.NumeroCliente,
                                                        secuencialCanton: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbCantonPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbCantonPublico&quot;).val() : null : null : null,
                                                        secuencialParroquia: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#cbParroquiaPublico&quot;).val() != &quot;&quot; ? $(&quot;#cbParroquiaPublico&quot;).val() : null : null : null,
                                                        pais: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() : &quot;&quot;,
                                                        paisEstadoEmpresa: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtPaisEstadoEmpresa&quot;).val().trim().toUpperCase() : &quot;&quot; : &quot;&quot;,
                                                        telefonoExterior: $(&quot;#cbPaisEmpresa&quot;).val() != null ? $(&quot;#cbPaisEmpresa&quot;).val().trim() != &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtTelefonoExterior&quot;).val() : &quot;&quot; : &quot;&quot;
                                                    }),
                                                    //dataType: &quot;text/xml;  charset=utf-8&quot;,
                                                    dataType: &quot;json&quot;,
                                                    contentType: &quot;application/json; charset=utf-8&quot;,
                                                    success: function (result) {
                                                        //Si todo se ha ingresado correctamente se muestra un mensaje informativo.
                                                        if (result.Correcto) {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            ActivarDesactivarBotones();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                            $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, mensajeResultGrabarClienteNatural, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                                VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                                impresionFormularioPendiente = true;
                                                            });
                                                        }
                                                        else {
                                                            
                                                            $.fn.window.defaults.closable = false;
                                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha podido agregar cliente natural.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                                        }
                                                    },
                                                    error: ajaxError
                                                });
                                            }
                                            else {
                                                
                                                $.fn.window.defaults.closable = false;
                                                ActivarDesactivarBotones();
                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellas&quot; , &quot;'&quot; , &quot;).show();
                                                $(&quot; , &quot;'&quot; , &quot;#imgRegistrarHuellasDisabled&quot; , &quot;'&quot; , &quot;).hide();
                                                //$.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Cliente ingresado correctamente!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;, function () {
                                                    VerificarAfilicionHuellas(/OSCUS.Aplicacion/,false);
                                                    impresionFormularioPendiente = true;
                                                });
                                            }
                                        }
                                        else {
                                            
                                            $.fn.window.defaults.closable = false;
                                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                                        }
                                    }
                                }
                        //Verificar solicitud de tarjeta de debito EDRS 15/07/2019
                        VerificaTarjetaDebito(result.Anexo.NumeroCliente, true);
                    }
                    else {
                        
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Cliente no agregado&quot; , &quot;'&quot; , &quot;, result.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { });
                    }
                    localStorage[&quot; , &quot;'&quot; , &quot;listaOportunidades&quot; , &quot;'&quot; , &quot;] = false;
                    localStorage[&quot;emailAsesor&quot;] = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                    localStorage[&quot;idOportunidadCrm&quot;] = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                },
                error: ajaxError
            });
        }

        function DeshabilitarEdicion() {
            $(&quot;#txtTipoDocumentoSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEstadoCivilSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtPaisSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtProvinciaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbProvinciaReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbProvinciaReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtCantonSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbCantonReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbCantonReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtParroquiaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbParroquiaReside&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbParroquiaReside&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtEducacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbEducacion&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbEducacion&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtTipoViviendaSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoVivienda&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoVivienda&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtOcupacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbOcupacion&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbOcupacion&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtClasificacionSeleccionada&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            $(&quot;#txtGrupoEconomicoSeleccionado&quot;).val((document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).options[document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).selectedIndex].innerHTML).toUpperCase());
            //$(&quot; , &quot;'&quot; , &quot;#divTipoDocumentoSelect&quot; , &quot;'&quot; , &quot;).hide();
            //$(&quot; , &quot;'&quot; , &quot;#divTipoDocumentoText&quot; , &quot;'&quot; , &quot;).show();
            //$(&quot; , &quot;'&quot; , &quot;#divEstadoCivilSelect&quot; , &quot;'&quot; , &quot;).hide();
            //$(&quot; , &quot;'&quot; , &quot;#divEstadoCivilText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divPaisSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divPaisText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divProvinciaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divProvinciaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divCantonSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divCantonText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divParroquiaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divParroquiaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divEducacionSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divEducacionText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divTipoViviendaSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divTipoViviendaText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divOcupacionSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divOcupacionText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divClasificacionActividadSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divClasificacionActividadText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divGrupoEconomicoSelect&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divGrupoEconomicoText&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtDireccion&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtTelefono1&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtTelefono2&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtCelular1&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtCelular2&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtEmail&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtReferencia&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtNumeroCargas&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#rbSexoH&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#rbSexoM&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaNacimiento&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        }

        function ActivarDesactivarBotones() {
            $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#divPrinterDisabled&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divPrinterEnabled&quot; , &quot;'&quot; , &quot;).show();
            DeshabilitarEdicion();
        }


        function ListaControl() {
            var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
            if ($(&quot;#txtApellidos&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtApellidos&quot;).val().trim() != &quot;undefined&quot; &amp;&amp;
                $(&quot;#txtNombres&quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot;#txtNombres&quot;).val().trim() != &quot;undefined&quot;) {
                if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
                    if ($(&quot;#txtIdentificacion&quot;).val().trim() == &quot;&quot;) {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ingrese el Nº de Cédula para procesar Lista de Control&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
                        return;
                    }
                }
                $.fn.window.defaults.closable = false;
                var urlListaControl = &quot;osapi/ServiceCliente.svc/VerificarConsepOfacListaNegra&quot;;
                $.ajax({
                    url: urlListaControl,
                    type: &quot;POST&quot;,
                    data: JSON.stringify({
                        codigo: $(&quot;#txtIdentificacion&quot;).val().trim(),
                        apellido: $(&quot;#txtApellidos&quot;).val().trim(),
                        nombre: $(&quot;#txtNombres&quot;).val().trim(),
                        estadoCivil: $(&quot;#cbTipoDocumento&quot;).val(),
                        nivelEducacion: codigoUsuarioActual
                    }),
                    datatype: &quot;json&quot;,
                    contentType: &quot;application/json; charset=utf-8&quot;,
                    success: function (resultado) {
                        
                        $.fn.window.defaults.closable = false;
                        if (resultado.Correcto) {
                            if (resultado.Anexo.EstaEnConsepEsSindicado || resultado.Anexo.EstaEnConsepEsHomonimo || resultado.Anexo.EstaEnOFAC ||
                                resultado.Anexo.EstaEnProvidenciasJudiciales || resultado.Anexo.EstaEnListaONU || resultado.Anexo.EstaEnEmpresasFantasma) {
                                $.fn.window.defaults.closable = false;
                                $.messager.alert(&quot; , &quot;'&quot; , &quot;Lista Control&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;; });
                            }
                            else {
                                if (resultado.Informacion != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) { //Esto se da solo cuando el cliente ingresad esta en RegistrosClientesListaNegra
                                    $.fn.window.defaults.closable = false;
                                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Lista Control&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;; });
                                }
                                var apellidosnombreCliente = $(&quot;#txtApellidos&quot;).val().trim() + &quot; &quot; + $(&quot;#txtNombres&quot;).val().trim();
                                var urlNombreRemplazar = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$filter=nombreUnido eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; and estado eq &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;&quot;;
                                $.ajax({
                                    url: urlNombreRemplazar.replace(&quot;{0}&quot;, apellidosnombreCliente),
                                    dataType: &quot;json&quot;,
                                    cache: &quot;false&quot;,
                                    success: function (result) {
                                        
                                        if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                                            if (result.value.length >= 1) {
                                                divGrdClientesHomonimos.style.display = &quot;block&quot;;
                                                $(&quot; , &quot;'&quot; , &quot;#grdClientesHomonimos&quot; , &quot;'&quot; , &quot;).datagrid({
                                                    fitColumns: true,
                                                    striped: true,
                                                    nowrap: false,
                                                    sortName: &quot; , &quot;'&quot; , &quot;released&quot; , &quot;'&quot; , &quot;,
                                                    sortOrder: &quot; , &quot;'&quot; , &quot;asc&quot; , &quot;'&quot; , &quot;,
                                                    width: &quot; , &quot;'&quot; , &quot;100%&quot; , &quot;'&quot; , &quot;
                                                });
                                                $(&quot; , &quot;'&quot; , &quot;#grdClientesHomonimos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, result.value);
                                                AbrirVentanaClientesHomonimos();
                                            }
                                        }
                                    },
                                    error: ajaxError
                                });

                            }
                        }
                        else {
                            $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                        }
                    },
                });
            }
        }

        jQuery(function ($) {

            jQuery(document).on(&quot; , &quot;'&quot; , &quot;keyup&quot; , &quot;'&quot; , &quot;, field, function () {
                if (field.val().indexOf(arroba) > 0) {
                    if (!enmascarado) {
                        var email = field.val().split(arroba);
                        field.val(oculta(email[0]) + arroba + email[1]);
                        hiddenField.val(email[0] + arroba + email[1]);
                    }
                    else {
                        if (field.val().split(arroba)[0].length != hiddenField.val().split(arroba)[0].length) {
                            enmascarado = false;
                            field.val(&quot;&quot;);
                            hiddenField.val(&quot;&quot;);
                        }
                        else hiddenField.val(hiddenField.val().split(arroba)[0] + arroba + field.val().split(arroba)[1]);
                    }
                } else if (enmascarado &amp;&amp; field.val().length >= 0) {
                    field.val(&quot;&quot;);
                    hiddenField.val(&quot;&quot;);
                    enmascarado = false;
                }
            });
            ////////////////////////////////////////////// fin enmascara //////////////////////////////////////////////////////////////

            //Función que maneja el evento de click en grid de convenio institucional.
            $(document).ready(function () {
                $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid({
                    onClickRow: function (rowIndex, rowData) {
                        //Se cargan los datos de empresa
                        if (rowData.numeroCliente != null &amp;&amp; rowData.numeroCliente != &quot;&quot;) {
                            var url = &quot;/OSCUS.Aplicacion/odata/Clientes?$format=json&amp;$expand=zonaResideNavigation($select=secuencialCantonNavigation;$expand=secuencialCantonNavigation($select=secuencial,codigoProvincia))&amp;$filter=numeroCliente eq {0}&amp;$select=direccionDomicilio,telefonoDomicilio,celular1,nombreUnido&quot;;
                            
                            $.ajax({
                                url: url.replace(&quot;{0}&quot;, rowData.numeroCliente),
                                dataType: &quot;json&quot;,
                                cache: &quot;false&quot;,
                                success: function (result) {
                                    if (result.value[0] != null &amp;&amp; result.value[0] != undefined &amp;&amp; result.value[0] != &quot;&quot;) {
                                        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(result.value[0].nombreUnido);
                                        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(result.value[0].telefonoDomicilio);
                                        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(result.value[0].celular1);
                                        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(result.value[0].direccionDomicilio);
                                        codProvinciaEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.codigoProvincia.trim()
                                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(codProvinciaEmpresa);
                                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                                        codCantonEmpresa = result.value[0].zonaResideNavigation.secuencialCantonNavigation.secuencial;
                                        CargaCantonEmpresa(codProvinciaEmpresa);
                                        
                                    }
                                }
                            });
                        }
                    }
                });
            });
            //Datepicker fecha nacimiento
            $(document).ready(function () {
                $(function () {
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaNacimientoPasaporte&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker fecha de emisión
                $(function () {
                    $(&quot;#txtFechaEmision&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        disabled: true
                    });
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaEmision&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });

                //Datepicker Fecha Inicio Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaInicioTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });


                //Datepicker Fecha Fin Trabajo Anterior
                $(function () {
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker({
                        yearRange: &quot;-199:+0&quot;,
                        prevText: &quot; , &quot;'&quot; , &quot;Anterior&quot; , &quot;'&quot; , &quot;,
                        nextText: &quot; , &quot;'&quot; , &quot;Siguiente&quot; , &quot;'&quot; , &quot;,
                        changeMonth: true,
                        changeYear: true,
                        showOn: &quot;button&quot;,
                        buttonImage: &quot;../Images/black-calendar_x16.png&quot;,
                        buttonImageOnly: true,
                        buttonText: &quot; , &quot;'&quot; , &quot;De click para seleccionar la fecha&quot; , &quot;'&quot; , &quot;,
                        minDate: &quot;-199Y&quot;,
                        maxDate: &quot;+0D +0M +0Y&quot;,
                        monthNamesShort: [&quot;Ene&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Abr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Ago&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dic&quot;],
                        monthNames: [&quot;Enero&quot;, &quot;Febrero&quot;, &quot;Marzo&quot;, &quot;Abril&quot;, &quot;Mayo&quot;, &quot;Junio&quot;, &quot;Julio&quot;, &quot;Agosto&quot;, &quot;Septiembre&quot;, &quot;Octubre&quot;, &quot;Noviembre&quot;, &quot;Diciembre&quot;],
                        dayNames: [&quot; , &quot;'&quot; , &quot;Domingo&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lunes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Martes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Miercoles&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Jueves&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Viernes&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sábado&quot; , &quot;'&quot; , &quot;],
                        dayNamesShort: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;],
                        dayNamesMin: [&quot; , &quot;'&quot; , &quot;Do&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Lu&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ma&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Mi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ju&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Vi&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Sa&quot; , &quot;'&quot; , &quot;]
                    });
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;showAnim&quot;, &quot;fadeIn&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker(&quot;option&quot;, &quot;dateFormat&quot;, &quot;dd/mm/yy&quot;);
                    $(&quot;#txtFechaFinTrabajoAnterior&quot;).datepicker($.datepicker.regional[&quot;es-EC&quot;]);
                });
            });

            //Función que controla tooltip de validación.
            $(document).ready(function () {
                //*************** Para tooltip personalizado *******************
                $(&quot; , &quot;'&quot; , &quot;.masterTooltip&quot; , &quot;'&quot; , &quot;).hover(function () {
                    // Hover over code
                    var title = $(this).attr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;);
                    $(this).data(&quot; , &quot;'&quot; , &quot;tipText&quot; , &quot;'&quot; , &quot;, title).removeAttr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;&lt;p class=&quot;tooltip&quot;>&lt;/p>&quot; , &quot;'&quot; , &quot;)
                    .text(title)
                    .appendTo(&quot; , &quot;'&quot; , &quot;body&quot; , &quot;'&quot; , &quot;)
                    .fadeIn(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
                }, function () {
                    // Hover out code
                    $(this).attr(&quot; , &quot;'&quot; , &quot;title&quot; , &quot;'&quot; , &quot;, $(this).data(&quot; , &quot;'&quot; , &quot;tipText&quot; , &quot;'&quot; , &quot;));
                    $(&quot; , &quot;'&quot; , &quot;.tooltip&quot; , &quot;'&quot; , &quot;).remove();
                }).mousemove(function (e) {
                    var mousex = e.pageX + 30; //Get X coordinates
                    var mousey = e.pageY - 65 //Get Y coordinates
                    $(&quot; , &quot;'&quot; , &quot;.tooltip&quot; , &quot;'&quot; , &quot;)
                    .css({
                        top: mousey,
                        left: mousex,
                        color: &quot; , &quot;'&quot; , &quot;#105D99&quot; , &quot;'&quot; , &quot;,
                        background: &quot; , &quot;'&quot; , &quot;#AEC63C url(&quot;../Images/Info_x24.png&quot;) no-repeat left&quot; , &quot;'&quot; , &quot;,
                        //opacity: &quot; , &quot;'&quot; , &quot;0.9&quot; , &quot;'&quot; , &quot;,
                        //filter: &quot; , &quot;'&quot; , &quot;alpha(opacity = 90)&quot; , &quot;'&quot; , &quot;,
                        borderColor: &quot; , &quot;'&quot; , &quot;transparent&quot; , &quot;'&quot; , &quot;,
                        fontSize: &quot; , &quot;'&quot; , &quot;0.95em&quot; , &quot;'&quot; , &quot;,
                        paddingLeft: &quot; , &quot;'&quot; , &quot;25px&quot; , &quot;'&quot; , &quot;,
                        boxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        MozBoxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        WebkitBoxShadow: &quot; , &quot;'&quot; , &quot;1px 1px 1px #818181&quot; , &quot;'&quot; , &quot;,
                        zIndex: &quot; , &quot;'&quot; , &quot;999999&quot; , &quot;'&quot; , &quot;
                    })
                });
            });

            $(document).ready(function () {
                //Se inicia con la lista de clientes oculta.
                var divGrdClientesHomonimos = document.getElementById(&quot;divGridClientesHomonimos&quot;);
                divGrdClientesHomonimos.style.display = &quot;none&quot;;
            });


            //Función que mantiene visible el div de menu
            $(document).ready(function () {
                var $sidebar = $(&quot;#divMenuIz&quot;),
                $window = $(window),
                offset = $sidebar.offset(),
                topPadding = 15;

                $window.scroll(function () {
                    if ($window.scrollTop() > offset.top) {
                        $sidebar.addClass(&quot; , &quot;'&quot; , &quot;fixed&quot; , &quot;'&quot; , &quot;);
                    } else {
                        $sidebar.removeClass(&quot; , &quot;'&quot; , &quot;fixed&quot; , &quot;'&quot; , &quot;);
                    }
                });
            });
            //Acciones que deben ejecutarse al iniciar.
            $(document).ready(function () {

                if (codigoUsuarioActual.indexOf(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;))
                    codigoUsuarioActual = codigoUsuarioActual.replace(&quot; , &quot;'&quot; , &quot;&amp;#209;&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Ñ&quot; , &quot;'&quot; , &quot;)
                //Se cambia la altura del menu dinamicamente
                divMenu = document.getElementById(&quot; , &quot;'&quot; , &quot;divMenu&quot; , &quot;'&quot; , &quot;);
                divMenu.style.height = &quot;600px&quot;;
                $(&quot; , &quot;'&quot; , &quot;#divPaisText&quot; , &quot;'&quot; , &quot;).hide();
                //Se personaliza botones de popups.
                $.messager.defaults.ok = &quot; , &quot;'&quot; , &quot;Aceptar&quot; , &quot;'&quot; , &quot;;
                $.messager.defaults.cancel = &quot; , &quot;'&quot; , &quot;Cancelar&quot; , &quot;'&quot; , &quot;;

                $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog({
                    title: &quot; , &quot;'&quot; , &quot;CLIENTES HOMÓNIMOS&quot; , &quot;'&quot; , &quot;,
                    position: &quot; , &quot;'&quot; , &quot;center&quot; , &quot;'&quot; , &quot;,
                    draggable: true,
                    collapsible: false,
                    minimizable: false,
                    maximizable: false,
                    resizable: true,
                    closable: false,
                    width: 650,
                    height: 310,
                    closed: false,
                    cache: false,
                    modal: true
                });
                $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);

                if (&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot; &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot; &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != null &amp;&amp; &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; != &quot;&quot;) {
                    $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                }


                //Para acordeón.
                $(&quot;#h1Datos&quot;).click(function (e) {

                    if ($(&quot;#divDatosCliente&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Direccion&quot;).click(function (e) {
                    if ($(&quot;#divDireccion&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Ocupacion&quot;).click(function (e) {
                    if ($(&quot;#divOcupacion&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1SituacionEconomica&quot;).click(function (e) {
                    if ($(&quot;#divSituacionEconomica&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Referencias&quot;).click(function (e) {
                    if ($(&quot;#divReferencias&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1Otros&quot;).click(function (e) {
                    if ($(&quot;#divOtros&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                    }
                });

                $(&quot;#h1GeoDomicilio&quot;).click(function (e) {
                    if ($(&quot;#divGeoDomicilio&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        GeoDomicilio(&quot;/OSCUS.Aplicacion/&quot;);
                    }
                });

                $(&quot;#h1ManoDerecha&quot;).click(function (e) {
                    if ($(&quot;#divManoDerecha&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).hide();
                    }
                    $(&quot;#h1ManoIzquierda&quot;).removeClass(&quot;boldFont&quot;);
                });

                $(&quot;#h1ManoIzquierda&quot;).click(function (e) {
                    if ($(&quot;#divManoIzquierda&quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                        $(this).removeClass(&quot;boldFont&quot;);
                        $(&quot;#divManoIzquierda&quot;).show();
                    }
                    else {
                        $(this).addClass(&quot;boldFont&quot;);
                        $(&quot;#divManoDerecha&quot;).hide();
                    }
                    $(&quot;#h1ManoDerecha&quot;).removeClass(&quot;boldFont&quot;);
                });

                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();

                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).click(function () {
                    var el = $(this).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;);
                    isVisible = el.is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;) ? el.slideUp() : el.slideDown();
                });

                //Se inicia con la sección de datos cliente abierta.
                $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);

                var urlFechaSistema = &quot;/OSCUS.Aplicacion/odata/Calendarios?$format=json&amp;$top=1&amp;$filter=estaCerrado eq 1&amp;$select=fechaSistema&amp;$orderby=fechaSistema asc&quot;;
                
                $.ajax({
                    url: urlFechaSistema,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultFechaSistema) {
                        if (resultFechaSistema.value[0] != null &amp;&amp; resultFechaSistema.value[0] != &quot;&quot; &amp;&amp; resultFechaSistema.value[0] != undefined)
                            fechaSistema = resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[2] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[1] + &quot;/&quot; + resultFechaSistema.value[0].fechaSistema.split(&quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot;)[0].split(&quot; , &quot;'&quot; , &quot;-&quot; , &quot;'&quot; , &quot;)[0];
                    }
                });
                //Se da formato a combosBox
                var config = {
                    &quot; , &quot;'&quot; , &quot;.chosen-select&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-deselect&quot; , &quot;'&quot; , &quot;: { allow_single_deselect: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-no-single&quot; , &quot;'&quot; , &quot;: { disable_search: true },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-no-results&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot; , &quot;'&quot; , &quot;Oops, nothing found!&quot; , &quot;'&quot; , &quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-width&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoDocumento&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;44%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivil&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;55%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivilPasaporte&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;57%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-educacion&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;75%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-establecimiento&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;65%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigenRecursos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;150px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigen&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-nacionalidad&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisobligaciontributaria&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisobligaciontributaria2&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisResidencia&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;190px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-provinciaReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-cantonReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parroquiaReside&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;145px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoVivienda&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;200px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-origenIngresos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;65%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-ocupacion&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;74%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-profesionSBS&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;50%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomico&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;81%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividad&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;77%&quot; },

                    &quot; , &quot;'&quot; , &quot;.chosen-select-propositoRelacion&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;20%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-condicionFirmas&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;47%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parentescoVinculo&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;37%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-causalVinculo&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;48%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomicoSecundario&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividadSecundaria&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;61%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoCuenta&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoCuenta1&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-paisOrigenDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; }, //desde aqui para Nuevo Cliente Datos Basicos
                    &quot; , &quot;'&quot; , &quot;.chosen-select-provinciaResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoDocumentoDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;52%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-estadoCivilDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-educacionDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;220px&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-tipoViviendaDatosBasicos&quot; , &quot;'&quot; , &quot;: { disable_search: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-grupoEconomicoDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-clasificacionActividadDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-cantonResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                    &quot; , &quot;'&quot; , &quot;.chosen-select-parroquiaResideDatosBasicos&quot; , &quot;'&quot; , &quot;: { no_results_text: &quot;Sin resultados!&quot;, search_contains: true, width: &quot;100%&quot; },
                }

                for (var selector in config) {
                    $(selector).chosen(config[selector]);
                }
                document.getElementById(&quot; , &quot;'&quot; , &quot;cbTipoDocumento&quot; , &quot;'&quot; , &quot;).value = &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;;
                $(&quot;#cbTipoDocumento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus();

                IpCliente = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
                //Se ingresan datos en comboBox de Paises
                var urlPaises = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&amp;$select=codigo,descripcion&quot;;
                
                $.ajax({
                    url: urlPaises,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultPaises) {
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigen&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigenDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisOrigenRecursos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);//
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisResidencia&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultPaises.value, function (key, value) {
                            $(&quot;#cbPaisOrigen&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisOrigenDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisOrigenRecursos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisResidencia&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisEmpresa&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbPaisDI&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            if (value.esParaisoFiscal == 0) arrPaises.push(value.codigo);
                        });
                        $(&quot;#cbPaisOrigen&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                       // CambiarEsNacional(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisOrigen&quot; , &quot;'&quot; , &quot;));
                        $(&quot;#cbPaisOrigen&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisOrigenDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisOrigenRecursos&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisOrigenRecursos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbPaisResidencia&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisResidencia&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarControles(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisResidencia&quot; , &quot;'&quot; , &quot;));
                        HabilitarNacionalidad2(document.getElementById(&quot; , &quot;'&quot; , &quot;cbNacionalidad1&quot; , &quot;'&quot; , &quot;));
                        HabilitarNacionalidad3(document.getElementById(&quot; , &quot;'&quot; , &quot;cbNacionalidad2&quot; , &quot;'&quot; , &quot;));
                        HabilitarTributaExterior(document.getElementById(&quot; , &quot;'&quot; , &quot;chkTributaExterior&quot; , &quot;'&quot; , &quot;));
                        HabilitarTributaExterior2(document.getElementById(&quot; , &quot;'&quot; , &quot;chkTributaExterior2&quot; , &quot;'&quot; , &quot;));
                        $(&quot;#cbPaisEmpresa&quot;).val(&quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        HabilitarDatosTrabajo(document.getElementById(&quot; , &quot;'&quot; , &quot;cbPaisEmpresa&quot; , &quot;'&quot; , &quot;));
                        HabilitarEsRelacionPersonaPolitica(document.getElementById(&quot; , &quot;'&quot; , &quot;chkEsRelacionPersonaPolitica&quot; , &quot;'&quot; , &quot;));
                        CargaNacionalidad();
                        CargaPaisObligacionTributaria();
                        $(&quot;#cbPaisDI&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de provincias
                var urlProvincias = &quot;/OSCUS.Aplicacion/odata/Provincias?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlProvincias,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultProvincias) {
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaResideDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultProvincias.value, function (key, value) {
                            $(&quot;#cbProvinciaReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbProvinciaPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbProvinciaResideDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbProvinciaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbProvinciaResideDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de ocupación
                var url = &quot;/OSCUS.Aplicacion/odata/Profesiones?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbOcupacion&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbOcupacion&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbOcupacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de grupo económico y grupo económico secundario
                var url = &quot;/OSCUS.Aplicacion/odata/GruposActividadesEconomicas?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomicoSecundario&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomicoDatosBasicos&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbGrupoEconomico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbGrupoEconomicoSecundario&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + &quot;N&quot; + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + &quot;NINGUNO&quot; + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoSecundario&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        $(&quot;#cbGrupoEconomicoDatosBasicos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    }
                });

                //Se ingresan datos en comboBox de profesión SBS
                var url = &quot;/OSCUS.Aplicacion/odata/ProfesionesSBS?$format=json&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: url,
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (result) {
                        $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(result.value, function (key, value) {
                            $(&quot;#cbProfesionSBS&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
                //}
            });
            CargaListaGrupoEtnico();
        });




        //Funciones de navegación de menu izquierda.
        function fnNavegar(opcion) {
            if ($(&quot; , &quot;'&quot; , &quot;#divPrinterDisabled&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                if (opcion == 3) {
                    if ($(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot; &amp;&amp; $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim() != &quot;&quot;) {
                        $.ajax({
                            url: &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/GrabaVariablesSesion&quot; , &quot;'&quot; , &quot;,
                        type: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                        data: JSON.stringify({
                            codigo: $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                            nombre: $(&quot; , &quot;'&quot; , &quot;#txtNombres&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                            apellido: $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim().toUpperCase(),
                        }),
                        dataType: &quot;json&quot;,
                        contentType: &quot;application/json; charset=utf-8&quot;,
                        success: function (data) {
                            
                            //Se redirige a pantalla de Datos Generales de Cliente.
                            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Cotizador?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt($(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim()));
                            },
                        error: ajaxError
                    });
                    }
                    else {
                        $.fn.window.defaults.closable = false;
                        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campos obligatorios&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Debe ingresar: identificación, nombre y apellido!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                            //Se habilita pestaña de datos.
                            $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                            $(&quot; , &quot;'&quot; , &quot;#divDatosCliente&quot; , &quot;'&quot; , &quot;).show();
                            DatosAbierto();
                            //Se hace focus en campo vacío.
                            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val().trim() == &quot;&quot; ? $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus() : $(&quot; , &quot;'&quot; , &quot;#txtApellidos&quot; , &quot;'&quot; , &quot;).val().trim() == &quot;&quot; ? $(&quot;#txtApellidos&quot;).focus() : $(&quot;#txtNombres&quot;).focus();
                        });
                    }
                }
                else {
                    $.fn.window.defaults.closable = false;
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Opción incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero debe guardar la información del cliente!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                }

            }
            else if ($(&quot; , &quot;'&quot; , &quot;#divPrinterEnabled&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:visible&quot; , &quot;'&quot; , &quot;)) {
                if (opcion == 1) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DatosGenerales?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 2) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosVista?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 3) {
                    if (&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot; == &quot; , &quot;'&quot; , &quot;True&quot; , &quot;'&quot; , &quot;) {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Restricción&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Su rol de usuario le permite crear sólo CDP de Fraternas.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;info&quot; , &quot;'&quot; , &quot;);
                return;
            }
            if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) &lt; mayoriaEdad) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No puede ser titular un menor de edad.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
                return;
            }
            else if (calcAge($(&quot;#txtFechaNacimiento&quot;).val()) > mayoriaEdad &amp;&amp; $(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
                $.fn.window.defaults.closable = false;
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Precaución&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El cliente es mayor de edad. Actualice el tipo de cliente a CÉDULA, para tener acceso a creación de Depósitos a Plazo.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
                return;
            }
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/DepositosPlazo?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 4) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Prestamos?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 5) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosFinancieros?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
        }
        else if (opcion == 6) {
            window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ServiciosNoFinancieros?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else if (opcion == 7) {
                    window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/Consolidado?id=&quot; , &quot;'&quot; , &quot; + encodeStr(Encrypt(numeroClienteGenerado.toString()));
                }
                else {
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;No disponible&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Opción no disponible.&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { location.reload(true); });
                }
}
}


//Función que verifica la educación y según eso cambia el estado de requerido en Establecimiento.
function VerificaEducacion(cb) {
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(0);
    $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).val(0);

    if (cb.value == &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;T&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;G&quot; , &quot;'&quot; , &quot;) {

        $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).val(0);
        if (cb.value != &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).show(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
        }
        else {

            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
        }
        $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
    }
    else {
        if ($(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).val() != &quot;&quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbProfesionSBS&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbProfesionSBS&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            //MDJR Solo Si es menor de edad mostrar establecimiento
            if (calcAge($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; ? $(&quot;#txtFechaNacimiento&quot;).val() : $(&quot;#txtFechaNacimientoPasaporte&quot;).val()) &lt; mayoriaEdad) $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).show(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);

            $(&quot; , &quot;'&quot; , &quot;#lblProfesion&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;);
            //Se verifica si el comboBox ya está lleno para no volverlo a llenar.
            if (document.getElementById(&quot;cbEstablecimiento&quot;).options.length &lt; 2) {
                
                //DisplayBusy(true);
                //Se ingresan datos en comboBox de establecimiento
                var urlEstablecimiento = &quot;/OSCUS.Aplicacion/odata/Establecimientos?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&amp;$select=codigo,nombre&amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlEstablecimiento.replace(&quot;{0}&quot;, $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).val()),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultEstablecimiento) {
                        if (resultEstablecimiento.value.length > 0) {
                            var establecimiento = $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;);
                            establecimiento.empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            for (i = 0; i &lt; resultEstablecimiento.value.length; i++) {
                                establecimiento.append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + resultEstablecimiento.value[i].codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + resultEstablecimiento.value[i].nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            }
                            establecimiento.chosen().trigger(&quot;chosen:updated&quot;);
                        }
                        //DisplayBusy(false);
                        
                    }
                });
            }
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $(&quot;#cbEducacion&quot;).val(0);
            $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
            $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $.messager.alert(&quot; , &quot;'&quot; , &quot;Provincia no seleccionada&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero debe seleccionar una provincia de residencia!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                $(&quot; , &quot;'&quot; , &quot;.h2toggle&quot; , &quot;'&quot; , &quot;).next(&quot; , &quot;'&quot; , &quot;.cont&quot; , &quot;'&quot; , &quot;).hide();
                $(&quot; , &quot;'&quot; , &quot;#divDireccion&quot; , &quot;'&quot; , &quot;).show();
                DireccionAbierto();
                $(&quot; , &quot;'&quot; , &quot;#cbProvinciaReside&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;);
            });
        }
    }
}


function ValidaOrigenIngresos(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOcupacion&quot;).val() != &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) {
        //Se borran los datos ingresados siempre que se cambie de opción
        $(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;); // &quot;checked&quot;
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCargoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).hide();

        if (cb.value == &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
    }
}

//Función que valida la ocupación de un empleado para esquema de datos empresa.
function ValidaOcupacion(cb) {
    ActivarDesactivarDatosPrimerTrabajo($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val());
    MuestraDatosNegocioPropio($(&quot;#cbOcupacion&quot;).val(), $(&quot;#cbOrigenIngresos&quot;).val(),0);
    if ($(&quot;#cbOrigenIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbOrigenIngresos&quot;).val() != &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
        //Se borran los datos ingresados siempre que se cambie de opción
        $(&quot; , &quot;'&quot; , &quot;#chkConvenioPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;); // &quot;checked&quot;
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtPaisEstadoEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#cbPaisEmpresa&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbPaisEmpresa&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);


        if (cb.value == &quot; , &quot;'&quot; , &quot;245&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;246&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;247&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cargo Actual en la Empresa&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).show();
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).removeAttr(&quot; , &quot;'&quot; , &quot;readonly&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;true&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDescripcionActividadEconomicaActual&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Descripción Actividad Económica Actual&quot; , &quot;'&quot; , &quot;);
        }

        if (cb.value == &quot; , &quot;'&quot; , &quot;370&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;568&quot; , &quot;'&quot; , &quot;) {
            var origenIngresos;
            switch (cb.value) {
                case &quot; , &quot;'&quot; , &quot;370&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S01&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;H&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S02&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;568&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S03&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;A&quot; , &quot;'&quot; , &quot;;
                    $(&quot; , &quot;'&quot; , &quot;#lblEmpleadoPublico&quot; , &quot;'&quot; , &quot;).hide();
                    break;
                case &quot; , &quot;'&quot; , &quot;249&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S04&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;;
                    break;
                case &quot; , &quot;'&quot; , &quot;248&quot; , &quot;'&quot; , &quot;: codGrupoEconomico = &quot; , &quot;'&quot; , &quot;S05&quot; , &quot;'&quot; , &quot;;
                    origenIngresos = &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;;
                    break;
            }
            $(&quot;#cbGrupoEconomico&quot;).val(codGrupoEconomico);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot;#cbOrigenIngresos&quot;).val(origenIngresos);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;));
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            //if (valorIngresaUsuario) {
            //    $(&quot;#cbGrupoEconomico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //    $(&quot;#cbOrigenIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //}

            $(&quot;#cbGrupoEconomico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot;#cbOrigenIngresos&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbGrupoEconomico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbGrupoEconomico&quot;).chosen().trigger(&quot;chosen:updated&quot;);


            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);

            $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
            ValidaGrupoEconomico(document.getElementById(&quot; , &quot;'&quot; , &quot;cbGrupoEconomico&quot; , &quot;'&quot; , &quot;));
        }
}

//Función que carga cantones de datos empresa.
function CargaCantonEmpresa(codProvinciaEmpresa) {
    $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
    if (codProvinciaEmpresa != &quot;&quot; &amp;&amp; codProvinciaEmpresa != &quot;undefined&quot;) {

        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, codProvinciaEmpresa),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonPublico&quot;).val(codCantonEmpresa);
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que controla que no se ingrese de forma manual datos.
function controlIngresoFecha(e) {
    return false;
}

//Función que calcula la edad en formato &quot;dd/mm/yy&quot;
//function calcAge(dateString) {
//    //transformamos de día/mes/año a año/mes/dia
//    var dobConverted = toIsoDate(dateString);
//    var birthday = +new Date(dobConverted);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

function TimeSpanAniosMesesDias(fechaEmision) {
    var anio = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]);
    var mes = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1]);
    var dia = parseInt(fechaEmision.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0]);
    var anioActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]);
    var mesActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1]);
    var diaActual = parseInt(fechaSistema.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0]);
    var diasFebrero = 28;
    var diasPrestados = 31;
    var aniosCumplidos;
    var mesesCumplidos;
    var diasCumplidos;
    if (anio % 4 == 0) {
        if (anio % 100 == 0) {
            if (anio % 400 == 0)
                diasFebrero = 29
        }
        else
            diasFebrero = 29
    }
    if (mes % 2 == 0)
        diasPrestados = 30;
    if (mes == 8)
        diasPrestados = 31
    if (mes == 2)
        diasPrestados = diasFebrero
    if (diaActual &lt; dia) {
        diasCumplidos = (diaActual + diasPrestados) - dia;
        mes += 1;
    }
    else
        diasCumplidos = diaActual - dia;

    if (mesActual &lt; mes) {
        mesesCumplidos = (mesActual + 12) - mes;
        anio += 1;
    }
    else
        mesesCumplidos = mesActual - mes;
    aniosCumplidos = anioActual - anio;
    var arrTimeSpan = new Array();
    arrTimeSpan.push({ anios: aniosCumplidos, meses: mesesCumplidos, dias: diasCumplidos });
    return arrTimeSpan;
}

//function calcAgeDatosBasicos(dateString) {
//    var birthday = +new Date(dateString);
//    return ~~((Date.now() - birthday) / (31557600000));
//}

////Convierte fecha de dd/mm/yyyy a yyyy/mm/dd
//function toIsoDate(o_date) {
//    var arrDate = o_date.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;);
//    var convDate = arrDate[2] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + arrDate[1] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + arrDate[0];
//    return convDate;
//}

//Función que realiza acciones según la provincia que se seleccione
function ValidaProvincia(cb) {

    $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).val(0);
    $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesor&quot; , &quot;'&quot; , &quot;).innerHTML = &quot;&quot;;
    document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoAsesor&quot; , &quot;'&quot; , &quot;).value = &quot;&quot;;
    document.getElementById(&quot; , &quot;'&quot; , &quot;txtCodigoOficina&quot; , &quot;'&quot; , &quot;).value = &quot;&quot;;

    $(&quot;#cbEducacion&quot;).val(0);
    $(&quot;#cbEducacion&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
    $(&quot;#cbEstablecimiento&quot;).val(0);
    $(&quot;#cbEstablecimiento&quot;).chosen().trigger(&quot;chosen:updated&quot;);

    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
        }

        //Se ingresan datos en comboBox de nacionalidades.
        function CargaNacionalidad() {
            //Se ingresan datos en comboBox de nacionalidades
            var urlNacionalidades = &quot;/OSCUS.Aplicacion/odata/nacionalidad?$format=json&amp;$orderby=DESCRIPCION&quot;;
            
            $.ajax({
                url: urlNacionalidades,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultNacionalidades) {
                    
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad1&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad2&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>Nacionalidad 2..&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#cbNacionalidad3&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>Nacionalidad 3..&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultNacionalidades.value, function (key, value) {
                        $(&quot;#cbNacionalidad1&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbNacionalidad2&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#cbNacionalidad3&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.NACIONALIDAD1 + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.DESCRIPCION + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });

                    $(&quot;#cbNacionalidad1&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad2&quot;).chosen().trigger(&quot;chosen:updated&quot;);

                    $(&quot;#cbNacionalidad3&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        //Se ingresan datos en comboBox paises con obligacion tributaria.
        function CargaPaisObligacionTributaria() {
            //Se ingresan datos en checklistbox de paises tributa
            var urlPaisTributa = &quot;/OSCUS.Aplicacion/odata/Paises?$format=json&amp;$orderby=descripcion&quot;;
            
            $.ajax({
                url: urlPaisTributa,
                dataType: &quot;json&quot;,
                cache: &quot;false&quot;,
                success: function (resultPaisTributa) {
                    
                    $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $(&quot; , &quot;'&quot; , &quot;#chkPaisObligacionTributaria2&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    $.each(resultPaisTributa.value, function (key, value) {
                        $(&quot;#chkPaisObligacionTributaria&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $(&quot;#chkPaisObligacionTributaria2&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.descripcion + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                    });
                    $(&quot;#chkPaisObligacionTributaria&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                    $(&quot;#chkPaisObligacionTributaria2&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                }
            });
        }

        function HabilitarCiudadNacmientoExt(cb) {
            if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
                esCRSCiudadNacmientoExt = false;
                $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;none&quot; , &quot;'&quot; , &quot;);
            }
            else {
                    ValidacionCRS(cb.value.trim(), function (data) {
                        
                        if (data.value.length > 0) {
                            esCRSCiudadNacmientoExt = true;
                            $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;inline-block&quot; , &quot;'&quot; , &quot;)
                        }
                        else {
                            esCRSCiudadNacmientoExt = false;
                            $(&quot; , &quot;'&quot; , &quot;#CiudadNacimiento&quot; , &quot;'&quot; , &quot;).css(&quot; , &quot;'&quot; , &quot;display&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;none&quot; , &quot;'&quot; , &quot;);
                        }
                        });
                }
                VerificaTributaExterior();
       }

function HabilitarControles(cb) {
    if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
        esCRSControles = false;
        $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
        $(&quot;#grupoExterior&quot;).hide();
        $(&quot;#txtPaisEstado&quot;).hide();
        $(&quot;#txtNumCasaExterior&quot;).hide();
        $(&quot;#txtCodigoPostal&quot;).hide();
        $(&quot;.td_extranjero&quot;).hide()
        $(&quot;.td_ecuador&quot;).show();
        $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
        $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
    }
    else {

        ValidacionCRS(cb.value.trim(), function (data) {
            
            if (data.value.length > 0) {
                esCRSControles = true;
                $(&quot;#txtDireccionDomicilioExterior&quot;).show();
                $(&quot;#grupoExterior&quot;).show();
                $(&quot;#txtPaisEstado&quot;).show();
                $(&quot;#txtNumCasaExterior&quot;).show();
                $(&quot;#txtCodigoPostal&quot;).show();
                $(&quot;.td_extranjero&quot;).show();
                $(&quot;.td_ecuador&quot;).hide();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, true).change().attr(&quot;disabled&quot;, true);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;inline-block&quot;);
            }
            else
            {
                esCRSControles = false;
                $(&quot;#txtDireccionDomicilioExterior&quot;).hide();
                $(&quot;#grupoExterior&quot;).hide();
                $(&quot;#txtPaisEstado&quot;).hide();
                $(&quot;#txtNumCasaExterior&quot;).hide();
                $(&quot;#txtCodigoPostal&quot;).hide();
                $(&quot;.td_extranjero&quot;).hide()
                $(&quot;.td_ecuador&quot;).show();
                $(&quot;#chkTributaExterior&quot;).prop(&quot;checked&quot;, false).change().attr(&quot;disabled&quot;, false);
                $(&quot;#CodigoPostal&quot;).css(&quot;display&quot;, &quot;none&quot;);
            }
         });
    }
    ObtenerPrefijosExterior(cb.value);
    VerificaPF()
}

        function HabilitarNacionalidad2(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad2&quot;).show();
            }
            else {
                $(&quot;.nacionalidad2&quot;).hide();
            }
            VerificaTributaExterior();
        }



        function HabilitarNacionalidad3(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                $(&quot;.nacionalidad3&quot;).show();
            }
            else {
                $(&quot;.nacionalidad3&quot;).hide();
            }
            VerificaTributaExterior();
        }

        function HabilitarEsRelacionPersonaPolitica(chk) {
            if (chk.checked) {
                $(&quot;.relacionPersonaPolitica&quot;).show();
            }
            else {
                $(&quot;.relacionPersonaPolitica&quot;).hide();
            }
        }

        function HabilitarDatosTrabajo(cb) {
            if (cb.value.trim() == &quot; , &quot;'&quot; , &quot;EC&quot; , &quot;'&quot; , &quot;) {
                esCRSDatosEmpresa = false;
                $(&quot;#cbProvinciaPublico_chosen&quot;).show();
                $(&quot;#cbCantonPublico_chosen&quot;).show();
                $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                $(&quot;.td_paisexterior&quot;).hide();
                $(&quot;.td_paisecuador&quot;).show();
                $(&quot;#txtTelefonoExterior&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            }
            else {
                ValidacionCRS(cb.value.trim(), function (data) {
                    
                    if (data.value.length > 0) {
                        esCRSDatosEmpresa = true;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).show();
                        $(&quot;.td_paisexterior&quot;).show();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoPublico&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    }
                    else {
                        esCRSDatosEmpresa = false;
                        $(&quot;#cbProvinciaPublico_chosen&quot;).hide();
                        $(&quot;#cbCantonPublico_chosen&quot;).hide();
                        $(&quot;#txtPaisEstadoEmpresa&quot;).hide();
                        $(&quot;.td_paisexterior&quot;).hide();
                        $(&quot;.td_paisecuador&quot;).hide();
                        $(&quot;#txtTelefonoExterior&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                    }
                });
            }
            ObtenerPrefijosExterior(cb.value);
            VerificaTributaExterior();
        }

        function HabilitarTributaExterior(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).show();
                $(&quot;.preguntatributaexterior2&quot;).show();
                $(&quot;.tributaexterior&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior&quot;).hide();
                $(&quot;.preguntatributaexterior2&quot;).hide();
                $(&quot;.tributaexterior&quot;).hide();
            }
        }
        function HabilitarTributaExterior2(chk) {
            if (chk.checked) {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).show();
                $(&quot;.tributaexterior2&quot;).show();
            }
            else {
                $(&quot;#txtNumeroIdentificacionTributariaExterior2&quot;).hide();
                $(&quot;.tributaexterior2&quot;).hide();
            }
        }

function VerificaPF() {
    if ($.inArray($(&quot;#cbPaisResidencia&quot;).val().trim(), arrPaises) > -1 ||
        $.inArray($(&quot;#cbPaisOrigen&quot;).val().trim(), arrPaises) > -1) {
        //DESACTIVO GUARDADO
        $.messager.alert(&quot; , &quot;'&quot; , &quot;S/C en paraiso fiscal&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se puede iniciar la Relación Contractual por pertenecer a Paraiso Fiscal&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).show();
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#divGuardarEnabled&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#divGuardarDisabled&quot; , &quot;'&quot; , &quot;).hide();
    }
}


//Función que realiza acciones según la provincia que se seleccione (empleado público)
function ValidaProvinciaPublico(cb) {
    $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Cantones
        var urlCantones = &quot;/OSCUS.Aplicacion/odata/Cantones?$format=json&amp;$filter=codigoProvincia eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot; &amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlCantones.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultCantones) {
                $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultCantones.value, function (key, value) {
                    $(&quot;#cbCantonPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}

//Función que realiza acciones según el cantón que se seleccione
function ValidaCanton(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Parroquias
        var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} and activo&amp;$orderby=nombre&quot;;
        $.ajax({
            url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (resultParroquias) {
                $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                $.each(resultParroquias.value, function (key, value) {
                    $(&quot;#cbParroquiaReside&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencialGrupoNGN + &quot; , &quot;'&quot; , &quot;|&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                });
                $(&quot;#cbParroquiaReside&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#cbParroquiaReside&quot; , &quot;'&quot; , &quot;).val(0);
    }
        }

        //Función que realiza acciones según el cantón que se seleccione en trabajo
        function ValidaCantonPublico(cb) {
            if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
                
                //Se ingresan datos en comboBox de Parroquias
                var urlParroquias = &quot;/OSCUS.Aplicacion/odata/Zonas?$format=json&amp;$filter=secuencialCanton eq {0} &amp;$orderby=nombre&quot;;
                $.ajax({
                    url: urlParroquias.replace(&quot;{0}&quot;, cb.value),
                    dataType: &quot;json&quot;,
                    cache: &quot;false&quot;,
                    success: function (resultParroquias) {
                        $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        $.each(resultParroquias.value, function (key, value) {
                            $(&quot;#cbParroquiaPublico&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + value.secuencial + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + value.nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                        });
                        $(&quot;#cbParroquiaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                        
                    }
                });
            }
            else {
                $(&quot; , &quot;'&quot; , &quot;#cbParroquiaPublico&quot; , &quot;'&quot; , &quot;).val(0);
            }
        }

//Función que asigna a un asesor dependiendo de la parroquia escogida en el popup Datos Basicos Cliente Nuevo.
function AsignarAsesorDatosBasicos(cb) {
    document.getElementById(&quot; , &quot;'&quot; , &quot;lblAsesorDatosBasicos&quot; , &quot;'&quot; , &quot;).innerHTML = &quot;&quot;;
}

//Función que realiza acciones según el grupo económico que se seleccione
function ValidaGrupoEconomico(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        
        //Se ingresan datos en comboBox de Paises
        var url = &quot;/OSCUS.Aplicacion/odata/ActividadesEconomicas?$format=json&amp;$expand=ActividadesEconomicasNivel4($expand=IndustriasNivelDos($expand=ClasificacionesCreditos))&amp;$filter=codigoRelacionado eq &quot; , &quot;'&quot; , &quot;{0}&quot; , &quot;'&quot; , &quot;&quot;;
        $.ajax({
            url: url.replace(&quot;{0}&quot;, cb.value),
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                $(&quot; , &quot;'&quot; , &quot;#cbClasificacionActividad&quot; , &quot;'&quot; , &quot;).empty().append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot;&quot;>&lt;/option>&quot; , &quot;'&quot; , &quot;);
                for (var i = 0; i &lt; result.value.length; i++) {
                    for (var j = 0; j &lt; result.value[i].ActividadesEconomicasNivel4.length; j++) {
                        for (var k = 0; k &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos.length; k++) {
                            for (var l = 0; l &lt; result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos.length; l++) {
                                $(&quot;#cbClasificacionActividad&quot;).append(&quot; , &quot;'&quot; , &quot;&lt;option value=&quot; , &quot;'&quot; , &quot; + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].codigo + &quot; , &quot;'&quot; , &quot;>&quot; , &quot;'&quot; , &quot; + result.value[i].ActividadesEconomicasNivel4[j].IndustriasNivelDos[k].ClasificacionesCreditos[l].nombre + &quot; , &quot;'&quot; , &quot;&lt;/option>&quot; , &quot;'&quot; , &quot;);
                            }
                        }
                    }
                }
                if (cb.value == &quot; , &quot;'&quot; , &quot;S01&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S02&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S03&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S04&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;S05&quot; , &quot;'&quot; , &quot;)
                    $(&quot;#cbClasificacionActividad&quot;).val(cb.value);
                $(&quot;#cbClasificacionActividad&quot;).chosen().trigger(&quot;chosen:updated&quot;);
                
            }
        });
    }
}


function ValidaEstadoCivil(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; cb.value != &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; calcAge($(&quot;#txtFechaNacimiento&quot;).val()) >= mayoriaEdad || cb.value == &quot; , &quot;'&quot; , &quot;D&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;
        }
        else {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true)
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, false);
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyuge&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                CargarNombreConyuge(numeroClienteConyuge);
        }
    }
}

function ValidaEstadoCivilPasaporte(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;); //Se limpia para que el momento de volver a elegir la fecha de nacimiento muestre lo respectivo
        $(&quot;#tdCheckEnUnionLibre&quot;).hide();
        $(&quot;#tdCheckConDisolucionConyugal&quot;).hide();
        if (cb.value != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; cb.value != &quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtCedulaConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtNombreConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot; &amp;&amp; calcAge($(&quot;#txtFechaNacimientoPasaporte&quot;).val()) >= mayoriaEdad || cb.value == &quot; , &quot;'&quot; , &quot;D&quot; , &quot;'&quot; , &quot; || cb.value == &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot;) {
                $(&quot;#chEnUnionLibre&quot;).prop(&quot;disabled&quot;, false);
                $(&quot;#chConDisolucionConyugal&quot;).prop(&quot; , &quot;'&quot; , &quot;disabled&quot; , &quot;'&quot; , &quot;, true);
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            numeroClienteConyuge = null;

        }
        else {
            if ($(&quot; , &quot;'&quot; , &quot;#chEnUnionLibre&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;)) {
                $(&quot;#tdCheckEnUnionLibre&quot;).show();
            }
            $(&quot;#tdCheckConDisolucionConyugal&quot;).show();
            $(&quot;#txtCedulaConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#txtNombreConyugePasaporte&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            //$(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreConyugePasaporte&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtCedulaConyugePasaporte&quot;).focus();
            if (numeroClienteConyuge &amp;&amp; $(&quot;#txtCodigoDactilar&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) {
                CargarNombreConyuge(numeroClienteConyuge);
            }
        }
        $(&quot;#cbEstadoCivil&quot;).val(cb.value);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
}

function ActivaDesactivaIdentificacion(cb) {
    if (cb.value != &quot;&quot; &amp;&amp; cb.value != &quot;undefined&quot;) {
        $(&quot; , &quot;'&quot; , &quot;#trBloqueB&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueC&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueD&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueE&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#colChkMenorDeEdad&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot;#chkEsMenorDeEdad&quot;).prop(&quot;checked&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#imgBuscarPersonaRegistroCivil&quot; , &quot;'&quot; , &quot;).hide();
        if (cb.value == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#imgBuscarPersonaRegistroCivil&quot; , &quot;'&quot; , &quot;).show();
            $(&quot; , &quot;'&quot; , &quot;#trBloquePasaporte&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot;#txtIdentificacion&quot;).focus();
            field = $(&quot;#txtEmail&quot;);
            $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#colChkMenorDeEdad&quot; , &quot;'&quot; , &quot;).show();
            consultarRegistroCivil = true;
        }
        else {
            ActivaControlesPasaporte();
        }


        if (cb.value == &quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;) {
            $(&quot;#txtIdentificacion&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;readonly&quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente luego de grabar el cliente.&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Cédula&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Nombre&quot; , &quot;'&quot; , &quot;);
            $(&quot;#txtFechaNacimiento&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).hide();
            $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        }
        else {
            $(&quot;#txtIdentificacion&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;readonly&quot;, true);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot;Ingrese: Documento de identidad del cliente&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Documento&quot; , &quot;'&quot; , &quot;);

            $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);

            $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        }
        $(&quot;#txtIdentificacion&quot;).focus();
        $(&quot;#txtIdentificacion&quot;).focus();
    }

}

    function ActivaControlesPasaporte() {
        $(&quot; , &quot;'&quot; , &quot;#trBloquePasaporte&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#trBloqueFacebookSkype&quot; , &quot;'&quot; , &quot;).show();
        field = $(&quot;#txtEmailPasaporte&quot;);
        consultarRegistroCivil = false;
    }


jQuery(function ($) {
    //Funcionalidad de click en boton Cancelar.
    $(&quot;#btnCancelar&quot;).click(function () {
        $.fn.window.defaults.closable = false;
        $.messager.confirm(&quot; , &quot;'&quot; , &quot;Confirmación&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Está seguro que desea cancelar la creación de un nuevo cliente?&quot; , &quot;'&quot; , &quot;, function (r) {
            if (r) {
                window.location.href = &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/&quot; , &quot;'&quot; , &quot;;
            }
        });
    });
});


//Acciones a ejecutarse al abrir el div de Datos.
function DatosAbierto() {
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Datos&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Dirección.
function DireccionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Direccion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Ocupación.
function OcupacionAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Ocupacion&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Situacion Economica.
function SituacionEconomicaAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1SituacionEconomica&quot;).addClass(&quot;boldFont&quot;);
}


//Acciones a ejecutarse al abrir el div de Otros.
function OtrosAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Referencias&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Referencias&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Otros&quot;).addClass(&quot;boldFont&quot;);
}

//Acciones a ejecutarse al abrir el div de Otros.
function ReferenciasAbierto() {
    if ($(&quot;#h1Datos&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Datos&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Direccion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Direccion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1SituacionEconomica&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1SituacionEconomica&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Ocupacion&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Ocupacion&quot;).removeClass(&quot;boldFont&quot;);
    if ($(&quot;#h1Otros&quot;).hasClass(&quot;boldFont&quot;))
        $(&quot;#h1Otros&quot;).removeClass(&quot;boldFont&quot;);
    $(&quot;#h1Referencias&quot;).addClass(&quot;boldFont&quot;);
}

//Funcion que realiza acciones necesarias al dar click en checkbox de convenio institucional
function VerificaConvenio(chk) {
    if (chk.checked) {
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).val(0);
        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;unselectAll&quot; , &quot;'&quot; , &quot;);

        $(&quot;#divConvenioInstitucional&quot;).show();

        //Se cargan los datos en grid de convenio.
        
        var urlConvenioReemplazar = &quot;/OSCUS.Aplicacion/odata/ConvenioCrediNomina?$format=json&amp;$expand=numeroClienteNavigation($select=codigo,nombreUnido;$expand=asesorNegociosNavigation($select=codigoUsuarioNavigation;$expand=codigoUsuarioNavigation($select=nombre)))&amp;$filter=estaActivo eq 0&amp;$select=secuencial,numeroCliente&amp;$orderby=numeroClienteNavigation/nombreUnido&quot;;
        var arrConvenio = new Array();
        $.ajax({
            url: urlConvenioReemplazar,
            dataType: &quot;json&quot;,
            cache: &quot;false&quot;,
            success: function (result) {
                
                if (result.value[0] != null &amp;&amp; result.value[0] != &quot;&quot; &amp;&amp; result.value[0] != undefined) {
                    for (var i = 0; i &lt; result.value.length; i++) {
                        arrConvenio.push({ secuencial: result.value[i].secuencial, numeroCliente: result.value[i].numeroCliente, codigo: result.value[i].numeroClienteNavigation.codigo, nombreUnido: result.value[i].numeroClienteNavigation.nombreUnido, nombre: result.value[i].numeroClienteNavigation.asesorNegociosNavigation.codigoUsuarioNavigation.nombre });
                    }
                    $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrConvenio);
                    $(&quot; , &quot;'&quot; , &quot;#divConvenioInstitucional&quot; , &quot;'&quot; , &quot;).focus();
                }
                else {
                    //Se muestra mensaje informativo de dato no encontrado.
                    $.messager.alert(&quot; , &quot;'&quot; , &quot;Convenio institucional no encontrado&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;No se ha econtrado ningún convenio institucional!&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot;#divConvenioInstitucional&quot;).hide(); });
                }
            }
        });
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;unselectAll&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreEmpleador&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Nombre o razón social de empleador&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbProvinciaPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbProvinciaPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#cbCantonPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#cbCantonPublico&quot;).chosen().trigger(&quot;chosen:updated&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtDireccionPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Dirección&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoPublico&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Teléfono&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoPublico&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoExterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Teléfono Exterior&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#telefonoExterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtTelefonoCelularEmpresa&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Celular&quot; , &quot;'&quot; , &quot;);

        $(&quot;#divConvenioInstitucional&quot;).hide();
    }
}

//Función que retorna el valor del item escogido en grid de convenio institucional.
function getSelected() {
    var row = $(&quot; , &quot;'&quot; , &quot;#grdConvenioInstitucional&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;getSelected&quot; , &quot;'&quot; , &quot;);
    if (row) {
        return row.secuencial;
    }
    else {
        return &quot;&quot;;
    }
}

//Función que valida la fecha de nacimiento para controlar ciertos campos.
function ValidarFechaNacimiento(fechaNacimiento) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;P&quot; , &quot;'&quot; , &quot; &amp;&amp; $(&quot;#cbEstadoCivilPasaporte&quot;).val() == &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;) { //Para pasaporte primero debe ingresar el estado civil
        $.messager.alert(&quot; , &quot;'&quot; , &quot;Campo requerido&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Primero ingrese el Estado civil&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#cbEstadoCivilPasaporte&quot; , &quot;'&quot; , &quot;).trigger(&quot; , &quot;'&quot; , &quot;chosen:activate&quot; , &quot;'&quot; , &quot;); });
        $(&quot;#txtFechaNacimientoPasaporte&quot;).val(&quot;&quot;);
        return;
    }

    if (calcAge(fechaNacimiento.value) &lt; mayoriaEdad &amp;&amp; $(&quot;#cbEstadoCivil&quot;).val() != &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot;) {
        // $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); cuando se actualizaba la fecha de nacimiento se borraban
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Cédula&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

        //$(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;); cuando se actualizaba la fecha de nacimiento se borraban
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Nombre&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).hide();
        $(&quot; , &quot;'&quot; , &quot;#divReferencias&quot; , &quot;'&quot; , &quot;).hide();

        DesabilitaApoderado();
    }
    else {

        $(&quot;#txtRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        //$(&quot; , &quot;'&quot; , &quot;#txtRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Cédula&quot; , &quot;'&quot; , &quot;);

        $(&quot;#txtNombreRepresentante&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreRepresentante&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);

        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#lblSituacionEconomicaActividad&quot; , &quot;'&quot; , &quot;).show();
        $(&quot; , &quot;'&quot; , &quot;#lblReferencias&quot; , &quot;'&quot; , &quot;).show();

        HabilitaApoderado();

        //////nueva carga//////
        //abro div de se
        $(&quot; , &quot;'&quot; , &quot;#divSituacionEconomica&quot; , &quot;'&quot; , &quot;).show();
        //cargo datos
        ObtenerItemsEconomicosCliente(0);
        ObtenerItemsPatrimonialesCliente(0);
        //cierro div se
        $(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);
        /////fin nueva carga////

        $(&quot; , &quot;'&quot; , &quot;#lblEstablecimiento&quot; , &quot;'&quot; , &quot;).hide(&quot; , &quot;'&quot; , &quot;slow&quot; , &quot;'&quot; , &quot;); //MDJR Solo Si es menor de edad mostrar establecimiento

        //metodo anterior de carga, si se pudre el nuevo descomentar
        //$(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);
        //$(&quot;#h1SituacionEconomica&quot;).trigger(&quot; , &quot;'&quot; , &quot;click&quot; , &quot;'&quot; , &quot;);//Si, tiene que estar 2 veces.
    }
    $(&quot;#cbEducacion&quot;).val(0).chosen().trigger(&quot;chosen:updated&quot;);
    $(&quot; , &quot;'&quot; , &quot;#cbEstablecimiento&quot; , &quot;'&quot; , &quot;).val(0).chosen().trigger(&quot;chosen:updated&quot;);
}

//Función que valida la fecha emisión e ingresa automáticamente la fecha caducidad.
function ValidaFechaEmision(fechaEmision) {
    if (fechaEmision.value != &quot;&quot; &amp;&amp; fechaEmision.value != null &amp;&amp; fechaEmision.value != undefined) {
        var tiempoTranscurrido = TimeSpanAniosMesesDias(fechaEmision.value);
        //if (tiempoTranscurrido[0].anios &lt; 2 || (tiempoTranscurrido[0].anios == 2 &amp;&amp; tiempoTranscurrido[0].meses == 0 &amp;&amp; tiempoTranscurrido[0].dias == 0)) {
        if (tiempoTranscurrido[0].anios &lt; 2) {
            var anio = parseInt(fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[2]) + 2;
            var fechaCaducidad = fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[0] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + fechaEmision.value.split(&quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot;)[1] + &quot; , &quot;'&quot; , &quot;/&quot; , &quot;'&quot; , &quot; + anio;
            $(&quot; , &quot;'&quot; , &quot;#txtFechaCaducidad&quot; , &quot;'&quot; , &quot;).val(fechaCaducidad);
        }
        else {
            $(&quot;#txtFechaCaducidad&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            var mensajeCaducidad;
            var mensajeAniosCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            var mensajeMesesCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            var mensajeDiasCaducidad = &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].anios >= 2)
                mensajeAniosCaducidad = tiempoTranscurrido[0].anios + &quot; , &quot;'&quot; , &quot; años&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].meses != 0)
                mensajeMesesCaducidad = tiempoTranscurrido[0].meses + &quot; , &quot;'&quot; , &quot; meses&quot; , &quot;'&quot; , &quot;;
            if (tiempoTranscurrido[0].dias != 0)
                mensajeDiasCaducidad = tiempoTranscurrido[0].dias + &quot; , &quot;'&quot; , &quot; dias&quot; , &quot;'&quot; , &quot;;
            if (mensajeAniosCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeAniosCaducidad + &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;;
            if (mensajeMesesCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeCaducidad + mensajeMesesCaducidad + &quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;;
            if (mensajeDiasCaducidad != &quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
                mensajeCaducidad = mensajeCaducidad + mensajeDiasCaducidad;
            $.fn.window.defaults.closable = false;
            $.messager.alert(&quot; , &quot;'&quot; , &quot;Fecha inválida&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;Según la fecha ingresada han transcurrido: &quot; , &quot;'&quot; , &quot; + mensajeCaducidad + &quot; , &quot;'&quot; , &quot; y por tanto el poder está caducado. (Tiempo de validez máx. 2 años)&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;warning&quot; , &quot;'&quot; , &quot;, function () {
                $(&quot;#txtFechaEmision&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
                $(&quot;#txtFechaEmision&quot;).focus();
            });
            return;
        }

    }
}

var datosCalculoIngresos = {
    ingresos: ko.observable(),
    ingresosAdicionales: ko.observable()
};
datosCalculoIngresos.totalIngresos = ko.dependentObservable(function () {
    return (this.ingresos() - this.ingresosAdicionales()).toFixed(2);
}, datosCalculoIngresos);
ko.applyBindings(datosCalculoIngresos);


function AbrirVentanaClientesHomonimos() {
    $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;open&quot; , &quot;'&quot; , &quot;);
}

function CierraClientesHomonimos() {
    $.fn.window.defaults.closable = false;
    $(&quot; , &quot;'&quot; , &quot;#dlgListaHomonimos&quot; , &quot;'&quot; , &quot;).dialog(&quot; , &quot;'&quot; , &quot;close&quot; , &quot;'&quot; , &quot;);
}




function ValidaIngreso(valorIngresado) {
    if ($(&quot;#cbTipoDocumento&quot;).val() == &quot; , &quot;'&quot; , &quot;C&quot; , &quot;'&quot; , &quot; &amp;&amp; valorIngresado.value.trim() == &quot;&quot; &amp;&amp; valorIngresado.value.trim() == &quot;undefined&quot;) {
        if (!VerificarNumeroCedula(valorIngresado.value.trim())) {
            $.messager.alert(&quot; , &quot;'&quot; , &quot;Cédula incorrecta&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;El número de cédula es incorrecto&quot; , &quot;'&quot; , &quot;, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;, function () { $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus(); });
        }
        else
            ListaControl();
    }

}


function calcularTotalIngresos() {
    if ($(&quot;#txtIngresos&quot;).val() != &quot;&quot; &amp;&amp; $(&quot;#txtIngresosAdicionales&quot;).val() != &quot;&quot;) {
        $(&quot;#txtTotalIngresos&quot;).val(parseFloat(parseFloat($(&quot;#txtIngresos&quot;).val()) + parseFloat($(&quot;#txtIngresosAdicionales&quot;).val())).toFixed(2));
    }
}

function formatNumeroCliente(val, row) {
    var url = &quot;Consolidado?id=&quot;;
    return &quot; , &quot;'&quot; , &quot;&lt;a href=&quot;&quot; , &quot;'&quot; , &quot; + url + encodeStr(Encrypt(row.numeroCliente.toString())) + &quot; , &quot;'&quot; , &quot;&quot;>&quot; , &quot;'&quot; , &quot; + val + &quot; , &quot;'&quot; , &quot;&lt;/a>&quot; , &quot;'&quot; , &quot;;
}

function ImprimirActualizacion() {
    
    var urlRegistraImpresion = &quot;osapi/ServiceCliente.svc/RegistrarImpresionActualizaDatosClientes&quot;;
    $.ajax({
        url: urlRegistraImpresion,
        type: &quot;POST&quot;,
        data: JSON.stringify({
            numeroCliente: numeroClienteGenerado,
            usuarioActualizo: codigoUsuarioActual
        }),
        datatype: &quot;json&quot;,
        contentType: &quot;application/json; charset=utf-8&quot;,
        success: function (resultado) {
            
            $.fn.window.defaults.closable = false;
            if (resultado.Correcto) {
                var identificacion = $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).val();

                    $.ajax({
                                    url: &quot; , &quot;'&quot; , &quot;/OSCUS.Aplicacion/Cliente/ImprimeFormularioActualizacionDatos&quot; , &quot;'&quot; , &quot;,
                                    method: &quot; , &quot;'&quot; , &quot;POST&quot; , &quot;'&quot; , &quot;,
                                    contentType: &quot;application/json; charset=utf-8&quot;,
                    data: JSON.stringify({
                        caso: &quot; , &quot;'&quot; , &quot;N&quot; , &quot;'&quot; , &quot;,
                        identificacion: identificacion}),
                    dataType: &quot;text&quot;,
                    success: function (r) {
                        window.open(r);
                    }
                });

            }
            else {
                $.messager.alert(&quot; , &quot;'&quot; , &quot;Error&quot; , &quot;'&quot; , &quot;, resultado.Informacion, &quot; , &quot;'&quot; , &quot;error&quot; , &quot;'&quot; , &quot;);
            }
        },
    });
}

function HabilitarCampos(chk) {
    $(&quot; , &quot;'&quot; , &quot;#chConDisolucionConyugal&quot; , &quot;'&quot; , &quot;).prop(&quot; , &quot;'&quot; , &quot;checked&quot; , &quot;'&quot; , &quot;, false);
    if (chk.checked) {
        $(&quot;#cbEstadoCivil&quot;).val(&quot; , &quot;'&quot; , &quot;U&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    else {
        $(&quot;#cbEstadoCivil&quot;).val(&quot; , &quot;'&quot; , &quot;S&quot; , &quot;'&quot; , &quot;);
        $(&quot;#cbEstadoCivil&quot;).chosen().trigger(&quot;chosen:updated&quot;);
    }
    ValidaEstadoCivil(document.getElementById(&quot; , &quot;'&quot; , &quot;cbEstadoCivil&quot; , &quot;'&quot; , &quot;));
}

function DeshabilitarConyuge(chk) {
    if (chk.checked) {
        $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
    }
    else {
        $(&quot;#txtCedulaConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtCedulaConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;D.I Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtNombreConyuge&quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Este campo se llena automáticamente&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtNombreConyuge&quot; , &quot;'&quot; , &quot;).attr(&quot;placeholder&quot;, &quot; , &quot;'&quot; , &quot;Apellidos y Nombres del Cónyuge&quot; , &quot;'&quot; , &quot;);
        $(&quot;#txtCedulaConyuge&quot;).focus();
    }
    numeroClienteConyuge = null;
}

function ObtenerItemsEconomicosCliente(numeroCliente) {
    if (arrIngresos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaIemsEconomicosClientes&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalIngresos = 0;
                    var totalGastos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].tiempoActividad == 1) {
                            totalIngresos += resultado[i].activos;
                            arrIngresos.push(resultado[i]);
                        }
                        else {
                            totalGastos += resultado[i].activos;
                            arrGastos.push(resultado[i]);
                        }
                    }
                    if (arrIngresos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalIngresos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalIngresos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdIngresos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrIngresos);
                    }
                    if (arrGastos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalGastos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalGastos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdGastos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrGastos);
                    }

                }
            },
        });
    }
}

function ObtenerItemsPatrimonialesCliente(numeroCliente) {
    if (arrActivos.length == 0) {
        
        var urlGetListaItems = &quot;osapi/ServiceCliente.svc/ListaItemsPatrimonialesCliente&quot;;
        $.ajax({
            url: urlGetListaItems,
            type: &quot;POST&quot;,
            data: JSON.stringify({
                numeroCliente: numeroCliente,
            }),
            datatype: &quot;json&quot;,
            contentType: &quot;application/json; charset=utf-8&quot;,
            success: function (resultado) {
                
                if (resultado.length > 0) {
                    var totalActivos = 0;
                    var totalPasivos = 0;
                    for (var i = 0; i &lt; resultado.length; i++) {
                        if (resultado[i].actividadSecundaria == &quot; , &quot;'&quot; , &quot;1&quot; , &quot;'&quot; , &quot;) {
                            totalActivos += resultado[i].activos;
                            arrActivos.push(resultado[i]);
                        }
                        else {
                            totalPasivos += resultado[i].activos;
                            arrPasivos.push(resultado[i]);
                        }
                    }
                    if (arrActivos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalActivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalActivos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdActivos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrActivos);
                    }
                    if (arrPasivos.length > 0) {
                        $(&quot; , &quot;'&quot; , &quot;#txtTotalPasivos&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;$ &quot; , &quot;'&quot; , &quot; + totalPasivos.toFixed(2));
                        $(&quot; , &quot;'&quot; , &quot;#grdPasivos&quot; , &quot;'&quot; , &quot;).datagrid(&quot; , &quot;'&quot; , &quot;loadData&quot; , &quot;'&quot; , &quot;, arrPasivos);
                    }
                }
            },
        });
    }
}

function ActivarDesactivarDatosPrimerTrabajo(queProfesion, origenIngresos) {
    //272 -> estudiante, 000 -> ninguna, V->E. Privado, B-> E. publico
    //if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot; || (origenIngresos != &quot; , &quot;'&quot; , &quot;V&quot; , &quot;'&quot; , &quot; &amp;&amp; origenIngresos != &quot; , &quot;'&quot; , &quot;B&quot; , &quot;'&quot; , &quot;)) {
    if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
        $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
        if (queProfesion == &quot; , &quot;'&quot; , &quot;272&quot; , &quot;'&quot; , &quot; || queProfesion == &quot; , &quot;'&quot; , &quot;000&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).val(0);
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
        else {
            $(&quot; , &quot;'&quot; , &quot;#cbOrigenIngresos&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
            $(&quot;#cbOrigenIngresos&quot;).chosen().trigger(&quot;chosen:updated&quot;);
        }
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        //$(&quot;#chkPrimerTrabajo&quot;).prop(&quot;checked&quot;, true);
        if ($(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val() == &quot; , &quot;'&quot; , &quot;01/01/1960&quot; , &quot;'&quot; , &quot;) {
            $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
            $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        }
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha inicio trabajo anterior&quot; , &quot;'&quot; , &quot;);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha fin trabajo anterior&quot; , &quot;'&quot; , &quot;);
    }
}

function ActivarFechasInicioFin() {
    if (($(&quot; , &quot;'&quot; , &quot;#chkPrimerTrabajo&quot; , &quot;'&quot; , &quot;).is(&quot; , &quot;'&quot; , &quot;:checked&quot; , &quot;'&quot; , &quot;) == true)) {
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);

        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;title&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, true);
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaInicioTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha inicio trabajo anterior&quot; , &quot;'&quot; , &quot;);


        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).datepicker(&quot;option&quot;, &quot;disabled&quot;, false);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).addClass(&quot; , &quot;'&quot; , &quot;masterTooltip&quot; , &quot;'&quot; , &quot;);
        $(&quot; , &quot;'&quot; , &quot;#txtFechaFinTrabajoAnterior&quot; , &quot;'&quot; , &quot;).attr(&quot;title&quot;, &quot; , &quot;'&quot; , &quot;Ingrese: Fecha fin trabajo anterior&quot; , &quot;'&quot; , &quot;);
    }
}

function CopiarCargoToDescripcion() {
    $(&quot;#txtDescripcionActividadEconomicaActual&quot;).val($(&quot;#txtCargoPublico&quot;).val().trim());
}

function CloseWindowRegistroHuellas() {
    $ = jQuery.noConflict();
    if (impresionFormularioPendiente)
        ImprimirActualizacion();
}

function DeshabilitarCodigoDactilar(chk) {
    if (chk.checked) {
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).val(&quot; , &quot;'&quot; , &quot;&quot; , &quot;'&quot; , &quot;)
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).attr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    else {
        $(&quot; , &quot;'&quot; , &quot;#txtCodigoDactilar&quot; , &quot;'&quot; , &quot;).removeAttr(&quot;disabled&quot;, &quot;disabled&quot;);
    }
    $(&quot; , &quot;'&quot; , &quot;#txtIdentificacion&quot; , &quot;'&quot; , &quot;).focus();
        }


    




                        Clientes
                        Ruta Asesor
                        
                            Simulador CDP
                        
                        
                            Consultar Buro
                        
                        
                        

                        
                            Cerrar sesion
                        
                    NUEVO CLIENTE
    
        
        

        
            
                
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                    
                                
                                
                                    
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                    
                                
                            
                            
                                
                                    
                                
                                
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                        
                    
                
                
                    
                        
                            
                                
                                    
                                        DATOS CLIENTE HOMÓNIMO
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                    
                                    
                                    
                                
                            
                        
                    
                    
                        
                            
                                
                                    
                                        
                                        
                                        
                                        
                                        
                                        
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        Sexo: 
                                        
                                        Hombre
                                        
                                        Mujer
                                        Estado civil:
                                        
                                            
                                            Soltero(a)
                                            Casado(a)
                                            Viudo(a)
                                            Divorciado(a)
                                            Unión libre
                                        Estado civil...
                                    
                                
                                
                                    
                                        Género: 
                                        
                                        Masculino
                                        
                                        Femenino
                                    
                                
                            
                            
                                
                                    
                                        
                                        Instrucción:
                                        
                                            
                                            Sin Estudios
                                            Formación Intermedia
                                            Primaria
                                            Secundaria
                                            Universitaria
                                            Postgrado
                                        Educación...
                                    
                                
                            
                        
                        
                            
                                
                                    
                                        
                                        
                                            
                                            Propia hipotecada
                                            Propia no hipotecada
                                            Arrendada
                                            Prestada
                                            Vive con familiares
                                        Vivienda...
                                    
                                
                                
                                    
                                        
                                        ACTIVIDADES ADMINISTRATIVAS Y DE APOYO DE OFICINA Y OTRAS ACTIVIDADES DE APOYO A LAS EMPRESAS.                                                                                                          ACTIVIDADES AUXILIARES DE LAS ACTIVIDADES DE SERVICIOS FINANCIEROS.                                                                                                                                     ACTIVIDADES CREATIVAS, ARTÍSTICAS Y DE ENTRETENIMIENTO.                                                                                                                                                 ACTIVIDADES DE AGENCIAS DE VIAJES, OPERADORES TURÍSTICOS, SERVICIOS DE RESERVAS Y ACTIVIDADES CONEXAS.                                                                                                  ACTIVIDADES DE ALOJAMIENTO.                                                                                                                                                                             ACTIVIDADES DE ALQUILER Y ARRENDAMIENTO.                                                                                                                                                                ACTIVIDADES DE ARQUITECTURA E INGENIERÍA; ENSAYOS Y ANÁLISIS TÉCNICOS.                                                                                                                                  ACTIVIDADES DE ASISTENCIA SOCIAL SIN ALOJAMIENTO.                                                                                                                                                       ACTIVIDADES DE ASOCIACIONES.                                                                                                                                                                            ACTIVIDADES DE ATENCIÓN DE LA SALUD HUMANA.                                                                                                                                                             ACTIVIDADES DE ATENCIÓN EN INSTITUCIONES.                                                                                                                                                               ACTIVIDADES DE BIBLIOTECAS, ARCHIVOS, MUSEOS Y OTRAS ACTIVIDADES CULTURALES.                                                                                                                            ACTIVIDADES DE DESCONTAMINACIÓN Y OTROS SERVICIOS DE  GESTIÓN DE DESECHOS.                                                                                                                              ACTIVIDADES DE EMPLEO.                                                                                                                                                                                  ACTIVIDADES DE JUEGOS DE AZAR Y APUESTAS.                                                                                                                                                               ACTIVIDADES DE LOS HOGARES COMO EMPLEADORES DE PERSONAL DOMÉSTICO.                                                                                                                                      ACTIVIDADES DE OFICINAS PRINCIPALES; ACTIVIDADES DE CONSULTORÍA DE GESTIÓN.                                                                                                                             ACTIVIDADES DE ORGANIZACIONES Y ÓRGANOS EXTRATERRITORIALES.                                                                                                                                             ACTIVIDADES DE PRODUCCIÓN DE PELÍCULAS CINEMATOGRÁFICAS, VÍDEOS Y PROGRAMAS DE TELEVISIÓN, GRABACIÓN DE SONIDO Y EDICIÓN DE MÚSICA.                                                                     ACTIVIDADES DE PROGRAMACIÓN Y TRANSMISIÓN.                                                                                                                                                              ACTIVIDADES DE PUBLICACIÓN.                                                                                                                                                                             ACTIVIDADES DE SEGURIDAD E INVESTIGACIÓN.                                                                                                                                                               ACTIVIDADES DE SERVICIOS A EDIFICIOS Y PAISAJISMO.                                                                                                                                                      ACTIVIDADES DE SERVICIOS DE APOYO PARA LA EXPLOTACIÓN DE MINAS Y CANTERAS.                                                                                                                              ACTIVIDADES DE SERVICIOS DE INFORMACIÓN.                                                                                                                                                                ACTIVIDADES DE SERVICIOS FINANCIEROS, EXCEPTO LAS DE SEGUROS Y FONDOS DE PENSIONES.                                                                                                                     ACTIVIDADES DEPORTIVAS, DE ESPARCIMIENTO Y RECREATIVAS.                                                                                                                                                 ACTIVIDADES ESPECIALIZADAS DE LA CONSTRUCCIÓN.                                                                                                                                                          ACTIVIDADES INMOBILIARIAS.                                                                                                                                                                              ACTIVIDADES JURÍDICAS Y DE CONTABILIDAD.                                                                                                                                                                ACTIVIDADES NO DIFERENCIADAS DE LOS HOGARES COMO PRODUCTORES DE BIENES Y SERVICIOS PARA USO PROPIO.                                                                                                     ACTIVIDADES POSTALES Y DE MENSAJERÍA.                                                                                                                                                                   ACTIVIDADES VETERINARIAS.                                                                                                                                                                               ADMINISTRACIÓN PÚBLICA Y DEFENSA; PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                                                 AGRICULTURA, GANADERÍA, CAZA Y ACTIVIDADES DE SERVICIOS CONEXAS.                                                                                                                                        ALMACENAMIENTO Y ACTIVIDADES DE APOYO AL TRANSPORTE.                                                                                                                                                    AMA DE CASA                                                                                                                                                                                             CAPTACIÓN, TRATAMIENTO Y DISTRIBUCIÓN DE AGUA.                                                                                                                                                          COMERCIO AL POR MAYOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO AL POR MENOR, EXCEPTO EL DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                              COMERCIO Y REPARACIÓN DE VEHÍCULOS AUTOMOTORES Y MOTOCICLETAS.                                                                                                                                          CONSTRUCCIÓN DE EDIFICIOS.                                                                                                                                                                              ELABORACIÓN DE BEBIDAS.                                                                                                                                                                                 ELABORACIÓN DE PRODUCTOS ALIMENTICIOS.                                                                                                                                                                  ELABORACIÓN DE PRODUCTOS DE TABACO.                                                                                                                                                                     EMPLEADO PRIVADO                                                                                                                                                                                        EMPLEADO PÚBLICO                                                                                                                                                                                        ENSEÑANZA.                                                                                                                                                                                              ESTUDIANTE                                                                                                                                                                                              EVACUACIÓN DE AGUAS RESIDUALES.                                                                                                                                                                         EXPLOTACIÓN DE OTRAS MINAS Y CANTERAS.                                                                                                                                                                  EXTRACCIÓN DE CARBÓN DE PIEDRA Y LIGNITO.                                                                                                                                                               EXTRACCIÓN DE MINERALES METALÍFEROS.                                                                                                                                                                    EXTRACCIÓN DE PETRÓLEO CRUDO Y GAS NATURAL.                                                                                                                                                             FABRICACIÓN DE COQUE Y DE PRODUCTOS DE LA REFINACIÓN DEL PETRÓLEO.                                                                                                                                      FABRICACIÓN DE CUEROS Y PRODUCTOS CONEXOS.                                                                                                                                                              FABRICACIÓN DE EQUIPO ELÉCTRICO.                                                                                                                                                                        FABRICACIÓN DE MAQUINARIA Y EQUIPO N.C.P.                                                                                                                                                               FABRICACIÓN DE METALES COMUNES.                                                                                                                                                                         FABRICACIÓN DE MUEBLES.                                                                                                                                                                                 FABRICACIÓN DE OTROS PRODUCTOS MINERALES NO METÁLICOS.                                                                                                                                                  FABRICACIÓN DE OTROS TIPOS DE EQUIPOS DE TRANSPORTE.                                                                                                                                                    FABRICACIÓN DE PAPEL Y DE PRODUCTOS DE PAPEL.                                                                                                                                                           FABRICACIÓN DE PRENDAS DE VESTIR.                                                                                                                                                                       FABRICACIÓN DE PRODUCTOS DE CAUCHO Y PLÁSTICO.                                                                                                                                                          FABRICACIÓN DE PRODUCTOS DE INFORMÁTICA, ELECTRÓNICA Y ÓPTICA.                                                                                                                                          FABRICACIÓN DE PRODUCTOS ELABORADOS DE METAL, EXCEPTO MAQUINARIA Y EQUIPO.                                                                                                                              FABRICACIÓN DE PRODUCTOS FARMACÉUTICOS, SUSTANCIAS QUÍMICAS MEDICINALES Y PRODUCTOS BOTÁNICOS DE USO FARMACÉUTICO.                                                                                      FABRICACIÓN DE PRODUCTOS TEXTILES.                                                                                                                                                                      FABRICACIÓN DE SUBSTANCIAS Y PRODUCTOS QUÍMICOS.                                                                                                                                                        FABRICACIÓN DE VEHÍCULOS AUTOMOTORES, REMOLQUES Y SEMIRREMOLQUES.                                                                                                                                       IMPRESIÓN Y REPRODUCCIÓN DE GRABACIONES.                                                                                                                                                                INVESTIGACIÓN CIENTÍFICA Y DESARROLLO.                                                                                                                                                                  JUBILADO                                                                                                                                                                                                OBRAS DE INGENIERÍA CIVIL.                                                                                                                                                                              OTRAS ACTIVIDADES DE SERVICIOS PERSONALES.                                                                                                                                                              OTRAS ACTIVIDADES PROFESIONALES, CIENTÍFICAS Y TÉCNICAS.                                                                                                                                                OTRAS INDUSTRIAS MANUFACTURERAS.                                                                                                                                                                        PESCA Y ACUICULTURA.                                                                                                                                                                                    PRODUCCIÓN DE MADERA Y FABRICACIÓN DE PRODUCTOS DE MADERA Y CORCHO, EXCEPTO MUEBLES; FABRICACIÓN DE ARTÍCULOS DE PAJA Y DE MATERIALES TRENZABLES.                                                       PROGRAMACIÓN INFORMÁTICA, CONSULTORÍA DE INFORMÁTICA Y ACTIVIDADES CONEXAS.                                                                                                                             PUBLICIDAD Y ESTUDIOS DE MERCADO.                                                                                                                                                                       RECOLECCIÓN, TRATAMIENTO Y ELIMINACIÓN DE DESECHOS, RECUPERACIÓN DE MATERIALES.                                                                                                                         REPARACIÓN DE COMPUTADORES Y DE EFECTOS PERSONALES Y ENSERES DOMÉSTICOS.                                                                                                                                REPARACIÓN E INSTALACIÓN DE MAQUINARIA Y EQUIPO.                                                                                                                                                        SEGUROS, REASEGUROS Y FONDOS DE PENSIONES, EXCEPTO LOS PLANES DE SEGURIDAD SOCIAL DE AFILIACIÓN OBLIGATORIA.                                                                                            SERVICIO DE ALIMENTO Y BEBIDA.                                                                                                                                                                          SILVICULTURA Y EXTRACCIÓÍA ACUÁTICA.                                                                                                                                                                            TRANSPORTE POR VÍA AÉREA.                                                                                                                                                                               TRANSPORTE POR VÍA TERRESTRE Y POR TUBERÍAS.                                                                                                                                                            Grupo Económico... 
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Actividad Económica...
                                    
                                
                                
                                    
                                        
                                        AFARES Y LOS ISSASAFGANISTANALEMANIAANDORRAANGUILAANTIGUA Y BARBUDAANTILLAS NEERLANDESAARABIA SAUDITAARCHIPIELAGO DE SVALBARDARGELIAARGENTINAARMENIAARUBAAUSTRALIAAUSTRIAAZERBAIYANBANGLADESHBARBADOSBELGICABELICEBENINBERMUDASBOLIVIABONAIRE,SABA YSAN EUSTAQUIOBOSNIA-HERCEGOVINABOTSWANABRASILBRUNEI DARUSSALAMBULGARIABURMABURQUINA FASOBURUNDIBUTANCAMBOYACAMERUNCAMORASCAMPIONE DITALIACANADACHADCHECOSLOVAQUIACHILECHINACIUDAD DEL VATICANOCOLOMBIACOLONIA DE GIBRALTARCOMUNIDAD DE LAS BAHAMASCONGOCOREA DEL NORTECOREA DEL SURCOSTA DE MARFILCOSTA RICACROACIACUBACURAZAODAHOMEYDINAMARCAECUADOREGIPTOEL SALVADOREMIRATOS ARABES UNIDERITREAESLOVAQUIAESLOVENIAESPAÑAESTADO ASOCIADO DE GRANADAESTADO DE BAHREINESTADO DE KUWAITESTADO LIBRE ASOCIADO DE PUERTO RICOESTADOS UNIDOSESTONIAETIOPIAEUROPAFEDERACION DE SAN CRISTOBAL FIJIFILIPINASFINLADIAFIYIFRANCIAGABONGHANAGRAN DUCADO LUXEMBURGOGRECIAGROENLANDIAGUADALUPEGUAMGUATEMALAGUAYANA FRANCESAGUINEAGUINEA BISSAUGUINEA ECUATORIALHAITIHONDURASHONG KONGHUNGRIAINDIAINDONESIAIRANIRAQIRLANDAISLA DE ASCENSIÓNISLA DE MANISLA DE PASCUAISLA DE SAN PEDRO Y MIGUELONISLA JOHNSTONISLA NORFOLKISLA QESHMISLA WAKEISLANDIAISLAS AZORESISLAS CAIMANISLAS CANTON Y ENDERISLAS CHRISTMASISLAS COCOS O KEELINGISLAS COOKISLAS DEL CANAL ISLAS DEL PACIFICOISLAS DEL PACIFICO (ISLAS FEROEISLAS GILBERT ELLICEISLAS HEARD Y MCDONAISLAS MALVINASISLAS MIDWAYISLAS SALOMONISLAS TURKAS Y CAICOISLAS VIRGENES BRITANICASISLAS VIRGENES BRITANICASISLAS VIRGENES DE ESTADOS UNIDOS DE AMERICAISLAS WALLIS FUTUNAISRAELITALIAJAMAICAJAPONKAMPUCHEA DEMOCRATICKAZAJSTÁNKENIAKIRIBATILABUANLAOSLATVIALESOTHOLIBANOLIBIAMACAOMACEDONIAMADAGASCARMADEIRA (TERRITORIO DE PORTUGAL)MALASIAMALAWIMALIMANCOMUNIDAD DE DOMINICAMARRUECOSMARTINICAMAURITANIAMEXICOMICRONESIAMONGOLIAMONSERRAT MONTSERRATMOZAMBIQUEMYANMAR (ex Birmania)NAMIBIANEPALNICARAGUANIGERNIGERIANIUENORUEGANUEVA CALEDONIANUEVA ZELANDANUEVAS HÉBRIDASPAISES BAJOSPAKISTANPALAUPALESTINAPAPUA NUEVA GUINEAPARAGUAYPERUPITCAIRNPOLINESIA FRANCESAPOLONIAPORTUGALPRINCIPADO DE LIECHTENSTEINPRINCIPADO DE MONACOQATARREINO DE TONGAREINO HACHEMITA  DE JORDANIAREINO SWAZILANDIAREINO UNIDOREPUBLICA ALBANIAREPUBLICA ANGOLAREPUBLICA CABO VERDEREPUBLICA CENTROAFRIREPUBLICA CHECAREPUBLICA CHIPREREPUBLICA COOPERATIVA GUYANAREPUBLICA DE DJIBOUTIREPUBLICA DE LAS ISLAS MARSHALLREPUBLICA DE LIBERIA REPUBLICA DE LIBERIAREPUBLICA DE MALDIVASREPUBLICA DE MALTAREPUBLICA DE MAURICIOREPUBLICA DE MOLDOVAREPUBLICA DE NAURUREPUBLICA DE PANAMAREPUBLICA DE SEYCHELLESREPUBLICA DE TRINIDAD Y TOBAGOREPUBLICA DE TUNEZREPUBLICA DE VANUATUREPUBLICA DEL YEMEN REPUBLICA DEMOCRATICA SOCIALISTA DE SRI LANKAREPUBLICA DOMINICANAREUNIONRHODESIA DEL SURRSS DE BIOLORRUSIARSS DE UCRANIARUMANIARUSIARWANDASAHARA OCCIDENTALSAMOA AMERICANASAMOA OCCIDENTALSAN MARTINSAN VICENTE Y LAS GRANADINASSANTA ELENASANTA LUCIASANTO TOMÉ Y PRINCIPESENEGALSERENISIMA REPUBLICA DE SAN MARINOSIERRA LEONASIKKIMSINGAPURSIRIASOMALIASUDAFRICASUDÁFRICASUDANSUECIASUIZASULTANADO DE OMANSURINAMESVALBART Y JAN MAYENTAILANDIATAIWANTANZANIATOGOTOKELAUTRISTAN DA CUNHA TURQUIATUVALUUGANDAUNION SOVIETICA SOCIURUGUAYVENEZUELAVIETNAMYEMENYUGOSLAVIAZAIREZAMBIAZIMBABUEZONA LIBRE DE OSTRAVAECUADOR
                                    
                                
                            
                            
                                
                                    
                                        
                                        AZUAY                                             BOLIVAR                                           CAÑAR                                             CARCHI                                            CHIMBORAZO                                        COTOPAXI                                          EL ORO                                            ESMERALDAS                                        GALAPAGOS                                         GUAYAS                                            IMBABURA                                          LOJA                                              LOS RIOS                                          MANABI                                            MORONA SANTIAGO                                   NAPO                                              ORELLANA                                          PASTAZA                                           PICHINCHA                                         SANTA ELENA                                       SANTO DOMINGO DE LOS TSACHILAS                    SUCUMBIOS                                         TUNGURAHUA                                        ZAMORA CHINCHIPE                                  Provincia...
                                    
                                
                                
                                    
                                        
                                        
                                            
                                        Cantón...
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                            
                                        Parroquia...
                                    
                                
                                
                                    
                                        
                                        
                                    
                                
                            

                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        Asesor:
                                        
                                        
                                    
                                
                            
                            
                                
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                        
                                    
                                    
                                
                            
                        
                    
                
            
        
    
CLIENTES HOMÓNIMOS
    
        
            
                
                    
                        Clientes homónimos encontradosNº Cliente Código Dir. Domicilio Representante 
                            
                                
                                    Nº Cliente
                                    Código
                                    Dir. Domicilio
                                    Representante
                                
                            
                        
.datagrid-cell-c6-numeroCliente{width:52px}
.datagrid-cell-c6-codigo{width:72px}
.datagrid-cell-c6-direccionDomicilio{width:292px}
.datagrid-cell-c6-representantePrincipal{width:72px}

                    
                
            
            
                
                    
                
            
        
    
New Dialog
DI Nombre 
    
        
            DI
            Nombre
         
    

.datagrid-cell-c7-codigo{width:22px}
.datagrid-cell-c7-nombreUnido{width:92px}

Ok INDICIOS CRS (Estandar Común de Reportes)
    
        El socio/cliente presenta indicios de CRS por locual usted debe solicitar evidencia documental como:
        Si el País de nacimiento/Nacionalidad diferente de Ecuador:
        
            Documento de identificación que demuestre la nacionalidad ecuatoriana
            Certificado de renuncia a la nacionalidad
            Abandono de permiso de estado residente
        
        Si el País de residencia diferente de Ecuador/Teléfono de contacto en el exterior
        
            Documento actualizado de servicio básico a nombre del socio/cliente (Luz,agua potable, predio urbano)
            Certificado de residencia expedido por una autoridad u organismo ecuatoriano
            Declaración del impuesto a la renta o formulario 107 en caso de relación de dependencia
        
    
    
        
    
Datos de simulador CDP
                
                    
                    
                    
                
                
                    Procesando...
                
            SimuladorCancelarConsuta buró tarjetas de crédito
                
                    
                    Score
                    
                    Cupo recomendado
                    
                
                
                    Procesando...
                
            ConsultarCancelarSeleccionar oportunidad
                
                    OportunidadesId Tipo persona Oportunidad Tipo Fuente Importe Producto Agencia Propietario Propietario 
                        
                            
                                Id
                                Tipo persona
                                Oportunidad
                                Tipo
                                Fuente
                                Importe
                                Producto
                                Agencia
                                Propietario
                                Propietario
                            
                        
                    
.datagrid-cell-c8-id{width:92px}
.datagrid-cell-c8-Tipo_de_persona{width:77px}
.datagrid-cell-c8-Deal_Name{width:192px}
.datagrid-cell-c8-Type{width:72px}
.datagrid-cell-c8-Lead_Source{width:72px}
.datagrid-cell-c8-Amount{width:72px}
.datagrid-cell-c8-Producto{width:72px}
.datagrid-cell-c8-Agencia{width:52px}
.datagrid-cell-c8-Owner-name{width:72px}
.datagrid-cell-c8-Owner-email{width:72px}

                
                
                    Procesando...
                
            CancelarAnteriorSiguienteEneFebMarAbrMayJunJulAgoSepOctNovDic18231824182518261827182818291830183118321833183418351836183718381839184018411842184318441845184618471848184918501851185218531854185518561857185818591860186118621863186418651866186718681869187018711872187318741875187618771878187918801881188218831884188518861887188818891890189118921893189418951896189718981899190019011902190319041905190619071908190919101911191219131914191519161917191819191920192119221923192419251926192719281929193019311932193319341935193619371938193919401941194219431944194519461947194819491950195119521953195419551956195719581959196019611962196319641965196619671968196919701971197219731974197519761977197819791980198119821983198419851986198719881989199019911992199319941995199619971998199920002001200220032004200520062007200820092010201120122013201420152016201720182019202020212022DoLuMaMiJuViSa      123456789101112131415161718192021222324252627282930      /html[1]/body[1]/div[@class=&quot;panel window messager-window&quot;]/div[@class=&quot;messager-body panel-body panel-body-noborder window-body&quot;]/div[@class=&quot;messager-progress&quot;]/div[@class=&quot;messager-p-bar progressbar&quot;]/div[@class=&quot;progressbar-text&quot;]InformaciónEstamos procesando su solicitud...Estamos procesando su solicitud...&quot;))]</value>
      <webElementGuid>f50d0c8b-4bb9-4fd6-9afd-3f3b047e9b94</webElementGuid>
   </webElementXpaths>
</WebElementEntity>
